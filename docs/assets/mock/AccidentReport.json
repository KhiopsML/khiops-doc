{
	"tool": "Khiops",
	"version": "10.0.4",
	"shortDescription": "",
	"modelingReport": {
		"reportType": "Modeling",
		"summary": {
			"dictionary": "Accident",
			"database": "s3:\/\/\/project\/c29961bb-8cc3-4c58-bf47-5cf216b361ef\/NewAccident\/Accidents.txt_sorted",
			"samplePercentage": 70,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity"
		},
		"trainedPredictors": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"variables": 34
			}
		],
		"trainedPredictorsDetails": {
			"R1": {
				"selectedVariables": [
					{
						"preparedName": "PInAgglomeration",
						"name": "InAgglomeration",
						"level": 0.0588135,
						"weight": 0.422882,
						"importance": 0.157706
					},
					{
						"preparedName": "PCollisionType",
						"name": "CollisionType",
						"level": 0.0359826,
						"weight": 0.448273,
						"importance": 0.127004
					},
					{
						"preparedName": "PDepartment",
						"name": "Department",
						"level": 0.0515375,
						"weight": 0.236359,
						"importance": 0.110369
					},
					{
						"preparedName": "PPlace.RoadMarkerDistance",
						"name": "Place.RoadMarkerDistance",
						"level": 0.0482013,
						"weight": 0.179718,
						"importance": 0.0930733
					},
					{
						"preparedName": "PMode(Vehicles.Mode(Users.SafetyDeviceUsed))",
						"name": "Mode(Vehicles.Mode(Users.SafetyDeviceUsed))",
						"level": 0.00878912,
						"weight": 0.929718,
						"importance": 0.0903958
					},
					{
						"preparedName": "PCommune",
						"name": "Commune",
						"level": 0.025324,
						"weight": 0.314484,
						"importance": 0.0892412
					},
					{
						"preparedName": "PPlace.RoadNumber",
						"name": "Place.RoadNumber",
						"level": 0.055489,
						"weight": 0.139679,
						"importance": 0.0880377
					},
					{
						"preparedName": "PMode(Vehicles.FixedObstacle)",
						"name": "Mode(Vehicles.FixedObstacle)",
						"level": 0.0303871,
						"weight": 0.246124,
						"importance": 0.0864812
					},
					{
						"preparedName": "PLongitude",
						"name": "Longitude",
						"level": 0.0340942,
						"weight": 0.187531,
						"importance": 0.0799607
					},
					{
						"preparedName": "PPlace.RoadMarkerId",
						"name": "Place.RoadMarkerId",
						"level": 0.0465788,
						"weight": 0.132843,
						"importance": 0.0786617
					},
					{
						"preparedName": "PMin(Vehicles.Min(Users.BirthYear))",
						"name": "Min(Vehicles.Min(Users.BirthYear))",
						"level": 0.0115712,
						"weight": 0.532257,
						"importance": 0.0784783
					},
					{
						"preparedName": "PHour.DecimalTime",
						"name": "Hour.DecimalTime",
						"level": 0.0077074,
						"weight": 0.683624,
						"importance": 0.0725876
					},
					{
						"preparedName": "PLight",
						"name": "Light",
						"level": 0.0234229,
						"weight": 0.22171,
						"importance": 0.0720632
					},
					{
						"preparedName": "PMax(Vehicles.Min(Users.BirthYear))",
						"name": "Max(Vehicles.Min(Users.BirthYear))",
						"level": 0.00886278,
						"weight": 0.417999,
						"importance": 0.0608657
					},
					{
						"preparedName": "PPlace.Circulation",
						"name": "Place.Circulation",
						"level": 0.016231,
						"weight": 0.216827,
						"importance": 0.0593239
					},
					{
						"preparedName": "PMode(Vehicles.Maneuver)",
						"name": "Mode(Vehicles.Maneuver)",
						"level": 0.0154212,
						"weight": 0.203156,
						"importance": 0.0559724
					},
					{
						"preparedName": "PCountDistinct(Vehicles.Direction)",
						"name": "CountDistinct(Vehicles.Direction)",
						"level": 0.00307631,
						"weight": 0.730499,
						"importance": 0.0474051
					},
					{
						"preparedName": "PPostalAddress",
						"name": "PostalAddress",
						"level": 0.00355536,
						"weight": 0.609406,
						"importance": 0.0465474
					},
					{
						"preparedName": "PPlace.StripWidth",
						"name": "Place.StripWidth",
						"level": 0.00938844,
						"weight": 0.222687,
						"importance": 0.045724
					},
					{
						"preparedName": "PSum(Vehicles.Sum(Users.BirthYear))",
						"name": "Sum(Vehicles.Sum(Users.BirthYear))",
						"level": 0.0189016,
						"weight": 0.0898743,
						"importance": 0.0412162
					},
					{
						"preparedName": "PMode(Vehicles.Category)",
						"name": "Mode(Vehicles.Category)",
						"level": 0.00330293,
						"weight": 0.480499,
						"importance": 0.0398379
					},
					{
						"preparedName": "PMin(Vehicles.Max(Users.BirthYear))",
						"name": "Min(Vehicles.Max(Users.BirthYear))",
						"level": 0.00920787,
						"weight": 0.167999,
						"importance": 0.0393309
					},
					{
						"preparedName": "PMode(Vehicles.Mode(Users.TripReason))",
						"name": "Mode(Vehicles.Mode(Users.TripReason))",
						"level": 0.0125871,
						"weight": 0.121124,
						"importance": 0.0390462
					},
					{
						"preparedName": "PCount(Vehicles) where MobileObstacle <> Vehicle",
						"name": "Count(Vehicles) where MobileObstacle <> Vehicle",
						"level": 0.0114714,
						"weight": 0.13089,
						"importance": 0.038749
					},
					{
						"preparedName": "PPlace.RoadType",
						"name": "Place.RoadType",
						"level": 0.051478,
						"weight": 0.0263977,
						"importance": 0.0368633
					},
					{
						"preparedName": "PMax(Vehicles.Sum(Users.BirthYear))",
						"name": "Max(Vehicles.Sum(Users.BirthYear))",
						"level": 0.0149757,
						"weight": 0.0762024,
						"importance": 0.0337815
					},
					{
						"preparedName": "PMean(Vehicles.Mean(Users.BirthYear))",
						"name": "Mean(Vehicles.Mean(Users.BirthYear))",
						"level": 0.0141913,
						"weight": 0.077179,
						"importance": 0.0330949
					},
					{
						"preparedName": "PMode(Vehicles.ImpactPoint)",
						"name": "Mode(Vehicles.ImpactPoint)",
						"level": 0.00873014,
						"weight": 0.117218,
						"importance": 0.0319895
					},
					{
						"preparedName": "PCountDistinct(Vehicles.Mode(Users.Gender))",
						"name": "CountDistinct(Vehicles.Mode(Users.Gender))",
						"level": 0.00362489,
						"weight": 0.250031,
						"importance": 0.0301054
					},
					{
						"preparedName": "PMin(Vehicles.Count(Users))",
						"name": "Min(Vehicles.Count(Users))",
						"level": 0.00316798,
						"weight": 0.144562,
						"importance": 0.0214002
					},
					{
						"preparedName": "PDate.WeekDay",
						"name": "Date.WeekDay",
						"level": 0.00149893,
						"weight": 0.164093,
						"importance": 0.0156832
					},
					{
						"preparedName": "PMean(Vehicles.Count(Users))",
						"name": "Mean(Vehicles.Count(Users))",
						"level": 0.00454045,
						"weight": 0.0508118,
						"importance": 0.0151891
					},
					{
						"preparedName": "PWeather",
						"name": "Weather",
						"level": 0.000652961,
						"weight": 0.343781,
						"importance": 0.0149825
					},
					{
						"preparedName": "PMedian(Vehicles.Count(Users))",
						"name": "Median(Vehicles.Count(Users))",
						"level": 0.00283809,
						"weight": 0.054718,
						"importance": 0.0124617
					}
				]
			}
		}
	},
	"trainEvaluationReport": {
		"reportType": "Evaluation",
		"evaluationType": "Train",
		"summary": {
			"dictionary": "Accident",
			"database": "s3:\/\/\/project\/c29961bb-8cc3-4c58-bf47-5cf216b361ef\/NewAccident\/Accidents.txt_sorted",
			"samplePercentage": 70,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 40470,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity"
		},
		"predictorsPerformance": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"accuracy": 0.945046,
				"compression": 0.191653,
				"auc": 0.832319
			}
		],
		"predictorsDetailedPerformance": {
			"R1": {
				"confusionMatrix": {
					"values": ["Lethal","NonLethal"],
					"matrix": [
						[34,32],
						[2192,38212]
					]
				}
			}
		},
		"liftCurves": [
			{
				"targetValue": "Lethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,1.81806,3.63612,5.45418,7.27224,9.0903,10.9084,12.7264,14.5445,16.3625,18.1806,19.9987,21.8167,23.6348,25.4528,27.2709,29.0889,30.907,32.7251,34.5431,36.3612,38.1792,39.9973,41.8154,43.6334,45.4515,47.2695,49.0876,50.9057,52.7237,54.5418,56.3598,58.1779,59.996,61.814,63.6321,65.4501,67.2682,69.0863,70.9043,72.7224,74.5404,76.3585,78.1765,79.9946,81.8127,83.6307,85.4488,87.2668,89.0849,90.903,92.721,94.5391,96.3571,98.1752,99.9933,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.943396,1.79695,2.98338,3.68374,4.40252,5.11321,5.7053,6.24438,6.60377,7.26415,7.72686,8.13118,8.62534,9.20934,9.7956,10.3324,10.9164,11.4106,11.9946,12.4169,12.9771,13.5669,14.106,14.5103,14.8697,15.3639,15.7233,16.1276,16.695,17.1608,17.5009,17.9245,18.239,18.6882,19.1128,19.6316,20.0809,20.3504,20.7098,20.9254,21.4735,21.743,22.2466,22.5517,22.8661,23.2255,23.6748,24.0791,24.2588,24.5283,24.9313,25.3369,25.6514,26.3252,26.7745,27.3279,27.5382,27.9093,28.1222,28.5265,28.796,29.1105,29.4699,29.8742,30.1438,30.4133,30.7498,31.1321,31.5813,32.1653,32.6146,33.0189,33.2884,33.6029,33.9286,34.1869,34.6361,35.0252,35.4506,35.6244,35.9389,36.2983,36.5229,36.9272,37.1047,37.6011,37.8257,38.2462,38.6343,38.9937,39.2633,39.4429,39.6995,39.9003,40.2516,40.611,40.9704,41.2399,41.4645,41.6442,41.9137,42.1833,42.4528,42.7224,43.0818,43.3962,43.531,43.7556,43.8455,44.0566,44.4744,44.699,45.0584,45.2381,45.5099,45.8455,46.1366,46.3369,46.9003,47.08,47.2597,47.4394,47.8437,48.1707,48.6523,48.8769,49.1914,49.3711,49.5508,49.8652,50.1348,50.4942,50.7188,51.0782,51.2781,51.5687,51.7071,51.9766,52.1563,52.5067,52.7525,53.0881,53.3693,53.6837,54.0431,54.4924,54.8518,55.0764,55.2574,55.5256,55.6604,55.8401,56.0198,56.1545,56.3792,56.6936,56.8733,57.1096,57.4124,57.5921,57.6819,57.8167,57.9066,58.0413,58.221,58.3558,58.5804,58.8949,59.2093,59.434,59.4789,59.7484,59.9281,60.2875,60.4223,60.5121,60.7367,61.1258,61.4106,61.6173,61.7731,61.929,62.3091,62.6235,62.8482,62.938,63.1626,63.2525,63.4322,63.6119,63.7916,63.8922,64.0162,64.1959,64.2857,64.336,64.735,64.8724,65.1393,65.3639,65.6334,65.8131,65.9928,66.1725,66.442,66.6217,66.8464,66.9362,67.0261,67.3405,67.4304,67.6101,67.8347,68.0593,68.1941,68.3288,68.3738,68.6882,68.7781,68.8679,68.9578,69.0476,69.1375,69.3172,69.407,69.4969,69.4969,69.7664,69.8562,70.0809,70.2606,70.5301,70.575,70.7996,70.9344,71.204,71.2938,71.4735,71.5184,71.6083,71.743,71.8778,72.0575,72.0575,72.1473,72.1923,72.4618,72.5067,72.6415,72.7763,72.9111,73.0907,73.2255,73.3603,73.4951,73.54,73.6298,73.8544,73.9892,74.1689,74.2138,74.4447,74.6631,74.8428,74.9573,75.0674,75.1572,75.292,75.3819,75.3819,75.5166,75.5615,75.6065,75.7412,75.9209,75.9209,76.0108,76.1006,76.1456,76.3252,76.3702,76.3702,76.5499,76.6846,76.7745,76.9542,77.0889,77.1339,77.3585,77.5067,77.5831,77.7628,77.8976,78.1303,78.3019,78.3468,78.3468,78.4816,78.6851,78.7511,78.841,78.9308,79.1105,79.2453,79.2902,79.425,79.6945,79.7394,80.009,80.2785,80.3684,80.4133,80.5031,80.593,80.6379,80.7278,80.9973,81.2219,81.4434,81.5364,81.7161,81.8059,81.8059,81.9407,81.9856,82.0755,82.0755,82.0755,82.1204,82.2102,82.3257,82.4798,82.7044,82.8392,82.8392,82.9739,83.1087,83.1536,83.1536,83.1986,83.2884,83.4232,83.513,83.6927,83.8275,83.9173,83.9173,83.9623,84.0535,84.1869,84.2318,84.2767,84.3217,84.3666,84.4115,84.4115,84.4115,84.5013,84.5791,84.6361,84.726,84.7709,84.9057,84.9955,85.0404,85.0854,85.0854,85.2201,85.3549,85.4403,85.4897,85.6244,85.7143,85.7592,85.8041,85.8491,85.9389,86.0737,86.0795,86.2534,86.4331,86.4331,86.4331,86.4331,86.478,86.5229,86.6128,86.7026,86.8374,87.0171,87.1968,87.3315,87.3315,87.3765,87.3765,87.4214,87.5112,87.6011,87.646,87.7808,87.8706,88.0054,88.0952,88.1851,88.2749,88.4097,88.5894,88.6343,88.7691,88.814,88.9488,89.0386,89.1734,89.2633,89.3082,89.3531,89.3531,89.3531,89.4429,89.4429,89.5328,89.5777,89.6676,89.7125,89.8473,89.8571,89.9371,89.9371,89.9654,90.027,90.1168,90.2965,90.3414,90.4313,90.4313,90.4762,90.5211,90.5211,90.566,90.611,90.6559,90.7457,90.8356,90.8805,90.9254,91.0153,91.1051,91.15,91.195,91.2399,91.2848,91.3297,91.4196,91.4645,91.5544,91.5993,91.6891,91.7341,91.779,91.8688,91.9137,91.9137,92.0036,92.0485,92.0934,92.0934,92.1384,92.1833,92.1833,92.1833,92.1833,92.363,92.363,92.363,92.363,92.363,92.4079,92.4079,92.4528,92.4528,92.4528,92.4978,92.4978,92.5427,92.5427,92.5427,92.5427,92.5427,92.5427,92.5427,92.5427,92.5427,92.5876,92.6325,92.6325,92.6774,92.7673,92.8571,92.9021,92.947,92.947,92.9919,92.9919,93.0764,93.1267,93.1716,93.2165,93.2165,93.2165,93.2165,93.3064,93.3064,93.3513,93.3962,93.3962,93.531,93.531,93.5759,93.5759,93.5759,93.5759,93.6208,93.6658,93.7107,93.7107,93.7556,93.7556,93.8005,93.8005,93.8455,93.8455,93.8904,93.8904,93.9353,93.9802,94.0701,94.1599,94.2049,94.2049,94.2498,94.2498,94.2947,94.3396,94.3396,94.3396,94.3845,94.3845,94.3845,94.3845,94.5193,94.5193,94.5193,94.5193,94.6092,94.6092,94.6092,94.6541,94.699,94.7439,94.7439,94.7439,94.7889,94.7889,94.8787,94.8787,94.9236,94.9686,95.0135,95.0135,95.0584,95.0584,95.1033,95.1033,95.1932,95.2381,95.3279,95.3279,95.3279,95.3279,95.3279,95.3279,95.3729,95.3729,95.4178,95.4178,95.4627,95.4627,95.4627,95.4627,95.5076,95.5076,95.5076,95.5526,95.5526,95.5975,95.6424,95.6424,95.6873,95.6873,95.6873,95.6873,95.7323,95.7772,95.7772,95.7772,95.7772,95.7772,95.8221,95.8221,95.8221,95.8221,95.8221,95.867,95.867,95.9119,95.9119,95.9119,95.9119,95.9119,95.9299,96.0018,96.0467,96.1815,96.1815,96.2264,96.2713,96.2713,96.3163,96.3612,96.3612,96.3612,96.4061,96.4061,96.451,96.451,96.496,96.5858,96.5858,96.5858,96.5858,96.5858,96.5858,96.7206,96.7206,96.7206,96.7655,96.7655,96.8104,96.8553,96.9003,96.9452,96.9452,96.9901,96.9901,96.9901,96.9901,97.035,97.08,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1249,97.1698,97.1698,97.2147,97.2147,97.2147,97.2147,97.2147,97.2147,97.2147,97.2597,97.2597,97.3046,97.3495,97.3495,97.3944,97.3944,97.4394,97.4394,97.4394,97.4394,97.4394,97.4394,97.4843,97.5292,97.5292,97.5292,97.5292,97.5292,97.5292,97.5292,97.5292,97.5292,97.5292,97.5449,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.5741,97.619,97.619,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.664,97.6869,97.7987,97.7987,97.7987,97.8437,97.8437,97.8437,97.8886,97.9335,97.9335,97.9335,97.9335,97.9335,97.9335,97.9335,97.9335,97.9335,97.9335,98.0234,98.0234,98.0234,98.0683,98.0683,98.1132,98.1132,98.1132,98.1132,98.1132,98.1581,98.1581,98.1581,98.1581,98.2031,98.2929,98.3378,98.3378,98.3378,98.3378,98.3378,98.3827,98.3827,98.4277,98.4726,98.4726,98.4726,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5175,98.5624,98.5624,98.5624,98.6181,98.6523,98.6523,98.6523,98.6523,98.6972,98.6972,98.6972,98.6972,98.6972,98.6972,98.7421,98.7871,98.7871,98.7871,98.7871,98.7871,98.832,98.832,98.8769,98.8769,98.8769,98.8769,98.8769,98.8769,98.9218,98.9218,98.9218,98.9668,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0117,99.0566,99.0566,99.1015,99.1015,99.1015,99.1015,99.1015,99.1015,99.1465,99.1465,99.1465,99.1914,99.1914,99.2363,99.2363,99.2363,99.2363,99.2363,99.2363,99.2363,99.2363,99.2363,99.2363,99.2812,99.3261,99.3261,99.3261,99.3261,99.3711,99.416,99.4609,99.4609,99.4609,99.4609,99.4609,99.4609,99.4609,99.4609,99.4609,99.4609,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5058,99.5957,99.5957,99.6801,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.6855,99.7305,99.7305,99.7305,99.7754,99.7754,99.7754,99.7754,99.7754,99.8203,99.8203,99.8203,99.8203,99.8652,99.9102,99.9102,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,99.9551,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					}
				]
			},
			{
				"targetValue": "NonLethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.105821,0.211641,0.317462,0.423282,0.529103,0.634923,0.740744,0.846564,0.952385,1.05821,1.16403,1.26985,1.37567,1.48149,1.58731,1.69313,1.79895,1.90477,2.01059,2.11641,2.22223,2.32805,2.43387,2.53969,2.64551,2.75133,2.85715,2.96297,3.0688,3.17462,3.28044,3.38626,3.49208,3.5979,3.70372,3.80954,3.91536,4.02118,4.127,4.23282,4.33864,4.44446,4.55028,4.6561,4.76192,4.86774,4.97356,5.07939,5.18521,5.29103,5.39685,5.50267,5.60849,5.71431,5.82013,5.92595,6.03177,6.13759,6.24341,6.34923,6.45505,6.56087,6.66669,6.77251,6.87833,6.98415,7.08997,7.1958,7.30162,7.40744,7.51326,7.61908,7.7249,7.83072,7.93654,8.04236,8.14818,8.254,8.35982,8.46564,8.57146,8.67728,8.7831,8.88892,8.99474,9.10056,9.20639,9.31221,9.41803,9.52385,9.62967,9.73549,9.84131,9.94713,10.0529,10.1588,10.2646,10.3704,10.4762,10.5821,10.6879,10.7937,10.8995,11.0053,11.1112,11.217,11.3228,11.4286,11.5344,11.6403,11.7461,11.8519,11.9577,12.0635,12.1694,12.2752,12.381,12.4868,12.5926,12.6985,12.8043,12.9101,13.0159,13.1217,13.2276,13.3334,13.4392,13.545,13.6508,13.7567,13.8625,13.9683,14.0741,14.1799,14.2858,14.3916,14.4974,14.6032,14.7091,14.8149,14.9207,15.0265,15.1323,15.2382,15.344,15.4498,15.5556,15.6614,15.7673,15.8731,15.9789,16.0847,16.1905,16.2964,16.4022,16.508,16.6138,16.7196,16.8255,16.9313,17.0371,17.1429,17.2487,17.3546,17.4604,17.5662,17.672,17.7778,17.8837,17.9895,18.0953,18.2011,18.307,18.4128,18.5186,18.6244,18.7302,18.8361,18.9419,19.0477,19.1535,19.2593,19.3652,19.471,19.5768,19.6826,19.7884,19.8943,20.0001,20.1059,20.2117,20.3175,20.4234,20.5292,20.635,20.7408,20.8466,20.9525,21.0583,21.1641,21.2699,21.3757,21.4816,21.5874,21.6932,21.799,21.9048,22.0107,22.1165,22.2223,22.3281,22.434,22.5398,22.6456,22.7514,22.8572,22.9631,23.0689,23.1747,23.2805,23.3863,23.4922,23.598,23.7038,23.8096,23.9154,24.0213,24.1271,24.2329,24.3387,24.4445,24.5504,24.6562,24.762,24.8678,24.9736,25.0795,25.1853,25.2911,25.3969,25.5027,25.6086,25.7144,25.8202,25.926,26.0318,26.1377,26.2435,26.3493,26.4551,26.561,26.6668,26.7726,26.8784,26.9842,27.0901,27.1959,27.3017,27.4075,27.5133,27.6192,27.725,27.8308,27.9366,28.0424,28.1483,28.2541,28.3599,28.4657,28.5715,28.6774,28.7832,28.889,28.9948,29.1006,29.2065,29.3123,29.4181,29.5239,29.6297,29.7356,29.8414,29.9472,30.053,30.1588,30.2647,30.3705,30.4763,30.5821,30.688,30.7938,30.8996,31.0054,31.1112,31.2171,31.3229,31.4287,31.5345,31.6403,31.7462,31.852,31.9578,32.0636,32.1694,32.2753,32.3811,32.4869,32.5927,32.6985,32.8044,32.9102,33.016,33.1218,33.2276,33.3335,33.4393,33.5451,33.6509,33.7567,33.8626,33.9684,34.0742,34.18,34.2858,34.3917,34.4975,34.6033,34.7091,34.815,34.9208,35.0266,35.1324,35.2382,35.3441,35.4499,35.5557,35.6615,35.7673,35.8732,35.979,36.0848,36.1906,36.2964,36.4023,36.5081,36.6139,36.7197,36.8255,36.9314,37.0372,37.143,37.2488,37.3546,37.4605,37.5663,37.6721,37.7779,37.8837,37.9896,38.0954,38.2012,38.307,38.4128,38.5187,38.6245,38.7303,38.8361,38.942,39.0478,39.1536,39.2594,39.3652,39.4711,39.5769,39.6827,39.7885,39.8943,40.0002,40.106,40.2118,40.3176,40.4234,40.5293,40.6351,40.7409,40.8467,40.9525,41.0584,41.1642,41.27,41.3758,41.4816,41.5875,41.6933,41.7991,41.9049,42.0107,42.1166,42.2224,42.3282,42.434,42.5398,42.6457,42.7515,42.8573,42.9631,43.069,43.1748,43.2806,43.3864,43.4922,43.5981,43.7039,43.8097,43.9155,44.0213,44.1272,44.233,44.3388,44.4446,44.5504,44.6563,44.7621,44.8679,44.9737,45.0795,45.1854,45.2912,45.397,45.5028,45.6086,45.7145,45.8203,45.9261,46.0319,46.1377,46.2436,46.3494,46.4552,46.561,46.6668,46.7727,46.8785,46.9843,47.0901,47.196,47.3018,47.4076,47.5134,47.6192,47.7251,47.8309,47.9367,48.0425,48.1483,48.2542,48.36,48.4658,48.5716,48.6774,48.7833,48.8891,48.9949,49.1007,49.2065,49.3124,49.4182,49.524,49.6298,49.7356,49.8415,49.9473,50.0531,50.1589,50.2647,50.3706,50.4764,50.5822,50.688,50.7939,50.8997,51.0055,51.1113,51.2171,51.323,51.4288,51.5346,51.6404,51.7462,51.8521,51.9579,52.0637,52.1695,52.2753,52.3812,52.487,52.5928,52.6986,52.8044,52.9103,53.0161,53.1219,53.2277,53.3335,53.4394,53.5452,53.651,53.7568,53.8626,53.9685,54.0743,54.1801,54.2859,54.3917,54.4976,54.6034,54.7092,54.815,54.9209,55.0267,55.1325,55.2383,55.3441,55.45,55.5558,55.6616,55.7674,55.8732,55.9791,56.0849,56.1907,56.2965,56.4023,56.5082,56.614,56.7198,56.8256,56.9314,57.0373,57.1431,57.2489,57.3547,57.4605,57.5664,57.6722,57.778,57.8838,57.9896,58.0955,58.2013,58.3071,58.4129,58.5187,58.6246,58.7304,58.8362,58.942,59.0479,59.1537,59.2595,59.3653,59.4711,59.577,59.6828,59.7886,59.8944,60.0002,60.1061,60.2119,60.3177,60.4235,60.5293,60.6352,60.741,60.8468,60.9526,61.0584,61.1643,61.2701,61.3759,61.4817,61.5875,61.6934,61.7992,61.905,62.0108,62.1166,62.2225,62.3283,62.4341,62.5399,62.6457,62.7516,62.8574,62.9632,63.069,63.1749,63.2807,63.3865,63.4923,63.5981,63.704,63.8098,63.9156,64.0214,64.1272,64.2331,64.3389,64.4447,64.5505,64.6563,64.7622,64.868,64.9738,65.0796,65.1854,65.2913,65.3971,65.5029,65.6087,65.7145,65.8204,65.9262,66.032,66.1378,66.2436,66.3495,66.4553,66.5611,66.6669,66.7727,66.8786,66.9844,67.0902,67.196,67.3019,67.4077,67.5135,67.6193,67.7251,67.831,67.9368,68.0426,68.1484,68.2542,68.3601,68.4659,68.5717,68.6775,68.7833,68.8892,68.995,69.1008,69.2066,69.3124,69.4183,69.5241,69.6299,69.7357,69.8415,69.9474,70.0532,70.159,70.2648,70.3706,70.4765,70.5823,70.6881,70.7939,70.8997,71.0056,71.1114,71.2172,71.323,71.4289,71.5347,71.6405,71.7463,71.8521,71.958,72.0638,72.1696,72.2754,72.3812,72.4871,72.5929,72.6987,72.8045,72.9103,73.0162,73.122,73.2278,73.3336,73.4394,73.5453,73.6511,73.7569,73.8627,73.9685,74.0744,74.1802,74.286,74.3918,74.4976,74.6035,74.7093,74.8151,74.9209,75.0267,75.1326,75.2384,75.3442,75.45,75.5559,75.6617,75.7675,75.8733,75.9791,76.085,76.1908,76.2966,76.4024,76.5082,76.6141,76.7199,76.8257,76.9315,77.0373,77.1432,77.249,77.3548,77.4606,77.5664,77.6723,77.7781,77.8839,77.9897,78.0955,78.2014,78.3072,78.413,78.5188,78.6246,78.7305,78.8363,78.9421,79.0479,79.1537,79.2596,79.3654,79.4712,79.577,79.6829,79.7887,79.8945,80.0003,80.1061,80.212,80.3178,80.4236,80.5294,80.6352,80.7411,80.8469,80.9527,81.0585,81.1643,81.2702,81.376,81.4818,81.5876,81.6934,81.7993,81.9051,82.0109,82.1167,82.2225,82.3284,82.4342,82.54,82.6458,82.7516,82.8575,82.9633,83.0691,83.1749,83.2807,83.3866,83.4924,83.5982,83.704,83.8099,83.9157,84.0215,84.1273,84.2331,84.339,84.4448,84.5506,84.6564,84.7622,84.8681,84.9739,85.0797,85.1855,85.2913,85.3972,85.503,85.6088,85.7146,85.8204,85.9263,86.0321,86.1379,86.2437,86.3495,86.4554,86.5612,86.667,86.7728,86.8786,86.9845,87.0903,87.1961,87.3019,87.4078,87.5136,87.6194,87.7252,87.831,87.9369,88.0427,88.1485,88.2543,88.3601,88.466,88.5718,88.6776,88.7834,88.8892,88.9951,89.1009,89.2067,89.3125,89.4183,89.5242,89.63,89.7358,89.8416,89.9474,90.0533,90.1591,90.2649,90.3707,90.4765,90.5824,90.6882,90.794,90.8998,91.0056,91.1115,91.2173,91.3231,91.4289,91.5348,91.6406,91.7464,91.8522,91.958,92.0639,92.1697,92.2755,92.3813,92.4871,92.593,92.6988,92.8046,92.9104,93.0162,93.1221,93.2279,93.3337,93.4395,93.5453,93.6512,93.757,93.8628,93.9686,94.0744,94.1803,94.2861,94.3919,94.4977,94.6035,94.7094,94.8152,94.921,95.0268,95.1326,95.2385,95.3443,95.4501,95.5559,95.6618,95.7676,95.8734,95.9792,96.085,96.1909,96.2967,96.4025,96.5083,96.6141,96.72,96.8258,96.9316,97.0374,97.1432,97.2491,97.3549,97.4607,97.5665,97.6723,97.7782,97.884,97.9898,98.0956,98.2014,98.3073,98.4131,98.5189,98.6247,98.7305,98.8364,98.9422,99.048,99.1538,99.2596,99.3655,99.4713,99.5771,99.6829,99.7888,99.8946,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.105821,0.211641,0.317462,0.423282,0.529103,0.634923,0.740744,0.846564,0.952385,1.05821,1.16403,1.26985,1.37567,1.48149,1.58731,1.69313,1.79895,1.90477,2.01059,2.11641,2.22223,2.32805,2.43387,2.53969,2.64551,2.75133,2.85715,2.96297,3.0688,3.17462,3.28044,3.38626,3.49208,3.5979,3.70372,3.80954,3.91536,4.02118,4.127,4.23282,4.33864,4.44446,4.55028,4.6561,4.76192,4.86774,4.97095,5.07677,5.18259,5.28841,5.39423,5.50005,5.60587,5.71169,5.81751,5.92333,6.02915,6.13498,6.2408,6.34662,6.45244,6.55826,6.66408,6.7699,6.87572,6.98154,7.08736,7.19057,7.29639,7.39959,7.5028,7.60862,7.71444,7.82026,7.92347,8.02929,8.13511,8.24093,8.34675,8.44995,8.55577,8.66159,8.7648,8.87062,8.97644,9.08226,9.18808,9.2939,9.39972,9.50554,9.61136,9.71718,9.823,9.92883,10.0346,10.1402,10.2411,10.3469,10.4475,10.5533,10.6591,10.7649,10.8708,10.9766,11.0824,11.1882,11.294,11.3999,11.5057,11.6115,11.7173,11.8231,11.929,12.0348,12.1406,12.2464,12.3522,12.4581,12.5639,12.6671,12.7729,12.8787,12.9845,13.0904,13.1962,13.302,13.4078,13.5136,13.6195,13.7227,13.8259,13.9291,14.0349,14.1407,14.2465,14.3498,14.453,14.5588,14.6646,14.7704,14.8762,14.9821,15.0879,15.1937,15.2995,15.4053,15.5086,15.6144,15.7176,15.8234,15.9292,16.0324,16.1382,16.2441,16.3499,16.4557,16.5615,16.6647,16.7706,16.8738,16.9796,17.0854,17.1912,17.297,17.4029,17.5087,17.6145,17.7203,17.8261,17.932,18.0378,18.1436,18.2494,18.3552,18.4611,18.5669,18.6727,18.7785,18.8843,18.9876,19.0908,19.1966,19.3024,19.4056,19.5114,19.6172,19.7231,19.8289,19.9347,20.0379,20.1437,20.2469,20.3528,20.4586,20.5644,20.6702,20.7734,20.8766,20.9825,21.0883,21.1941,21.2999,21.4057,21.5089,21.6148,21.7206,21.8264,21.9302,22.0328,22.1386,22.2445,22.3477,22.4535,22.5593,22.6651,22.7709,22.8768,22.9826,23.0884,23.1942,23.3,23.4059,23.5091,23.6149,23.7207,23.8239,23.9271,24.0329,24.1362,24.242,24.3478,24.4536,24.5594,24.6626,24.7632,24.8664,24.9723,25.0781,25.1839,25.2871,25.3929,25.4987,25.6046,25.7104,25.8136,25.9194,26.0226,26.1284,26.2343,26.3348,26.4407,26.5465,26.6523,26.7581,26.864,26.9698,27.0756,27.1814,27.2872,27.3904,27.4936,27.5995,27.7053,27.8085,27.9143,28.0201,28.1194,28.2239,28.3298,28.4356,28.5414,28.6472,28.753,28.8589,28.9647,29.0705,29.1763,29.2821,29.388,29.4912,29.597,29.7002,29.806,29.9118,30.0176,30.1235,30.2293,30.3351,30.4409,30.5468,30.6526,30.7584,30.8642,30.97,31.0742,31.1791,31.2849,31.3907,31.4965,31.6023,31.7082,31.814,31.9198,32.0256,32.1314,32.2347,32.3379,32.4437,32.5495,32.6553,32.7611,32.867,32.9702,33.076,33.1792,33.285,33.3882,33.4914,33.5972,33.7004,33.8063,33.9121,34.0179,34.1237,34.2296,34.3354,34.4386,34.5444,34.6476,34.7534,34.8592,34.9651,35.0709,35.1767,35.2825,35.3883,35.4942,35.6,35.7058,35.8116,35.9175,36.0207,36.1239,36.2271,36.3329,36.4387,36.5445,36.6477,36.7536,36.8568,36.96,37.0632,37.1664,37.2722,37.3754,37.4812,37.587,37.685,37.7908,37.8967,38.0025,38.1083,38.2141,38.3147,38.4179,38.5237,38.6269,38.7328,38.836,38.9418,39.0476,39.1508,39.254,39.3598,39.4631,39.5663,39.6721,39.7701,39.8733,39.9749,40.0797,40.1855,40.2913,40.3971,40.503,40.6062,40.712,40.8152,40.921,41.0268,41.1326,41.2385,41.3417,41.4475,41.5533,41.6591,41.765,41.8682,41.9714,42.0772,42.183,42.2888,42.392,42.4979,42.6011,42.7043,42.8101,42.9133,43.0191,43.1249,43.2281,43.334,43.4398,43.5456,43.6488,43.7546,43.8578,43.9637,44.0669,44.1727,44.2785,44.3843,44.4901,44.596,44.6966,44.7998,44.9004,45.0062,45.1094,45.2152,45.3184,45.4242,45.5274,45.6306,45.7338,45.8397,45.9403,46.0461,46.1493,46.2551,46.3609,46.4641,46.5673,46.6705,46.7764,46.8822,46.9828,47.0886,47.1944,47.3002,47.3982,47.504,47.6098,47.7157,47.8189,47.9247,48.0305,48.1337,48.2369,48.3427,48.446,48.5518,48.655,48.7556,48.8562,48.9594,49.0626,49.1684,49.2716,49.3774,49.4806,49.5864,49.6897,49.7955,49.8987,50.0045,50.1077,50.2109,50.3141,50.4199,50.5258,50.6316,50.7348,50.8406,50.9386,51.0444,51.1476,51.2508,51.3566,51.4572,51.563,51.6689,51.7747,51.8779,51.9811,52.084,52.1849,52.2907,52.3939,52.4997,52.6029,52.7061,52.8067,52.9073,53.0105,53.1164,53.2196,53.3228,53.4286,53.5344,53.6402,53.7461,53.8519,53.9577,54.0635,54.1693,54.2725,54.3784,54.4816,54.5874,54.6932,54.7964,54.9022,55.0054,55.1113,55.2171,55.3229,55.4287,55.5241,55.6299,55.7357,55.8415,55.9447,56.048,56.1538,56.257,56.3602,56.4608,56.5666,56.6698,56.7704,56.8736,56.9768,57.0774,57.1806,57.2812,57.3844,57.485,57.5882,57.6914,57.7946,57.8978,58.001,58.1016,58.2022,58.3054,58.4086,58.5092,58.6098,58.713,58.8162,58.9194,59.0252,59.1284,59.2316,59.3375,59.4381,59.5413,59.6366,59.7372,59.8395,59.9436,60.0494,60.1506,60.2559,60.3538,60.457,60.5576,60.6608,60.7614,60.8672,60.9678,61.0737,61.1795,61.2827,61.3859,61.4865,61.5845,61.685,61.783,61.8862,61.9842,62.0874,62.1828,62.2807,62.3813,62.4819,62.5825,62.6805,62.7811,62.8791,62.9823,63.0829,63.1835,63.2867,63.3925,63.4957,63.6015,63.6995,63.7948,63.8902,63.9882,64.0888,64.1894,64.2926,64.3958,64.5016,64.6074,64.7132,64.8086,64.9043,65.0098,65.1078,65.2083,65.3116,65.4148,65.518,65.6186,65.7165,65.8195,65.9203,66.0183,66.1163,66.2221,66.3253,66.4285,66.5291,66.6271,66.7303,66.8309,66.9334,67.0347,67.1353,67.2411,67.3469,67.4501,67.5533,67.6565,67.7597,67.8629,67.961,68.0615,68.1647,68.2705,68.3711,68.4691,68.5645,68.665,68.763,68.8636,68.9668,69.0726,69.1758,69.2738,69.3718,69.4776,69.5756,69.6683,69.7652,69.8643,69.9649,70.0681,70.1739,70.2797,70.3803,70.4835,70.5815,70.6873,70.7879,70.8833,70.9837,71.0766,71.1694,71.2595,71.3601,71.4633,71.5639,71.6645,71.7677,71.8683,71.9584,72.0485,72.1517,72.2419,72.3398,72.443,72.541,72.6364,72.737,72.8376,72.9395,73.0335,73.1315,73.2373,73.3405,73.4364,73.5286,73.6266,73.722,73.8233,73.9205,74.0133,74.1165,74.2145,74.3098,74.4104,74.5084,74.6038,74.7096,74.8128,74.9081,75.0113,75.1119,75.2125,75.3184,75.4137,75.5117,75.6149,75.7181,75.8161,75.9219,76.0225,76.1205,76.2211,76.3205,76.4196,76.515,76.6081,76.7005,76.8037,76.899,76.997,77.0898,77.1904,77.2936,77.3915,77.4895,77.5875,77.6829,77.7808,77.8788,77.9768,78.08,78.1701,78.2733,78.3739,78.4797,78.5751,78.6731,78.771,78.8716,78.9748,79.0702,79.1708,79.2609,79.3589,79.4517,79.5549,79.645,79.7404,79.8331,79.9337,80.0238,80.1296,80.2302,80.3308,80.4262,80.5268,80.6274,80.728,80.8285,80.9291,81.0167,81.1199,81.2178,81.3158,81.4086,81.5013,81.5967,81.6973,81.7848,81.8854,81.986,82.0787,82.1741,82.2642,82.3596,82.4549,82.5503,82.6404,82.7332,82.8234,82.9213,83.0039,83.1068,83.2074,83.3027,83.4013,83.5013,83.5966,83.692,83.7874,83.888,83.9807,84.0813,84.174,84.2616,84.3453,84.442,84.5388,84.6325,84.7218,84.805,84.8977,84.9983,85.0963,85.1812,85.2765,85.3667,85.4699,85.5626,85.6501,85.7377,85.8304,85.9284,86.0237,86.1217,86.2223,86.3203,86.4209,86.5162,86.6044,86.6965,86.7919,86.8794,86.9721,87.0701,87.1655,87.2608,87.3588,87.449,87.5443,87.637,87.7219,87.8016,87.8865,87.974,88.0635,88.1498,88.2413,88.3267,88.4221,88.5122,88.61,88.6989,88.7931,88.878,88.9707,89.0556,89.1457,89.2333,89.3286,89.424,89.5115,89.6043,89.682,89.7688,89.8511,89.9465,90.0418,90.1372,90.2102,90.3044,90.3933,90.4796,90.5696,90.6649,90.7498,90.8426,90.9241,91.0176,91.1182,91.2109,91.3089,91.3964,91.4813,91.5715,91.6616,91.7517,91.8419,91.9372,92.03,92.1201,92.205,92.2899,92.3753,92.4694,92.5603,92.6557,92.7458,92.8307,92.9139,92.9953,93.088,93.1649,93.2604,93.3427,93.4355,93.5204,93.6079,93.7036,93.7846,93.8678,93.9475,94.0383,94.1251,94.2127,94.3028,94.3851,94.4648,94.5366,94.6163,94.6998,94.7861,94.8762,94.9663,95.0486,95.1335,95.221,95.3112,95.3934,95.4869,95.5711,95.6647,95.7383,95.818,95.8846,95.9721,96.0543,96.1366,96.2268,96.3221,96.4044,96.4841,96.569,96.6565,96.7446,96.8211,96.9112,96.9851,97.0784,97.1633,97.2535,97.3331,97.4087,97.4899,97.5695,97.657,97.7382,97.8242,97.9029,97.9757,98.058,98.1429,98.22,98.3049,98.3872,98.4616,98.5331,98.6063,98.6876,98.7594,98.8364,98.9083,98.9828,99.0545,99.1264,99.2034,99.2857,99.3646,99.432,99.5169,99.5913,99.6627,99.7271,99.7911,99.8562,99.893,99.9491,100]
					}
				]
			}
		]
	},
	"testEvaluationReport": {
		"reportType": "Evaluation",
		"evaluationType": "Test",
		"summary": {
			"dictionary": "Accident",
			"database": "s3:\/\/\/project\/c29961bb-8cc3-4c58-bf47-5cf216b361ef\/NewAccident\/Accidents.txt_sorted",
			"samplePercentage": 70,
			"samplingMode": "Exclude sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 17313,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity"
		},
		"predictorsPerformance": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"accuracy": 0.944377,
				"compression": 0.188894,
				"auc": 0.832418
			}
		],
		"predictorsDetailedPerformance": {
			"R1": {
				"confusionMatrix": {
					"values": ["Lethal","NonLethal"],
					"matrix": [
						[12,15],
						[948,16338]
					]
				}
			}
		},
		"liftCurves": [
			{
				"targetValue": "Lethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,1.80344,3.60687,5.41031,7.21375,9.01719,10.8206,12.6241,14.4275,16.2309,18.0344,19.8378,21.6412,23.4447,25.2481,27.0516,28.855,30.6584,32.4619,34.2653,36.0688,37.8722,39.6756,41.4791,43.2825,45.0859,46.8894,48.6928,50.4962,52.2997,54.1031,55.9066,57.71,59.5134,61.3169,63.1203,64.9237,66.7272,68.5306,70.3341,72.1375,73.9409,75.7444,77.5478,79.3512,81.1547,82.9581,84.7616,86.565,88.3684,90.1719,91.9753,93.7787,95.5822,97.3856,99.1891,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.9375,1.5625,1.97917,2.5,3.33333,4.15396,5.10417,5.72917,6.45833,7.29167,7.8125,8.22917,8.75719,9.6875,10.1766,10.2083,10.8333,11.25,11.557,12.0833,12.5,13.009,13.75,14.1667,15.0859,15.9375,15.9375,16.1458,16.3542,16.5625,17.0833,17.2933,17.7083,18.0877,18.6458,18.75,19.0189,19.2598,19.375,19.5833,19.7917,20.1042,20.4167,20.8333,21.1458,21.4583,21.9792,22.1875,22.6042,22.8125,23.2253,23.5417,23.6458,24.469,25.3125,25.5208,25.7292,26.25,26.7708,27.0833,27.5,27.9167,28.6166,28.75,29.0625,29.2708,29.375,29.8958,30.3125,30.625,31.1458,31.25,31.6667,31.9792,32.2917,32.5,32.5,32.7515,32.9167,33.2292,33.5784,34.0625,34.477,34.6875,35,35.1998,35.9375,36.515,36.7708,37.0833,37.0833,37.2704,37.3958,37.5,37.9167,38.125,38.125,38.5417,38.9583,39.1667,39.5833,40,40.3125,40.5208,40.9375,41.1644,41.4583,41.6667,41.875,41.9792,42.1875,42.1875,42.7083,43.0208,43.2292,43.75,44.2314,44.5765,45.1042,45.7292,46.1326,46.4583,46.5625,46.875,46.9792,47.3958,47.3958,47.6042,48.0601,48.3333,48.75,48.9583,49.0625,49.4792,49.5833,50.1042,50.4167,50.5208,50.8333,51.0417,51.4722,51.9792,52.6832,53.125,53.75,54.0625,54.2708,54.375,54.4792,54.7917,55.2083,55.2083,55.6134,55.9375,56.25,56.3542,56.6814,56.9792,57.3958,57.8208,57.9167,58.2292,58.3333,58.6458,58.8542,59.0625,59.2708,59.5833,59.7917,59.8958,59.9503,60,60,60.5208,60.7292,60.8333,60.8333,60.8333,60.9375,61.1812,61.25,61.4583,61.6667,61.7708,61.875,61.875,61.875,62.1875,62.3958,62.5,62.5,62.5,62.7083,62.9167,62.9167,62.9167,63.125,63.4375,63.5417,63.75,63.8542,63.9583,64.375,64.375,64.4792,64.5833,64.6875,65,65.1042,65.3125,65.3125,65.5208,65.8333,66.0417,66.25,66.3542,66.4583,66.5625,66.875,66.875,67.0833,67.0833,67.5,67.7083,67.9167,68.125,68.2292,68.2292,68.4375,68.749,68.8542,69.0625,69.375,69.5044,69.7917,69.7917,70,70,70.1042,70.4167,70.7292,71.0417,71.25,71.3542,71.7708,71.9792,72.2917,72.565,72.9167,73.2292,73.2292,73.4375,73.4375,73.6458,73.8542,74.0625,74.1667,74.4535,74.5833,74.6875,74.7597,74.7917,74.8958,75.1042,75.2083,75.2083,75.3125,75.4167,75.5208,75.7292,75.8333,75.9375,76.1458,76.3542,76.5625,76.6667,76.7708,76.875,76.875,76.875,77.1875,77.2917,77.2917,77.3958,77.3958,77.3958,77.3958,77.5,77.5,77.5,77.6042,77.8125,77.9167,77.9167,78.125,78.2292,78.4375,78.6458,78.6458,78.75,79.0625,79.0625,79.1667,79.4792,79.4792,79.4792,79.5833,79.6875,79.6875,79.6875,79.8274,80,80.2083,80.3125,80.4167,80.625,80.8333,80.8333,80.8333,80.9542,81.1458,81.3542,81.4686,81.5625,81.5625,81.6667,81.6667,81.875,81.9792,82.0833,82.1461,82.2917,82.3958,82.3958,82.5,82.5,82.7083,82.9994,83.2292,83.2292,83.2292,83.234,83.3333,83.5417,83.6458,83.8542,83.8542,83.8542,83.8542,83.8542,84.0625,84.4792,84.6875,84.8958,85,85.1042,85.1042,85.2083,85.3125,85.4167,85.5208,85.625,85.625,85.7292,85.7292,85.8915,85.9375,85.9375,85.9375,86.126,86.1458,86.3542,86.3542,86.5625,86.6667,86.7708,86.875,87.0833,87.1875,87.3958,87.5,87.6042,87.6042,87.9167,87.9167,87.9167,87.9167,88.125,88.2292,88.2292,88.3333,88.3333,88.3333,88.4375,88.6458,88.7446,88.8542,88.9583,89.0625,89.1667,89.1667,89.1667,89.1811,89.2708,89.2708,89.2708,89.2708,89.2708,89.2708,89.375,89.375,89.375,89.375,89.375,89.375,89.5833,89.6875,89.7917,89.8958,89.8958,89.8958,90,90,90.1783,90.3125,90.3477,90.5208,90.5208,90.5208,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.625,90.7292,90.7292,90.7292,90.8333,90.9375,91.0417,91.0417,91.0417,91.25,91.25,91.25,91.3542,91.3542,91.3542,91.4583,91.5625,91.5625,91.6667,91.7708,91.7708,91.875,91.9792,92.0833,92.1875,92.4852,92.6042,92.7083,92.7083,92.8125,92.9167,92.9167,92.9167,92.9167,92.9167,92.9167,92.9167,92.9167,92.9167,92.9167,93.0208,93.0208,93.0208,93.0208,93.0208,93.0208,93.0208,93.0208,93.0208,93.125,93.125,93.125,93.125,93.125,93.125,93.125,93.125,93.2292,93.2292,93.2292,93.2292,93.2292,93.2292,93.2292,93.3333,93.4375,93.4375,93.4379,93.6458,93.8542,93.9583,93.9583,93.9583,94.0625,94.0625,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.2708,94.375,94.375,94.4792,94.4792,94.4792,94.5833,94.5833,94.5833,94.6875,94.6875,94.6875,94.6875,94.6875,94.6875,94.7917,94.7917,94.7917,94.7917,94.7917,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,94.8958,95,95,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.1042,95.2083,95.2083,95.2083,95.2083,95.2083,95.2083,95.2083,95.2083,95.3125,95.3125,95.4167,95.4167,95.4167,95.4167,95.5208,95.625,95.625,95.7292,95.7292,95.7292,95.8968,95.9375,95.9375,95.9375,95.9375,95.9375,95.9375,95.9375,95.9375,96.0417,96.0417,96.0417,96.0417,96.0417,96.0417,96.0417,96.0417,96.1458,96.1458,96.1458,96.25,96.3542,96.4583,96.4583,96.5625,96.5625,96.5625,96.5625,96.5625,96.6667,96.6667,96.6667,96.6667,96.6667,96.875,96.875,96.875,96.9792,96.9792,96.9792,96.9926,97.0833,97.0833,97.0833,97.0833,97.0833,97.1875,97.1875,97.1875,97.1875,97.1875,97.2917,97.2917,97.2917,97.2917,97.2917,97.2917,97.2917,97.2917,97.3958,97.3958,97.3958,97.5,97.5,97.6042,97.8125,97.8125,97.8125,97.8125,97.8125,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,97.9167,98.0208,98.0208,98.0208,98.0208,98.0208,98.0208,98.0208,98.0208,98.0208,98.0208,98.125,98.125,98.2292,98.2292,98.2292,98.2292,98.2292,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.3333,98.4375,98.4375,98.4375,98.4375,98.4375,98.4375,98.4375,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.5417,98.6458,98.75,98.75,98.75,98.75,98.75,98.75,98.75,98.75,98.75,98.75,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.8542,98.9583,98.9583,98.9583,98.9583,98.9583,98.9583,98.9583,98.9583,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.0625,99.1667,99.1667,99.1667,99.1667,99.1667,99.1667,99.1667,99.1667,99.1667,99.2708,99.2708,99.2708,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.375,99.4792,99.4792,99.4792,99.4792,99.4792,99.4792,99.4792,99.4792,99.4792,99.4792,99.5833,99.5833,99.5833,99.5833,99.5833,99.5833,99.5833,99.5833,99.5833,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.6875,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.7917,99.8958,99.8958,99.8958,99.8958,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					}
				]
			},
			{
				"targetValue": "NonLethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.10587,0.211741,0.317611,0.423482,0.529352,0.635223,0.741093,0.846964,0.952834,1.0587,1.16458,1.27045,1.37632,1.48219,1.58806,1.69393,1.7998,1.90567,2.01154,2.11741,2.22328,2.32915,2.43502,2.54089,2.64676,2.75263,2.8585,2.96437,3.07024,3.17611,3.28198,3.38786,3.49373,3.5996,3.70547,3.81134,3.91721,4.02308,4.12895,4.23482,4.34069,4.44656,4.55243,4.6583,4.76417,4.87004,4.97591,5.08178,5.18765,5.29352,5.39939,5.50527,5.61114,5.71701,5.82288,5.92875,6.03462,6.14049,6.24636,6.35223,6.4581,6.56397,6.66984,6.77571,6.88158,6.98745,7.09332,7.19919,7.30506,7.41093,7.5168,7.62267,7.72855,7.83442,7.94029,8.04616,8.15203,8.2579,8.36377,8.46964,8.57551,8.68138,8.78725,8.89312,8.99899,9.10486,9.21073,9.3166,9.42247,9.52834,9.63421,9.74008,9.84595,9.95183,10.0577,10.1636,10.2694,10.3753,10.4812,10.587,10.6929,10.7988,10.9047,11.0105,11.1164,11.2223,11.3281,11.434,11.5399,11.6458,11.7516,11.8575,11.9634,12.0692,12.1751,12.281,12.3868,12.4927,12.5986,12.7045,12.8103,12.9162,13.0221,13.1279,13.2338,13.3397,13.4456,13.5514,13.6573,13.7632,13.869,13.9749,14.0808,14.1866,14.2925,14.3984,14.5043,14.6101,14.716,14.8219,14.9277,15.0336,15.1395,15.2453,15.3512,15.4571,15.563,15.6688,15.7747,15.8806,15.9864,16.0923,16.1982,16.3041,16.4099,16.5158,16.6217,16.7275,16.8334,16.9393,17.0451,17.151,17.2569,17.3628,17.4686,17.5745,17.6804,17.7862,17.8921,17.998,18.1039,18.2097,18.3156,18.4215,18.5273,18.6332,18.7391,18.8449,18.9508,19.0567,19.1626,19.2684,19.3743,19.4802,19.586,19.6919,19.7978,19.9037,20.0095,20.1154,20.2213,20.3271,20.433,20.5389,20.6447,20.7506,20.8565,20.9624,21.0682,21.1741,21.28,21.3858,21.4917,21.5976,21.7034,21.8093,21.9152,22.0211,22.1269,22.2328,22.3387,22.4445,22.5504,22.6563,22.7622,22.868,22.9739,23.0798,23.1856,23.2915,23.3974,23.5032,23.6091,23.715,23.8209,23.9267,24.0326,24.1385,24.2443,24.3502,24.4561,24.562,24.6678,24.7737,24.8796,24.9854,25.0913,25.1972,25.303,25.4089,25.5148,25.6207,25.7265,25.8324,25.9383,26.0441,26.15,26.2559,26.3618,26.4676,26.5735,26.6794,26.7852,26.8911,26.997,27.1028,27.2087,27.3146,27.4205,27.5263,27.6322,27.7381,27.8439,27.9498,28.0557,28.1615,28.2674,28.3733,28.4792,28.585,28.6909,28.7968,28.9026,29.0085,29.1144,29.2203,29.3261,29.432,29.5379,29.6437,29.7496,29.8555,29.9613,30.0672,30.1731,30.279,30.3848,30.4907,30.5966,30.7024,30.8083,30.9142,31.0201,31.1259,31.2318,31.3377,31.4435,31.5494,31.6553,31.7611,31.867,31.9729,32.0788,32.1846,32.2905,32.3964,32.5022,32.6081,32.714,32.8198,32.9257,33.0316,33.1375,33.2433,33.3492,33.4551,33.5609,33.6668,33.7727,33.8786,33.9844,34.0903,34.1962,34.302,34.4079,34.5138,34.6196,34.7255,34.8314,34.9373,35.0431,35.149,35.2549,35.3607,35.4666,35.5725,35.6784,35.7842,35.8901,35.996,36.1018,36.2077,36.3136,36.4194,36.5253,36.6312,36.7371,36.8429,36.9488,37.0547,37.1605,37.2664,37.3723,37.4782,37.584,37.6899,37.7958,37.9016,38.0075,38.1134,38.2192,38.3251,38.431,38.5369,38.6427,38.7486,38.8545,38.9603,39.0662,39.1721,39.2779,39.3838,39.4897,39.5956,39.7014,39.8073,39.9132,40.019,40.1249,40.2308,40.3367,40.4425,40.5484,40.6543,40.7601,40.866,40.9719,41.0777,41.1836,41.2895,41.3954,41.5012,41.6071,41.713,41.8188,41.9247,42.0306,42.1365,42.2423,42.3482,42.4541,42.5599,42.6658,42.7717,42.8775,42.9834,43.0893,43.1952,43.301,43.4069,43.5128,43.6186,43.7245,43.8304,43.9363,44.0421,44.148,44.2539,44.3597,44.4656,44.5715,44.6773,44.7832,44.8891,44.995,45.1008,45.2067,45.3126,45.4184,45.5243,45.6302,45.736,45.8419,45.9478,46.0537,46.1595,46.2654,46.3713,46.4771,46.583,46.6889,46.7948,46.9006,47.0065,47.1124,47.2182,47.3241,47.43,47.5358,47.6417,47.7476,47.8535,47.9593,48.0652,48.1711,48.2769,48.3828,48.4887,48.5946,48.7004,48.8063,48.9122,49.018,49.1239,49.2298,49.3356,49.4415,49.5474,49.6533,49.7591,49.865,49.9709,50.0767,50.1826,50.2885,50.3943,50.5002,50.6061,50.712,50.8178,50.9237,51.0296,51.1354,51.2413,51.3472,51.4531,51.5589,51.6648,51.7707,51.8765,51.9824,52.0883,52.1941,52.3,52.4059,52.5118,52.6176,52.7235,52.8294,52.9352,53.0411,53.147,53.2529,53.3587,53.4646,53.5705,53.6763,53.7822,53.8881,53.9939,54.0998,54.2057,54.3116,54.4174,54.5233,54.6292,54.735,54.8409,54.9468,55.0527,55.1585,55.2644,55.3703,55.4761,55.582,55.6879,55.7937,55.8996,56.0055,56.1114,56.2172,56.3231,56.429,56.5348,56.6407,56.7466,56.8524,56.9583,57.0642,57.1701,57.2759,57.3818,57.4877,57.5935,57.6994,57.8053,57.9112,58.017,58.1229,58.2288,58.3346,58.4405,58.5464,58.6522,58.7581,58.864,58.9699,59.0757,59.1816,59.2875,59.3933,59.4992,59.6051,59.711,59.8168,59.9227,60.0286,60.1344,60.2403,60.3462,60.452,60.5579,60.6638,60.7697,60.8755,60.9814,61.0873,61.1931,61.299,61.4049,61.5108,61.6166,61.7225,61.8284,61.9342,62.0401,62.146,62.2518,62.3577,62.4636,62.5695,62.6753,62.7812,62.8871,62.9929,63.0988,63.2047,63.3105,63.4164,63.5223,63.6282,63.734,63.8399,63.9458,64.0516,64.1575,64.2634,64.3693,64.4751,64.581,64.6869,64.7927,64.8986,65.0045,65.1103,65.2162,65.3221,65.428,65.5338,65.6397,65.7456,65.8514,65.9573,66.0632,66.1691,66.2749,66.3808,66.4867,66.5925,66.6984,66.8043,66.9101,67.016,67.1219,67.2278,67.3336,67.4395,67.5454,67.6512,67.7571,67.863,67.9688,68.0747,68.1806,68.2865,68.3923,68.4982,68.6041,68.7099,68.8158,68.9217,69.0276,69.1334,69.2393,69.3452,69.451,69.5569,69.6628,69.7686,69.8745,69.9804,70.0863,70.1921,70.298,70.4039,70.5097,70.6156,70.7215,70.8274,70.9332,71.0391,71.145,71.2508,71.3567,71.4626,71.5684,71.6743,71.7802,71.8861,71.9919,72.0978,72.2037,72.3095,72.4154,72.5213,72.6272,72.733,72.8389,72.9448,73.0506,73.1565,73.2624,73.3682,73.4741,73.58,73.6859,73.7917,73.8976,74.0035,74.1093,74.2152,74.3211,74.4269,74.5328,74.6387,74.7446,74.8504,74.9563,75.0622,75.168,75.2739,75.3798,75.4857,75.5915,75.6974,75.8033,75.9091,76.015,76.1209,76.2267,76.3326,76.4385,76.5444,76.6502,76.7561,76.862,76.9678,77.0737,77.1796,77.2855,77.3913,77.4972,77.6031,77.7089,77.8148,77.9207,78.0265,78.1324,78.2383,78.3442,78.45,78.5559,78.6618,78.7676,78.8735,78.9794,79.0853,79.1911,79.297,79.4029,79.5087,79.6146,79.7205,79.8263,79.9322,80.0381,80.144,80.2498,80.3557,80.4616,80.5674,80.6733,80.7792,80.885,80.9909,81.0968,81.2027,81.3085,81.4144,81.5203,81.6261,81.732,81.8379,81.9438,82.0496,82.1555,82.2614,82.3672,82.4731,82.579,82.6848,82.7907,82.8966,83.0025,83.1083,83.2142,83.3201,83.4259,83.5318,83.6377,83.7436,83.8494,83.9553,84.0612,84.167,84.2729,84.3788,84.4846,84.5905,84.6964,84.8023,84.9081,85.014,85.1199,85.2257,85.3316,85.4375,85.5433,85.6492,85.7551,85.861,85.9668,86.0727,86.1786,86.2844,86.3903,86.4962,86.6021,86.7079,86.8138,86.9197,87.0255,87.1314,87.2373,87.3431,87.449,87.5549,87.6608,87.7666,87.8725,87.9784,88.0842,88.1901,88.296,88.4019,88.5077,88.6136,88.7195,88.8253,88.9312,89.0371,89.1429,89.2488,89.3547,89.4606,89.5664,89.6723,89.7782,89.884,89.9899,90.0958,90.2017,90.3075,90.4134,90.5193,90.6251,90.731,90.8369,90.9427,91.0486,91.1545,91.2604,91.3662,91.4721,91.578,91.6838,91.7897,91.8956,92.0014,92.1073,92.2132,92.3191,92.4249,92.5308,92.6367,92.7425,92.8484,92.9543,93.0602,93.166,93.2719,93.3778,93.4836,93.5895,93.6954,93.8012,93.9071,94.013,94.1189,94.2247,94.3306,94.4365,94.5423,94.6482,94.7541,94.86,94.9658,95.0717,95.1776,95.2834,95.3893,95.4952,95.601,95.7069,95.8128,95.9187,96.0245,96.1304,96.2363,96.3421,96.448,96.5539,96.6598,96.7656,96.8715,96.9774,97.0832,97.1891,97.295,97.4008,97.5067,97.6126,97.7185,97.8243,97.9302,98.0361,98.1419,98.2478,98.3537,98.4595,98.5654,98.6713,98.7772,98.883,98.9889,99.0948,99.2006,99.3065,99.4124,99.5183,99.6241,99.73,99.8359,99.9417,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.10587,0.211741,0.317611,0.423482,0.529352,0.635223,0.741093,0.846964,0.952834,1.0587,1.16458,1.27045,1.37632,1.48219,1.58806,1.69393,1.7998,1.90567,2.01154,2.11741,2.22328,2.32915,2.43502,2.54089,2.64676,2.75263,2.8585,2.96437,3.07024,3.17611,3.28198,3.38786,3.49373,3.5996,3.70547,3.81134,3.91721,4.02308,4.12895,4.23482,4.34069,4.44656,4.55243,4.6583,4.76417,4.87004,4.97591,5.08178,5.18765,5.29352,5.39939,5.50527,5.61114,5.71701,5.82288,5.92875,6.03462,6.14049,6.24636,6.35223,6.4581,6.56397,6.66984,6.77571,6.88158,6.98745,7.09332,7.19919,7.30506,7.41093,7.5168,7.62267,7.72855,7.83442,7.94029,8.04616,8.15203,8.2579,8.36377,8.46964,8.56939,8.67526,8.78113,8.88701,8.98676,9.09263,9.1985,9.30437,9.41024,9.51611,9.62198,9.72785,9.83372,9.9396,10.0455,10.1513,10.2572,10.3631,10.4689,10.5748,10.6807,10.7866,10.8924,10.9983,11.1042,11.2039,11.3098,11.4157,11.5215,11.6274,11.7333,11.8391,11.945,12.0509,12.1568,12.2626,12.3685,12.4744,12.5802,12.6861,12.792,12.8979,13.0037,13.1096,13.2155,13.3213,13.4272,13.5331,13.6389,13.7448,13.8507,13.9566,14.0563,14.1622,14.2681,14.3739,14.4798,14.5857,14.6915,14.7974,14.9033,15.003,15.1089,15.2148,15.3206,15.4265,15.5324,15.6383,15.7441,15.85,15.9559,16.0556,16.1615,16.2674,16.3732,16.4791,16.585,16.6908,16.7967,16.9026,17.0085,17.1143,17.2202,17.3261,17.4319,17.5378,17.6437,17.7496,17.8554,17.9613,18.0672,18.173,18.2789,18.3848,18.4906,18.5965,18.7024,18.8083,18.9141,19.02,19.1259,19.2317,19.3315,19.4374,19.5432,19.643,19.7489,19.8547,19.9606,20.0665,20.1723,20.2782,20.3841,20.49,20.5897,20.6956,20.8014,20.9073,21.0132,21.1191,21.2249,21.3308,21.4367,21.5425,21.6484,21.7543,21.8602,21.966,22.0719,22.1778,22.2836,22.3895,22.4954,22.6012,22.7071,22.813,22.9189,23.0247,23.1306,23.2365,23.3423,23.4482,23.5541,23.66,23.7658,23.8717,23.9776,24.0834,24.1893,24.2952,24.3949,24.5008,24.6067,24.7125,24.8184,24.9243,25.0302,25.136,25.2358,25.3416,25.4475,25.5534,25.6593,25.7651,25.871,25.9769,26.0827,26.1886,26.2945,26.3942,26.5001,26.606,26.7119,26.8177,26.9236,27.0295,27.1353,27.2412,27.3471,27.4468,27.5466,27.6525,27.7583,27.8642,27.9701,28.0759,28.1818,28.2877,28.3935,28.4994,28.6053,28.7112,28.817,28.9229,29.0288,29.1346,29.2405,29.3464,29.4523,29.5581,29.664,29.7699,29.8757,29.9816,30.0875,30.1933,30.2931,30.399,30.5048,30.6107,30.7166,30.8225,30.9283,31.0281,31.134,31.2398,31.3457,31.4516,31.5574,31.6633,31.7692,31.875,31.9809,32.0868,32.1927,32.2985,32.3983,32.5042,32.61,32.7159,32.8218,32.9215,33.0274,33.1271,33.233,33.3389,33.4448,33.5506,33.6565,33.7624,33.8682,33.9741,34.08,34.1797,34.2856,34.3915,34.4973,34.6032,34.7091,34.815,34.9208,35.0267,35.1326,35.2384,35.3443,35.4502,35.5561,35.6558,35.7617,35.8675,35.9734,36.0793,36.1729,36.2727,36.3786,36.4783,36.5842,36.6901,36.7898,36.8957,37.0015,37.1074,37.2133,37.3192,37.425,37.5309,37.6307,37.7365,37.8424,37.9483,38.0541,38.1539,38.2598,38.3656,38.4715,38.5774,38.6779,38.783,38.8889,38.9947,39.0945,39.2004,39.3062,39.3999,39.5057,39.6116,39.7175,39.8234,39.9231,40.029,40.1349,40.2407,40.3466,40.4464,40.5522,40.652,40.7517,40.8515,40.9574,41.0632,41.163,41.2689,41.3747,41.4806,41.5865,41.6923,41.7982,41.9041,42.0038,42.1097,42.2156,42.3214,42.4273,42.5332,42.6391,42.7449,42.8484,42.9444,43.0503,43.1562,43.2559,43.3618,43.4616,43.5613,43.6672,43.7731,43.8789,43.9787,44.0846,44.1843,44.2902,44.396,44.5019,44.6078,44.7137,44.8195,44.9254,45.0252,45.131,45.2369,45.3428,45.4486,45.5545,45.6604,45.7663,45.8721,45.978,46.0839,46.1897,46.2956,46.3954,46.5012,46.601,46.7069,46.8127,46.9186,47.0245,47.1303,47.2362,47.3421,47.4479,47.5538,47.6597,47.7594,47.8653,47.9712,48.0771,48.1829,48.2827,48.3886,48.4944,48.6003,48.7062,48.812,48.9118,49.0177,49.1235,49.2233,49.3292,49.435,49.5348,49.6407,49.7404,49.8463,49.9521,50.058,50.1639,50.2698,50.3756,50.4815,50.5874,50.6932,50.7991,50.905,50.9986,51.1045,51.2042,51.3101,51.416,51.5157,51.6094,51.7031,51.8089,51.9148,52.0145,52.1143,52.2201,52.326,52.4319,52.5378,52.6436,52.7495,52.8493,52.9551,53.061,53.1669,53.2727,53.3786,53.4845,53.5904,53.6901,53.796,53.9018,54.0077,54.1136,54.2195,54.3253,54.4312,54.5371,54.6368,54.7427,54.8486,54.9544,55.0603,55.1662,55.272,55.3779,55.4838,55.5897,55.6894,55.7892,55.895,55.9948,56.0937,56.1821,56.2818,56.3816,56.4813,56.5811,56.687,56.7867,56.8865,56.9924,57.0921,57.1919,57.2977,57.4036,57.5034,57.6092,57.7151,57.8087,57.9146,58.0205,58.1202,58.22,58.3197,58.4256,58.5315,58.6312,58.7371,58.843,58.9489,59.0547,59.1606,59.2665,59.3723,59.4782,59.5841,59.6899,59.7958,59.8956,60.0014,60.1073,60.203,60.3068,60.4048,60.5002,60.6061,60.7058,60.8117,60.9176,61.0173,61.1171,61.2169,61.3105,61.4164,61.5222,61.6281,61.734,61.8398,61.9396,62.0455,62.1513,62.2572,62.3631,62.469,62.5696,62.6746,62.7805,62.8863,62.9861,63.0858,63.1856,63.285,63.3851,63.4787,63.5785,63.6844,63.7902,63.89,63.9959,64.0956,64.1893,64.2951,64.401,64.5069,64.5944,64.7003,64.8,64.8998,64.9934,65.0932,65.1868,65.2866,65.3863,65.4861,65.5797,65.6856,65.7792,65.8839,65.9787,66.0846,66.1905,66.2936,66.39,66.4959,66.5956,66.7015,66.8012,66.901,67.0008,67.1005,67.2003,67.3061,67.4059,67.5056,67.5993,67.6929,67.7743,67.868,67.9738,68.0797,68.1856,68.2915,68.3851,68.4849,68.5785,68.6785,68.7841,68.89,68.9959,69.0882,69.177,69.2707,69.3765,69.4763,69.5822,69.6819,69.7792,69.8814,69.9812,70.0809,70.1746,70.2805,70.3802,70.4861,70.5864,70.6856,70.7792,70.8738,70.9726,71.0785,71.1844,71.278,71.3716,71.4714,71.5712,71.6648,71.7605,71.8582,71.9641,72.0699,72.1697,72.2694,72.3753,72.4812,72.5687,72.6685,72.7743,72.8619,72.9616,73.0675,73.1611,73.2548,73.3545,73.4482,73.554,73.6538,73.7474,73.8472,73.9531,74.0589,74.1587,74.2646,74.3704,74.4763,74.576,74.6819,74.7817,74.8692,74.9751,75.0809,75.1807,75.2805,75.3802,75.4738,75.5675,75.6611,75.7609,75.8606,75.9543,76.054,76.1538,76.2535,76.3594,76.4592,76.5528,76.6526,76.7566,76.8582,76.9579,77.0562,77.1452,77.245,77.3386,77.4323,77.5259,77.6318,77.7254,77.8313,77.9188,78.004,78.0939,78.1814,78.275,78.3564,78.4562,78.5498,78.6374,78.7249,78.8124,78.9122,79.018,79.1117,79.2175,79.3065,79.4048,79.4924,79.586,79.6857,79.7733,79.8669,79.9728,80.0725,80.1662,80.2598,80.3535,80.4349,80.5407,80.6344,80.7402,80.8278,80.9275,81.0273,81.127,81.2207,81.3143,81.4018,81.4955,81.6014,81.695,81.7948,81.8823,81.982,82.0818,82.1815,82.2874,82.3688,82.4686,82.5683,82.662,82.7617,82.8493,82.9429,83.0488,83.1546,83.2483,83.3419,83.4478,83.5537,83.6534,83.7471,83.8346,83.9405,84.0463,84.1461,84.2458,84.3395,84.4331,84.5349,84.6265,84.7263,84.8321,84.938,85.0378,85.1314,85.2067,85.3126,85.4155,85.5182,85.6179,85.7116,85.7991,85.8928,85.9864,86.08,86.1676,86.2673,86.3548,86.4551,86.536,86.6174,86.7058,86.7925,86.8922,86.9797,87.0666,87.1487,87.2546,87.336,87.4235,87.5232,87.623,87.7166,87.8042,87.8733,87.9533,88.0178,88.0939,88.1745,88.2682,88.3557,88.4554,88.543,88.6183,88.718,88.7994,88.8992,88.9928,89.0742,89.1641,89.2432,89.3368,89.4427,89.5241,89.6238,89.7114,89.8111,89.8979,89.9801,90.0492,90.1241,90.2097,90.2874,90.3627,90.4563,90.5438,90.6191,90.725,90.8186,90.9184,91.012,91.1057,91.1943,91.2868,91.3682,91.4619,91.5494,91.6308,91.7122,91.8059,91.8873,91.9687,92.0746,92.1682,92.2496,92.3494,92.4479,92.5428,92.6486,92.7362,92.827,92.899,92.9615,93.0557,93.1432,93.2367,93.3183,93.3957,93.4811,93.5686,93.6648,93.7559,93.8618,93.9554,94.0429,94.1304,94.2119,94.3116,94.3869,94.4744,94.5558,94.6311,94.7309,94.8245,94.9121,95.0101,95.0749,95.1563,95.2377,95.3252,95.4005,95.4758,95.5694,95.6631,95.7194,95.777,95.8767,95.964,96.0457,96.1393,96.2207,96.3144,96.3897,96.4772,96.5647,96.6461,96.7337,96.8212,96.9148,97.0085,97.1076,97.1993,97.2894,97.3891,97.4622,97.5458,97.6273,97.7209,97.7962,97.8898,97.9835,98.0771,98.183,98.2389,98.2908,98.3722,98.4345,98.5105,98.5919,98.6669,98.7548,98.8362,98.9054,99.0094,99.0865,99.1378,99.2126,99.2941,99.3694,99.4263,99.4894,99.5585,99.6086,99.6663,99.7233,99.7986,99.88,99.9492,100]
					}
				]
			}
		]
	},
	"preparationReport": {
		"reportType": "Preparation",
		"summary": {
			"dictionary": "Accident",
			"variables": {
				"types": [
					"Categorical",
					"Numerical",
					"Date",
					"Time",
					"Entity",
					"Table"
				],
				"numbers": [
					32,
					81,
					1,
					1,
					1,
					1
				]
			},
			"database": "s3:\/\/\/project\/c29961bb-8cc3-4c58-bf47-5cf216b361ef\/NewAccident\/Accidents.txt_sorted",
			"samplePercentage": 70,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 40470,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity",
			"targetDescriptiveStats": {
				"values": 2,
				"mode": "NonLethal",
				"modeFrequency": 38244
			},
			"targetValues": {
				"values": ["Lethal","NonLethal"],
				"frequencies": [2226,38244]
			},
			"evaluatedVariables": 112,
			"nativeVariables": 12,
			"constructedVariables": 100,
			"informativeVariables": 82,
			"featureEngineering": {
				"maxNumberOfConstructedVariables": 100,
				"maxNumberOfTrees": 0,
				"maxNumberOfVariablePairs": 0
			},
			"discretization": "MODL",
			"valueGrouping": "MODL",
			"nullModel": {
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07
			}
		},
		"variablesStatistics": [
			{
				"rank": "R001",
				"name": "InAgglomeration",
				"type": "Categorical",
				"level": 0.0588135,
				"parts": 2,
				"values": 2,
				"mode": "Yes",
				"modeFrequency": 25982,
				"constructionCost": 3.2581,
				"preparationCost": 21.1893,
				"dataCost": 8094.58
			},
			{
				"rank": "R002",
				"name": "Place.RoadNumber",
				"type": "Categorical",
				"level": 0.055489,
				"parts": 3,
				"values": 1029,
				"mode": "",
				"modeFrequency": 15352,
				"constructionCost": 8.59563,
				"preparationCost": 56.2082,
				"dataCost": 8082.9,
				"derivationRule": "GetValueC(Place, RoadNumber)"
			},
			{
				"rank": "R003",
				"name": "Department",
				"type": "Categorical",
				"level": 0.0515375,
				"parts": 4,
				"values": 101,
				"mode": "750",
				"modeFrequency": 3907,
				"constructionCost": 3.2581,
				"preparationCost": 97.5441,
				"dataCost": 8080.99
			},
			{
				"rank": "R004",
				"name": "Place.RoadType",
				"type": "Categorical",
				"level": 0.051478,
				"parts": 3,
				"values": 8,
				"mode": "Communal",
				"modeFrequency": 18738,
				"constructionCost": 8.59563,
				"preparationCost": 32.4879,
				"dataCost": 8141.22,
				"derivationRule": "GetValueC(Place, RoadType)"
			},
			{
				"rank": "R005",
				"name": "Place.RoadMarkerDistance",
				"type": "Numerical",
				"level": 0.0482013,
				"parts": 2,
				"values": 1097,
				"min": 0,
				"max": 8902,
				"mean": 253.4758045,
				"stdDev": 343.1906829,
				"missingNumber": 11229,
				"constructionCost": 7.41698,
				"preparationCost": 24.7022,
				"dataCost": 8178.45,
				"derivationRule": "GetValue(Place, RoadMarkerDistance)"
			},
			{
				"rank": "R006",
				"name": "Place.RoadMarkerId",
				"type": "Categorical",
				"level": 0.0465788,
				"parts": 4,
				"values": 423,
				"mode": "0",
				"modeFrequency": 12249,
				"constructionCost": 8.59563,
				"preparationCost": 50.9873,
				"dataCost": 8164.98,
				"derivationRule": "GetValueC(Place, RoadMarkerId)"
			},
			{
				"rank": "R007",
				"name": "CollisionType",
				"type": "Categorical",
				"level": 0.0359826,
				"parts": 3,
				"values": 8,
				"mode": "Other",
				"modeFrequency": 13682,
				"constructionCost": 3.2581,
				"preparationCost": 40.549,
				"dataCost": 8272.17
			},
			{
				"rank": "R008",
				"name": "Longitude",
				"type": "Numerical",
				"level": 0.0340942,
				"parts": 17,
				"values": 33919,
				"min": -0.99994,
				"max": 9.97981,
				"mean": 3.383265572,
				"stdDev": 2.330082592,
				"missingNumber": 1272,
				"constructionCost": 3.2581,
				"preparationCost": 185.04,
				"dataCost": 8143.96
			},
			{
				"rank": "R009",
				"name": "Mode(Vehicles.FixedObstacle)",
				"type": "Categorical",
				"level": 0.0303871,
				"parts": 3,
				"values": 18,
				"mode": "None",
				"modeFrequency": 32714,
				"constructionCost": 8.66974,
				"preparationCost": 38.7606,
				"dataCost": 8316.81,
				"derivationRule": "TableMode(Vehicles, FixedObstacle)"
			},
			{
				"rank": "R010",
				"name": "Latitude",
				"type": "Numerical",
				"level": 0.0297944,
				"parts": 11,
				"values": 33911,
				"min": 12.71306,
				"max": 57.70103,
				"mean": 46.27789549,
				"stdDev": 5.273317606,
				"missingNumber": 1272,
				"constructionCost": 3.2581,
				"preparationCost": 130.909,
				"dataCost": 8235.19
			},
			{
				"rank": "R011",
				"name": "Commune",
				"type": "Categorical",
				"level": 0.025324,
				"parts": 2,
				"values": 791,
				"mode": "055",
				"modeFrequency": 1641,
				"constructionCost": 3.2581,
				"preparationCost": 123.677,
				"dataCost": 8280.98
			},
			{
				"rank": "R012",
				"name": "Light",
				"type": "Categorical",
				"level": 0.0234229,
				"parts": 4,
				"values": 5,
				"mode": "Daylight",
				"modeFrequency": 27136,
				"constructionCost": 3.2581,
				"preparationCost": 44.1861,
				"dataCost": 8376.87
			},
			{
				"rank": "R013",
				"name": "Mean(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0205789,
				"parts": 2,
				"values": 85,
				"min": 0,
				"max": 200,
				"mean": 0.1819698911,
				"stdDev": 3.001707461,
				"missingNumber": 7020,
				"constructionCost": 12.2948,
				"preparationCost": 20.0243,
				"dataCost": 8416.53,
				"derivationRule": "TableMean(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R014",
				"name": "Count(Vehicles) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0204272,
				"parts": 3,
				"values": 11,
				"min": 0,
				"max": 12,
				"mean": 1.462713121,
				"stdDev": 0.9006111383,
				"missingNumber": 0,
				"constructionCost": 11.6016,
				"preparationCost": 32.3612,
				"dataCost": 8406.2,
				"derivationRule": "TableCount(`Vehicles where FixedObstacle = None`)"
			},
			{
				"rank": "R015",
				"name": "Count(Vehicles) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0202669,
				"parts": 2,
				"values": 9,
				"min": 0,
				"max": 9,
				"mean": 0.2477143563,
				"stdDev": 0.4747559574,
				"missingNumber": 0,
				"constructionCost": 11.6016,
				"preparationCost": 20.2431,
				"dataCost": 8419.7,
				"derivationRule": "TableCount(`Vehicles where FixedObstacle <> None`)"
			},
			{
				"rank": "R016",
				"name": "Min(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0201866,
				"parts": 2,
				"values": 28,
				"min": 0,
				"max": 900,
				"mean": 0.1773833564,
				"stdDev": 9.449233646,
				"missingNumber": 31061,
				"constructionCost": 12.2948,
				"preparationCost": 20.2431,
				"dataCost": 8419.7,
				"derivationRule": "TableMin(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R017",
				"name": "Sum(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0189016,
				"parts": 8,
				"values": 1511,
				"min": 1920,
				"max": 101967,
				"mean": 4459.796615,
				"stdDev": 2534.336107,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 102.876,
				"dataCost": 8350.25,
				"derivationRule": "TableSum(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R018",
				"name": "Sum(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0179806,
				"parts": 8,
				"values": 698,
				"min": 1920,
				"max": 23676,
				"mean": 3324.717544,
				"stdDev": 1349.183405,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 97.0665,
				"dataCost": 8364.01,
				"derivationRule": "TableSum(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R019",
				"name": "Mode(Vehicles.MobileObstacle)",
				"type": "Categorical",
				"level": 0.0163056,
				"parts": 3,
				"values": 8,
				"mode": "Vehicle",
				"modeFrequency": 21630,
				"constructionCost": 8.66974,
				"preparationCost": 32.4104,
				"dataCost": 8444.63,
				"derivationRule": "TableMode(Vehicles, MobileObstacle)"
			},
			{
				"rank": "R020",
				"name": "Place.Circulation",
				"type": "Categorical",
				"level": 0.016231,
				"parts": 3,
				"values": 6,
				"mode": "TwoWay",
				"modeFrequency": 24798,
				"constructionCost": 8.59563,
				"preparationCost": 34.2187,
				"dataCost": 8443.54,
				"derivationRule": "GetValueC(Place, Circulation)"
			},
			{
				"rank": "R021",
				"name": "Sum(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0159865,
				"parts": 5,
				"values": 1075,
				"min": 1920,
				"max": 23641.5,
				"mean": 3320.857598,
				"stdDev": 1350.080322,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 66.352,
				"dataCost": 8411.93,
				"derivationRule": "TableSum(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R022",
				"name": "Sum(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0157996,
				"parts": 5,
				"values": 2026,
				"min": 1920,
				"max": 23641.5,
				"mean": 3320.793074,
				"stdDev": 1350.076789,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 66.3034,
				"dataCost": 8413.59,
				"derivationRule": "TableSum(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R023",
				"name": "CountDistinct(Vehicles.ImpactPoint)",
				"type": "Numerical",
				"level": 0.0154583,
				"parts": 2,
				"values": 7,
				"min": 1,
				"max": 7,
				"mean": 1.552409192,
				"stdDev": 0.5667314917,
				"missingNumber": 0,
				"constructionCost": 8.66974,
				"preparationCost": 20.5787,
				"dataCost": 8463.78,
				"derivationRule": "TableCountDistinct(Vehicles, ImpactPoint)"
			},
			{
				"rank": "R024",
				"name": "Place.LaneNumber",
				"type": "Numerical",
				"level": 0.0154264,
				"parts": 3,
				"values": 15,
				"min": 0,
				"max": 13,
				"mean": 2.350208131,
				"stdDev": 1.371147788,
				"missingNumber": 351,
				"constructionCost": 7.41698,
				"preparationCost": 32.231,
				"dataCost": 8453.65,
				"derivationRule": "GetValue(Place, LaneNumber)"
			},
			{
				"rank": "R025",
				"name": "Mode(Vehicles.Maneuver)",
				"type": "Categorical",
				"level": 0.0154212,
				"parts": 4,
				"values": 26,
				"mode": "NoDirectionChange",
				"modeFrequency": 20064,
				"constructionCost": 8.66974,
				"preparationCost": 56.878,
				"dataCost": 8427.8,
				"derivationRule": "TableMode(Vehicles, Maneuver)"
			},
			{
				"rank": "R026",
				"name": "Max(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0149757,
				"parts": 7,
				"values": 952,
				"min": 1920,
				"max": 99970,
				"mean": 3049.884977,
				"stdDev": 1983.996676,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 89.6032,
				"dataCost": 8397.39,
				"derivationRule": "TableMax(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R027",
				"name": "Median(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0145064,
				"parts": 4,
				"values": 995,
				"min": 1920,
				"max": 2016,
				"mean": 1978.583164,
				"stdDev": 14.60058632,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 50.7788,
				"dataCost": 8440.27,
				"derivationRule": "TableMedian(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R028",
				"name": "Median(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0142318,
				"parts": 4,
				"values": 322,
				"min": 1920,
				"max": 2016,
				"mean": 1978.620478,
				"stdDev": 14.75742717,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 50.744,
				"dataCost": 8442.67,
				"derivationRule": "TableMedian(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R029",
				"name": "Mean(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0141913,
				"parts": 4,
				"values": 1336,
				"min": 1920,
				"max": 2016,
				"mean": 1978.512101,
				"stdDev": 14.49585056,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 51.1505,
				"dataCost": 8442.61,
				"derivationRule": "TableMean(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R030",
				"name": "Mean(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.013843,
				"parts": 9,
				"values": 2342,
				"min": 1920,
				"max": 72137,
				"mean": 2799.862411,
				"stdDev": 1506.172501,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 108.117,
				"dataCost": 8388.65,
				"derivationRule": "TableMean(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R031",
				"name": "Mean(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0138344,
				"parts": 4,
				"values": 657,
				"min": 1920,
				"max": 2016,
				"mean": 1978.555784,
				"stdDev": 14.65423274,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 50.7314,
				"dataCost": 8446.11,
				"derivationRule": "TableMean(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R032",
				"name": "Sum(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0136727,
				"parts": 4,
				"values": 671,
				"min": 1916,
				"max": 23607,
				"mean": 3316.763652,
				"stdDev": 1351.008812,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 51.5628,
				"dataCost": 8446.68,
				"derivationRule": "TableSum(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R033",
				"name": "Median(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0131188,
				"parts": 9,
				"values": 1477,
				"min": 1920,
				"max": 72137,
				"mean": 2781.673635,
				"stdDev": 1510.494791,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 112.716,
				"dataCost": 8390.3,
				"derivationRule": "TableMedian(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R034",
				"name": "Mode(Vehicles.Mode(Users.TripReason))",
				"type": "Categorical",
				"level": 0.0125871,
				"parts": 3,
				"values": 8,
				"mode": "Leisure",
				"modeFrequency": 16734,
				"constructionCost": 11.5601,
				"preparationCost": 39.7568,
				"dataCost": 8466.47,
				"derivationRule": "TableMode(Vehicles, `Mode(Users.TripReason)`)"
			},
			{
				"rank": "R035",
				"name": "Median(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0125077,
				"parts": 5,
				"values": 181,
				"min": 1920,
				"max": 2018,
				"mean": 1981.640215,
				"stdDev": 15.53628599,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 62.1977,
				"dataCost": 8446.09,
				"derivationRule": "TableMedian(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R036",
				"name": "Mean(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0123813,
				"parts": 5,
				"values": 442,
				"min": 1920,
				"max": 2018,
				"mean": 1981.592759,
				"stdDev": 15.4419471,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 62.144,
				"dataCost": 8447.23,
				"derivationRule": "TableMean(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R037",
				"name": "Max(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0118101,
				"parts": 4,
				"values": 549,
				"min": 1920,
				"max": 2018,
				"mean": 1984.109665,
				"stdDev": 15.16327467,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 49.7676,
				"dataCost": 8464.54,
				"derivationRule": "TableMax(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R038",
				"name": "Min(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0115712,
				"parts": 3,
				"values": 102,
				"min": 1911,
				"max": 2016,
				"mean": 1969.597208,
				"stdDev": 18.01405917,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 36.3306,
				"dataCost": 8480.04,
				"derivationRule": "TableMin(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R039",
				"name": "Max(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0115614,
				"parts": 4,
				"values": 188,
				"min": 1920,
				"max": 2018,
				"mean": 1984.201149,
				"stdDev": 15.37401215,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 49.8095,
				"dataCost": 8466.64,
				"derivationRule": "TableMax(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R040",
				"name": "Count(Vehicles) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0114714,
				"parts": 2,
				"values": 10,
				"min": 0,
				"max": 10,
				"mean": 0.5090684458,
				"stdDev": 0.56019367,
				"missingNumber": 0,
				"constructionCost": 11.6016,
				"preparationCost": 20.5791,
				"dataCost": 8495.24,
				"derivationRule": "TableCount(`Vehicles where MobileObstacle <> Vehicle`)"
			},
			{
				"rank": "R041",
				"name": "Max(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0109785,
				"parts": 3,
				"values": 97,
				"min": 1920,
				"max": 2018,
				"mean": 1987.501977,
				"stdDev": 15.72918775,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 39.3554,
				"dataCost": 8482.12,
				"derivationRule": "TableMax(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R042",
				"name": "Min(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0108365,
				"parts": 3,
				"values": 188,
				"min": 1917,
				"max": 2016,
				"mean": 1972.831381,
				"stdDev": 17.34507786,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 37.1594,
				"dataCost": 8485.54,
				"derivationRule": "TableMin(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R043",
				"name": "Median(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0105702,
				"parts": 4,
				"values": 175,
				"min": 1916,
				"max": 2016,
				"mean": 1975.426415,
				"stdDev": 16.24833523,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 48.5854,
				"dataCost": 8476.42,
				"derivationRule": "TableMedian(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R044",
				"name": "Min(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0105432,
				"parts": 3,
				"values": 529,
				"min": 1917,
				"max": 2016,
				"mean": 1972.827616,
				"stdDev": 17.21502375,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 37.1404,
				"dataCost": 8488.09,
				"derivationRule": "TableMin(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R045",
				"name": "Mean(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.0104339,
				"parts": 4,
				"values": 437,
				"min": 1916,
				"max": 2016,
				"mean": 1975.36078,
				"stdDev": 16.14996791,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 49.1852,
				"dataCost": 8476.99,
				"derivationRule": "TableMean(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R046",
				"name": "IntersectionType",
				"type": "Categorical",
				"level": 0.00959415,
				"parts": 2,
				"values": 9,
				"mode": "NoIntersection",
				"modeFrequency": 26833,
				"constructionCost": 3.2581,
				"preparationCost": 21.161,
				"dataCost": 8519.19
			},
			{
				"rank": "R047",
				"name": "Place.StripWidth",
				"type": "Numerical",
				"level": 0.00938844,
				"parts": 2,
				"values": 89,
				"min": 0,
				"max": 714,
				"mean": 3.796960879,
				"stdDev": 18.69424166,
				"missingNumber": 31191,
				"constructionCost": 7.41698,
				"preparationCost": 20.2334,
				"dataCost": 8517.73,
				"derivationRule": "GetValue(Place, StripWidth)"
			},
			{
				"rank": "R048",
				"name": "Max(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.0093563,
				"parts": 2,
				"values": 55,
				"min": 0,
				"max": 200,
				"mean": 0.214500763,
				"stdDev": 3.325295456,
				"missingNumber": 16223,
				"constructionCost": 12.2948,
				"preparationCost": 20.5402,
				"dataCost": 8512.83,
				"derivationRule": "TableMax(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R049",
				"name": "Count(Vehicles) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.009222,
				"parts": 3,
				"values": 10,
				"min": 0,
				"max": 12,
				"mean": 1.201359031,
				"stdDev": 1.080365061,
				"missingNumber": 0,
				"constructionCost": 11.6016,
				"preparationCost": 31.8611,
				"dataCost": 8503.36,
				"derivationRule": "TableCount(`Vehicles where MobileObstacle = Vehicle`)"
			},
			{
				"rank": "R050",
				"name": "Min(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00920787,
				"parts": 4,
				"values": 101,
				"min": 1917,
				"max": 2018,
				"mean": 1975.624734,
				"stdDev": 18.63300106,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 48.5622,
				"dataCost": 8488.19,
				"derivationRule": "TableMin(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R051",
				"name": "Max(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00886278,
				"parts": 5,
				"values": 100,
				"min": 1916,
				"max": 2018,
				"mean": 1981.04554,
				"stdDev": 17.45875939,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 61.2569,
				"dataCost": 8478.47,
				"derivationRule": "TableMax(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R052",
				"name": "Mode(Vehicles.Mode(Users.SafetyDeviceUsed))",
				"type": "Categorical",
				"level": 0.00878912,
				"parts": 2,
				"values": 4,
				"mode": "Yes",
				"modeFrequency": 26354,
				"constructionCost": 11.5601,
				"preparationCost": 23.251,
				"dataCost": 8515.74,
				"derivationRule": "TableMode(Vehicles, `Mode(Users.SafetyDeviceUsed)`)"
			},
			{
				"rank": "R053",
				"name": "Count(Vehicles)",
				"type": "Numerical",
				"level": 0.00878867,
				"parts": 2,
				"values": 11,
				"min": 1,
				"max": 12,
				"mean": 1.710427477,
				"stdDev": 0.6814550706,
				"missingNumber": 0,
				"constructionCost": 6.72383,
				"preparationCost": 20.5277,
				"dataCost": 8523.31,
				"derivationRule": "TableCount(Vehicles)"
			},
			{
				"rank": "R054",
				"name": "Mode(Vehicles.ImpactPoint)",
				"type": "Categorical",
				"level": 0.00873014,
				"parts": 3,
				"values": 11,
				"mode": "Front",
				"modeFrequency": 17592,
				"constructionCost": 8.66974,
				"preparationCost": 38.8588,
				"dataCost": 8503.53,
				"derivationRule": "TableMode(Vehicles, ImpactPoint)"
			},
			{
				"rank": "R055",
				"name": "Count(Vehicles) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0.00866069,
				"parts": 2,
				"values": 12,
				"min": 0,
				"max": 12,
				"mean": 1.695404003,
				"stdDev": 0.6904023663,
				"missingNumber": 0,
				"constructionCost": 11.6016,
				"preparationCost": 20.5358,
				"dataCost": 8519.53,
				"derivationRule": "TableCount(`Vehicles where PassengerNumber <= 0.5`)"
			},
			{
				"rank": "R056",
				"name": "Hour.DecimalTime",
				"type": "Numerical",
				"level": 0.0077074,
				"parts": 2,
				"values": 1312,
				"min": 0.01666666667,
				"max": 23.98333333,
				"mean": 13.92281855,
				"stdDev": 5.4750615,
				"missingNumber": 0,
				"constructionCost": 6.03069,
				"preparationCost": 28.6024,
				"dataCost": 8525.25,
				"derivationRule": "DecimalTime(Hour)"
			},
			{
				"rank": "R057",
				"name": "Min(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00740509,
				"parts": 6,
				"values": 736,
				"min": 1917,
				"max": 72137,
				"mean": 2572.246602,
				"stdDev": 1367.158322,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 68.8472,
				"dataCost": 8483.46,
				"derivationRule": "TableMin(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R058",
				"name": "StdDev(Vehicles.Sum(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00688224,
				"parts": 3,
				"values": 2809,
				"min": 0,
				"max": 48986.5,
				"mean": 234.0349735,
				"stdDev": 775.2260491,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.6349,
				"dataCost": 8524.18,
				"derivationRule": "TableStdDev(Vehicles, `Sum(Users.BirthYear)`)"
			},
			{
				"rank": "R059",
				"name": "Place.LaneWidth",
				"type": "Numerical",
				"level": 0.00661915,
				"parts": 2,
				"values": 209,
				"min": 0,
				"max": 800,
				"mean": 39.56550858,
				"stdDev": 53.24797851,
				"missingNumber": 30914,
				"constructionCost": 7.41698,
				"preparationCost": 20.2539,
				"dataCost": 8541.6,
				"derivationRule": "GetValue(Place, LaneWidth)"
			},
			{
				"rank": "R060",
				"name": "Sum(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0.00657609,
				"parts": 3,
				"values": 31,
				"min": 1,
				"max": 51,
				"mean": 2.253842352,
				"stdDev": 1.275079783,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.3967,
				"dataCost": 8527.06,
				"derivationRule": "TableSum(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R061",
				"name": "Place.Layout",
				"type": "Categorical",
				"level": 0.00590765,
				"parts": 3,
				"values": 6,
				"mode": "Straight",
				"modeFrequency": 32008,
				"constructionCost": 8.59563,
				"preparationCost": 35.9937,
				"dataCost": 8530.82,
				"derivationRule": "GetValueC(Place, Layout)"
			},
			{
				"rank": "R062",
				"name": "StdDev(Vehicles.Median(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00518908,
				"parts": 3,
				"values": 1634,
				"min": 0,
				"max": 40,
				"mean": 5.527232641,
				"stdDev": 7.110129318,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.631,
				"dataCost": 8538.79,
				"derivationRule": "TableStdDev(Vehicles, `Median(Users.BirthYear)`)"
			},
			{
				"rank": "R063",
				"name": "StdDev(Vehicles.Min(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00514283,
				"parts": 3,
				"values": 1188,
				"min": 0,
				"max": 40,
				"mean": 5.567576573,
				"stdDev": 7.126133354,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.6326,
				"dataCost": 8539.19,
				"derivationRule": "TableStdDev(Vehicles, `Min(Users.BirthYear)`)"
			},
			{
				"rank": "R064",
				"name": "StdDev(Vehicles.Mean(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00488064,
				"parts": 3,
				"values": 2139,
				"min": 0,
				"max": 40,
				"mean": 5.485214554,
				"stdDev": 7.059623681,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.6387,
				"dataCost": 8541.44,
				"derivationRule": "TableStdDev(Vehicles, `Mean(Users.BirthYear)`)"
			},
			{
				"rank": "R065",
				"name": "StdDev(Vehicles.Max(Users.BirthYear))",
				"type": "Numerical",
				"level": 0.00470709,
				"parts": 3,
				"values": 1264,
				"min": 0,
				"max": 44.5,
				"mean": 5.768482407,
				"stdDev": 7.399592736,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.6289,
				"dataCost": 8542.95,
				"derivationRule": "TableStdDev(Vehicles, `Max(Users.BirthYear)`)"
			},
			{
				"rank": "R066",
				"name": "Mean(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0.00454045,
				"parts": 3,
				"values": 61,
				"min": 0.3333333333,
				"max": 36,
				"mean": 1.395823381,
				"stdDev": 0.7626267818,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 32.1181,
				"dataCost": 8544.9,
				"derivationRule": "TableMean(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R067",
				"name": "CountDistinct(Vehicles.Mode(Users.Gender))",
				"type": "Numerical",
				"level": 0.00362489,
				"parts": 2,
				"values": 3,
				"min": 1,
				"max": 3,
				"mean": 1.296713615,
				"stdDev": 0.4607946132,
				"missingNumber": 0,
				"constructionCost": 11.5601,
				"preparationCost": 20.396,
				"dataCost": 8563.15,
				"derivationRule": "TableCountDistinct(Vehicles, `Mode(Users.Gender)`)"
			},
			{
				"rank": "R068",
				"name": "PostalAddress",
				"type": "Categorical",
				"level": 0.00355536,
				"parts": 2,
				"values": 27399,
				"mode": "",
				"modeFrequency": 403,
				"constructionCost": 3.2581,
				"preparationCost": 73.246,
				"dataCost": 8519.2
			},
			{
				"rank": "R069",
				"name": "Mode(Vehicles.Category)",
				"type": "Categorical",
				"level": 0.00330293,
				"parts": 3,
				"values": 24,
				"mode": "Car<=3.5T",
				"modeFrequency": 28921,
				"constructionCost": 8.66974,
				"preparationCost": 57.7243,
				"dataCost": 8531.49,
				"derivationRule": "TableMode(Vehicles, Category)"
			},
			{
				"rank": "R070",
				"name": "Min(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0.00316798,
				"parts": 3,
				"values": 19,
				"min": 0,
				"max": 36,
				"mean": 1.263750927,
				"stdDev": 0.7157503456,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 30.7849,
				"dataCost": 8558.07,
				"derivationRule": "TableMin(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R071",
				"name": "CountDistinct(Vehicles.Direction)",
				"type": "Numerical",
				"level": 0.00307631,
				"parts": 2,
				"values": 3,
				"min": 1,
				"max": 3,
				"mean": 1.198072646,
				"stdDev": 0.4007113044,
				"missingNumber": 0,
				"constructionCost": 8.66974,
				"preparationCost": 20.1235,
				"dataCost": 8571.04,
				"derivationRule": "TableCountDistinct(Vehicles, Direction)"
			},
			{
				"rank": "R072",
				"name": "Median(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0.00283809,
				"parts": 3,
				"values": 33,
				"min": 0,
				"max": 36,
				"mean": 1.387089202,
				"stdDev": 0.7642849972,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 30.5635,
				"dataCost": 8561.14,
				"derivationRule": "TableMedian(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R073",
				"name": "CountDistinct(Vehicles.Maneuver)",
				"type": "Numerical",
				"level": 0.00276032,
				"parts": 2,
				"values": 5,
				"min": 1,
				"max": 5,
				"mean": 1.479367433,
				"stdDev": 0.5326565961,
				"missingNumber": 0,
				"constructionCost": 8.66974,
				"preparationCost": 20.5747,
				"dataCost": 8573.32,
				"derivationRule": "TableCountDistinct(Vehicles, Maneuver)"
			},
			{
				"rank": "R074",
				"name": "Place.SchoolNear",
				"type": "Categorical",
				"level": 0.00238396,
				"parts": 2,
				"values": 4,
				"mode": "00",
				"modeFrequency": 32323,
				"constructionCost": 8.59563,
				"preparationCost": 20.8321,
				"dataCost": 8576.38,
				"derivationRule": "GetValueC(Place, SchoolNear)"
			},
			{
				"rank": "R075",
				"name": "CountDistinct(Vehicles.Category)",
				"type": "Numerical",
				"level": 0.00188707,
				"parts": 2,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.415567087,
				"stdDev": 0.5094363503,
				"missingNumber": 0,
				"constructionCost": 8.66974,
				"preparationCost": 20.5455,
				"dataCost": 8580.88,
				"derivationRule": "TableCountDistinct(Vehicles, Category)"
			},
			{
				"rank": "R076",
				"name": "Mode(Vehicles.Direction)",
				"type": "Categorical",
				"level": 0.00187139,
				"parts": 2,
				"values": 4,
				"mode": "Increasing",
				"modeFrequency": 16860,
				"constructionCost": 8.66974,
				"preparationCost": 23.8508,
				"dataCost": 8577.71,
				"derivationRule": "TableMode(Vehicles, Direction)"
			},
			{
				"rank": "R077",
				"name": "Date.WeekDay",
				"type": "Numerical",
				"level": 0.00149893,
				"parts": 2,
				"values": 7,
				"min": 1,
				"max": 7,
				"mean": 3.985791945,
				"stdDev": 1.933633428,
				"missingNumber": 0,
				"constructionCost": 6.03069,
				"preparationCost": 20.5632,
				"dataCost": 8586.85,
				"derivationRule": "WeekDay(Date)"
			},
			{
				"rank": "R078",
				"name": "Place.RoadLetter",
				"type": "Categorical",
				"level": 0.00147074,
				"parts": 2,
				"values": 40,
				"mode": "",
				"modeFrequency": 38585,
				"constructionCost": 8.59563,
				"preparationCost": 19.5458,
				"dataCost": 8585.54,
				"derivationRule": "GetValueC(Place, RoadLetter)"
			},
			{
				"rank": "R079",
				"name": "Place.Slope",
				"type": "Categorical",
				"level": 0.00115924,
				"parts": 2,
				"values": 6,
				"mode": "Flat",
				"modeFrequency": 32143,
				"constructionCost": 8.59563,
				"preparationCost": 20.8483,
				"dataCost": 8586.93,
				"derivationRule": "GetValueC(Place, Slope)"
			},
			{
				"rank": "R080",
				"name": "Max(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0.000882696,
				"parts": 2,
				"values": 26,
				"min": 1,
				"max": 50,
				"mean": 1.538547072,
				"stdDev": 0.9975181281,
				"missingNumber": 0,
				"constructionCost": 10.1896,
				"preparationCost": 23.6305,
				"dataCost": 8584.94,
				"derivationRule": "TableMax(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R081",
				"name": "Weather",
				"type": "Categorical",
				"level": 0.000652961,
				"parts": 3,
				"values": 10,
				"mode": "Normal",
				"modeFrequency": 32102,
				"constructionCost": 3.2581,
				"preparationCost": 32.589,
				"dataCost": 8584.89
			},
			{
				"rank": "R082",
				"name": "Place.SpecialLane",
				"type": "Categorical",
				"level": 0.000227779,
				"parts": 2,
				"values": 5,
				"mode": "0",
				"modeFrequency": 37135,
				"constructionCost": 8.59563,
				"preparationCost": 26.0364,
				"dataCost": 8589.78,
				"derivationRule": "GetValueC(Place, SpecialLane)"
			},
			{
				"rank": "R083",
				"name": "AccidentId",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 40470,
				"mode": "201800000001",
				"modeFrequency": 1,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07
			},
			{
				"rank": "R084",
				"name": "Count(Vehicles) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 6,
				"min": 0,
				"max": 5,
				"mean": 0.6663207314,
				"stdDev": 0.6576984219,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCount(`Vehicles where Category <> Car<=3.5T`)"
			},
			{
				"rank": "R085",
				"name": "Count(Vehicles) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 11,
				"min": 0,
				"max": 10,
				"mean": 1.044106746,
				"stdDev": 0.7939459191,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCount(`Vehicles where Category = Car<=3.5T`)"
			},
			{
				"rank": "R086",
				"name": "Count(Vehicles) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 0,
				"max": 2,
				"mean": 0.01502347418,
				"stdDev": 0.1238603324,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCount(`Vehicles where PassengerNumber > 0.5`)"
			},
			{
				"rank": "R087",
				"name": "CountDistinct(Vehicles.FixedObstacle)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.062713121,
				"stdDev": 0.2453840779,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCountDistinct(Vehicles, FixedObstacle)"
			},
			{
				"rank": "R088",
				"name": "CountDistinct(Vehicles.MobileObstacle)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.085964912,
				"stdDev": 0.2821573177,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCountDistinct(Vehicles, MobileObstacle)"
			},
			{
				"rank": "R089",
				"name": "CountDistinct(Vehicles.Mode(Users.TripReason))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 5,
				"min": 1,
				"max": 5,
				"mean": 1.353446998,
				"stdDev": 0.5095164096,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableCountDistinct(Vehicles, `Mode(Users.TripReason)`)"
			},
			{
				"rank": "R090",
				"name": "Date.Day",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 31,
				"min": 1,
				"max": 31,
				"mean": 15.67370892,
				"stdDev": 8.688438458,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "Day(Date)"
			},
			{
				"rank": "R091",
				"name": "Date.DecimalYear",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 365,
				"min": 2018,
				"max": 2018.99726,
				"mean": 2018.51746,
				"stdDev": 0.2796932999,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "DecimalYear(Date)"
			},
			{
				"rank": "R092",
				"name": "Date.YearDay",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 365,
				"min": 1,
				"max": 365,
				"mean": 189.8728935,
				"stdDev": 102.0880537,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "YearDay(Date)"
			},
			{
				"rank": "R093",
				"name": "GPSCode",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 6,
				"mode": "M",
				"modeFrequency": 39019,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07
			},
			{
				"rank": "R094",
				"name": "Max(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 74,
				"min": 0,
				"max": 900,
				"mean": 0.2612799605,
				"stdDev": 5.779720572,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMax(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R095",
				"name": "Max(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1578,
				"min": 0,
				"max": 41.5,
				"mean": 3.684485853,
				"stdDev": 6.93071238,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMax(Vehicles, `StdDev(Users.BirthYear)`)"
			},
			{
				"rank": "R096",
				"name": "Mean(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 97,
				"min": 0,
				"max": 450,
				"mean": 0.171389742,
				"stdDev": 3.465769956,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMean(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R097",
				"name": "Mean(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2448,
				"min": 0,
				"max": 41.5,
				"mean": 2.99694248,
				"stdDev": 6.139880446,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMean(Vehicles, `StdDev(Users.BirthYear)`)"
			},
			{
				"rank": "R098",
				"name": "Median(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 79,
				"min": 0,
				"max": 450,
				"mean": 0.1651964418,
				"stdDev": 3.454561662,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMedian(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R099",
				"name": "Median(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2001,
				"min": 0,
				"max": 41.5,
				"mean": 2.930798478,
				"stdDev": 6.150409944,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMedian(Vehicles, `StdDev(Users.BirthYear)`)"
			},
			{
				"rank": "R100",
				"name": "Min(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 41,
				"min": 0,
				"max": 150,
				"mean": 0.08828762046,
				"stdDev": 2.243677377,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMin(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R101",
				"name": "Min(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9129,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMin(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R102",
				"name": "Min(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 74,
				"min": 1,
				"max": 900,
				"mean": 17.61976549,
				"stdDev": 44.21064029,
				"missingNumber": 39873,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMin(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R103",
				"name": "Min(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 932,
				"min": 0,
				"max": 41.5,
				"mean": 2.390597332,
				"stdDev": 6.02955353,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableMin(Vehicles, `StdDev(Users.BirthYear)`)"
			},
			{
				"rank": "R104",
				"name": "Place.Infrastructure",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 9,
				"mode": "Unknown",
				"modeFrequency": 35408,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "GetValueC(Place, Infrastructure)"
			},
			{
				"rank": "R105",
				"name": "Place.Localization",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 7,
				"mode": "Lane",
				"modeFrequency": 22419,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "GetValueC(Place, Localization)"
			},
			{
				"rank": "R106",
				"name": "Place.RoadSecNumber",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"mode": "",
				"modeFrequency": 40355,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "GetValueC(Place, RoadSecNumber)"
			},
			{
				"rank": "R107",
				"name": "Place.SurfaceCondition",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 11,
				"mode": "Normal",
				"modeFrequency": 32114,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "GetValueC(Place, SurfaceCondition)"
			},
			{
				"rank": "R108",
				"name": "StdDev(Vehicles.Count(Users))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 69,
				"min": 0,
				"max": 24.5,
				"mean": 0.1347177371,
				"stdDev": 0.4027212881,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableStdDev(Vehicles, `Count(Users)`)"
			},
			{
				"rank": "R109",
				"name": "StdDev(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 84,
				"min": 0,
				"max": 450,
				"mean": 0.08584014083,
				"stdDev": 2.660003406,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableStdDev(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R110",
				"name": "StdDev(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1713,
				"min": 0,
				"max": 18.75,
				"mean": 0.6327575595,
				"stdDev": 2.018911681,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableStdDev(Vehicles, `StdDev(Users.BirthYear)`)"
			},
			{
				"rank": "R111",
				"name": "Sum(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 74,
				"min": 0,
				"max": 900,
				"mean": 0.2633802817,
				"stdDev": 5.804486114,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableSum(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R112",
				"name": "Sum(Vehicles.StdDev(Users.BirthYear))",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 1955,
				"min": 0,
				"max": 66.16212215,
				"mean": 3.798858171,
				"stdDev": 7.218746207,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6083,
				"dataCost": 8615.07,
				"derivationRule": "TableSum(Vehicles, `StdDev(Users.BirthYear)`)"
			}
		],
		"variablesDetailedStatistics": {
			"R001": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "InAgglomeration",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Yes"],
								["No"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[704,25278],
						[1522,12966]
					],
					"partInterests": [0.459336,0.540664]
				},
				"inputValues": {
					"values": ["Yes","No"],
					"frequencies": [25982,14488]
				}
			},
			"R002": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.RoadNumber",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["","0","86","104","15","50"],
								["1","7","2","13","10","5","20","8","11","9","118"],
								["6","4","3","12","19"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[460,20781],
						[1663,15626],
						[103,1837]
					],
					"partInterests": [0.55587,0.443999,0.000131203]
				},
				"inputValues": {
					"values": ["","0","1","86","7","6","4","3","104","2","13","10","15","12","5","20","8","50","19","11","9","118","17","14","35","21","51","31","16","630","18","559","57","25","55","115","193","24","28","34","62","136","22","29","30","137","37","42","36","85","26","43","906","113","63","23","88","116","27","40","102","52","75","32","901","48","126","33","81","44","41","900","64","46","94","148","38","84","810","111","120","165","39","6007","117","186","47","952","45","230","920","106","124","61","103","154","201","6098","70","910","198","67","71","112","130","65","125","49","907","951","1075","119","145","520","620","89","994","109","123","155","77","908","909","56","613","933","1206","150","612","83","101","105","160","383","568","928","301","311","60","72","941","943","107","1089","143","306","59","783","902","114","138","170","184","53","938","940","97","724","813","87","918","925","986","127","54","6015","66","911","98","982","141","149","939","157","385","80","922","93","936","999","122","133","164","82","916","919","161","406","58","90","934","955","1001","110","1205","162","69","913","926","932","237","302","307","370","507","817","979","996","1006","129","147","68","786","820","947","135","139","158","191","207","338","437","603","606","6113","73","74","765","927","978","108","131","181","330","538","942","96","100","121","151","153","194","205","610","674","79","904","91","944","974","976","981","1508","152","163","233","346","486","619","912","992","1201","214","323","523","712","768","775","915","92","948","988","1083","1090","206","210","2152","224","229","347","570","844","914","924","931","937","958","1091","134","142","188","190","2085","418","683","751","76","840","929","960","1044","140","156","166","171","177","213","231","247","2562","308","417","448","449","562","790","834","917","921","935","971","975","990","1084","144","175","196","2089","430","504","560","6161","626","643","673","770","923","973","984","985","1005","128","1532","197","2007","211","2144","244","341","513","518","6085","660","704","750","78","9015","945","95","950","953","99","991","1029","1215","132","176","182","189","202","203","215","217","264","304","342","415","432","433","465","483","524","554","569","607","700","766","767","987","1082","159","167","185","220","222","223","227","235","263","315","329","357","392","419","438","468","500","580","6089","6202","624","670","675","809","905","930","980","168","172","174","178","200","2009","2076","208","209","212","218","2204","225","313","337","351","386","402","410","444","571","572","6009","617","621","622","652","657","709","723","749","769","785","954","977","1015","1017","1113","192","2060","216","228","238","240","241","250","251","268","309","310","318","389","409","424","489","498","502","578","618","653","708","760","773","8043","9020","903","957","1043","1085","1212","146","173","2205","2209","243","248","249","274","276","312","316","317","321","326","368","4085","411","423","445","460","463","471","492","511","519","532","533","540","656","764","779","946","949","972","989","1079","1092","1104","1235","169","180","2020","2107","236","257","262","265","278","296","300","356","400","4096","420","429","431","470","526","543","579","590","6014","609","6110","650","680","733","735","746","763","788","811","833","9520","959","970","993","1013","1016","1203","2002","204","219","254","2564","266","267","269","288","328","352","360","365","401","403","404","4100","412","434","446","464","475","480","534","549","6086","611","625","631","632","671","678","710","747","830","961","1004","1014","1032","1498","234","239","258","261","277","280","281","292","322","334","339","350","359","384","396","421","422","425","459","466","469","481","487","503","506","512","531","558","561","600","601","615","616","637","642","655","662","703","731","732","740","743","748","752","757","771","778","780","781","789","794","795","806","814","821","837","888","956","962","963","997","998","1003","1012","1197","1250","1324","1406","1420","1504","1555","183","187","195","2098","2164","2202","2210","232","2371","242","245","286","287","290","291","299","303","305","314","319","324","358","363","407","426","440","453","455","473","482","488","496","514","515","517","522","529","541","576","577","596","604","614","6155","6204","635","6572","668","681","707","727","728","734","737","745","753","758","761","772","777","791","802","964","965","966","968","1007","1019","1062","1120","1131","1150","1314","1330","179","1916","1952","2001","2006","2150","2160","2198","221","226","2271","246","252","253","2532","2565","260","2643","2652","2701","271","279","284","289","2912","293","295","320","325","335","340","343","344","3508","353","361","366","405","414","416","4202","428","441","450","457","467","472","476","485","527","545","556","574","585","589","6028","605","608","6185","627","628","6285","633","6382","641","648","666","672","676","677","686","7023","705","706","711","718","719","729","744","755","756","759","774","792","793","803","8051","808","823","826","835","836","841","855","8572","859","878","9001","9012","9060","967","969","9701","983","995","\""," * "],
					"frequencies": [15352,4438,596,592,578,572,538,439,415,403,357,279,238,227,226,213,213,206,164,163,160,129,127,125,124,117,116,115,113,110,101,101,101,100,98,91,90,86,84,84,83,81,80,80,80,78,76,75,74,74,73,72,71,70,68,66,66,65,63,63,62,61,61,60,60,59,58,56,56,55,54,54,53,52,52,51,51,51,50,49,49,49,49,49,48,48,48,48,47,46,46,45,45,45,44,44,44,44,44,44,43,43,43,42,42,42,40,40,40,40,39,39,39,38,38,38,38,37,37,37,37,37,37,36,36,36,35,35,35,35,34,34,34,34,34,34,33,33,33,33,33,33,32,32,32,32,32,32,32,31,31,31,31,31,31,31,31,30,30,30,30,30,30,29,29,29,29,29,29,29,28,28,28,27,27,27,27,27,27,27,26,26,26,26,26,26,25,25,25,25,25,25,24,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,22,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,171]
				}
			},
			"R003": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Department",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["330","590","830","340","440","170","620","680","510","710","300","500"],
								["060","770","310","670","490","350","780","290","370","760","380","740","974","450","560","800","973","540","010"],
								["750","930","920","940"],
								["130","690","910","950","640","420"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1387,13576],
						[574,8881],
						[85,9294],
						[180,6493]
					],
					"partInterests": [0.327173,0.00547794,0.549836,0.117513]
				},
				"inputValues": {
					"values": ["750","130","930","920","940","690","910","060","330","770","590","310","950","670","490","350","830","780","640","340","290","370","760","380","740","440","974","450","170","560","620","800","973","420","540","680","510","710","010","300","500","220","140","720","870","270","570","600","660","110","850","250","971","260","100","202","976","860","020","630","730","972","201","840","050","210","030","890","070","410","040","180","280","240","120","580","880","610","190","820","810","470","790","400","160","320","530","430","360","520","650","080","390","550","090","150","700","460","230","480","900"],
					"frequencies": [3907,2420,1944,1764,1764,1729,1012,792,716,663,654,639,606,586,583,578,571,557,550,545,515,490,481,470,445,443,439,422,395,395,394,363,357,356,352,348,334,333,328,325,312,297,295,286,286,285,275,273,262,254,250,249,238,231,222,216,210,191,189,188,181,176,174,174,172,169,164,162,156,156,155,149,147,139,138,138,138,137,134,129,127,126,126,123,116,103,102,100,91,91,79,78,78,72,70,69,69,53,49,43,43]
				}
			},
			"R004": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.RoadType",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Communal"],
								["Departamental"],
								["Highway"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[422,18316],
						[1404,12624],
						[400,7304]
					],
					"partInterests": [0.519376,0.479086,0.00153761]
				},
				"inputValues": {
					"values": ["Communal","Departamental","Highway","National","Other","PublicParking","Unknown","Private"],
					"frequencies": [18738,14028,3933,2696,418,314,274,69]
				}
			},
			"R005": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.RoadMarkerDistance",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,8902]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[737,24760],
						[1489,13484]
					],
					"partInterests": [0.463131,0.536869]
				}
			},
			"R006": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.RoadMarkerId",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["","1"],
								["6"],
								["0"],
								["2","3","4","5"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[424,12436],
						[1276,11077],
						[301,11948],
						[225,2783]
					],
					"partInterests": [0.158562,0.508036,0.31006,0.0233419]
				},
				"inputValues": {
					"values": ["0","","1","2","3","4","5","6","7","8","9","10","11","12","15","13","14","16","18","20","17","19","21","24","22","25","27","28","31","23","26","30","29","32","34","36","37","33","38","40","35","39","41","44","45","43","51","48","42","46","49","47","52","53","59","54","55","58","60","50","56","57","63","61","70","62","69","71","73","67","65","72","64","92","89","74","79","66","78","68","76","75","84","100","77","94","95","80","83","87","96","102","88","90","91","97","104","265","93","86","103","276","108","106","277","81","82","113","149","274","98","143","148","85","99","117","278","280","542","101","147","254","264","109","110","114","115","119","126","132","135","140","146","273","105","116","125","127","134","144","152","175","186","189","194","207","261","263","266","269","272","279","107","112","121","123","137","138","139","141","165","176","178","183","190","200","203","256","268","271","275","309","499","537","120","130","131","133","136","157","158","159","161","185","188","196","205","210","221","232","238","267","270","304","320","1000","111","118","124","128","142","145","154","162","166","167","171","173","174","182","184","199","202","213","215","227","230","235","239","240","245","248","255","258","259","303","306","331","455","535","539","540","122","150","153","160","198","201","209","214","216","220","225","228","234","237","242","244","246","249","260","262","293","300","302","308","318","355","358","397","527","529","534","538","541","600","155","163","172","179","180","181","187","195","197","204","208","212","217","218","222","223","226","231","233","236","241","247","281","282","284","287","289","298","299","301","305","310","311","319","322","329","332","340","344","348","351","357","399","400","401","412","415","423","427","428","435","451","452","482","503","531","533","536","670","700","800","980","1111"," * "],
					"frequencies": [12249,11016,1844,958,745,671,634,570,500,465,429,421,361,354,316,315,292,291,281,267,266,250,224,210,205,202,198,192,178,176,173,168,158,157,153,141,130,129,115,114,111,108,108,106,101,97,91,89,85,85,79,77,75,66,62,61,59,58,57,56,55,54,51,47,47,46,43,42,42,36,35,35,32,29,28,27,27,26,26,25,24,22,22,21,21,21,20,19,19,19,19,18,18,18,18,18,17,17,17,16,15,15,14,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,94]
				}
			},
			"R007": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CollisionType",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain"],
								["Other","NoCollision"],
								["2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple",""]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[462,17718],
						[1224,16079],
						[540,4447]
					],
					"partInterests": [0.565481,0.113253,0.321267]
				},
				"inputValues": {
					"values": ["Other","2Vehicles-Side","2Vehicles-Behind","2Vehicles-BehindVehicles-Frontal","NoCollision","3+Vehicles-Chain","3+Vehicles-Multiple",""],
					"frequencies": [13682,11461,5126,3665,3621,1593,1320,2]
				}
			},
			"R008": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Longitude",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[-0.99994,-0.694735],
								[-0.694735,-0.50353],
								[-0.50353,-0.0853],
								[-0.0853,2.57416],
								[2.57416,2.76518],
								[2.76518,2.89277],
								[2.89277,2.99327],
								[2.99327,3.58139],
								[3.58139,4.64975],
								[4.64975,4.802555],
								[4.802555,5.1661],
								[5.1661,5.40376],
								[5.40376,6.603695],
								[6.603695,6.75779],
								[6.75779,7.54937],
								[7.54937,7.68669],
								[7.68669,9.97981]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[166,2680],
						[106,842],
						[161,2685],
						[428,4947],
						[65,1832],
						[72,6597],
						[75,2741],
						[145,1119],
						[211,2635],
						[54,1843],
						[110,1155],
						[74,2455],
						[328,3466],
						[19,613],
						[88,861],
						[16,616],
						[108,1157]
					],
					"partInterests": [0.00070365,0.0545059,0.000157911,0.0657234,0.0213482,0.437016,0.06325,0.0795048,0.021541,0.0366742,0.0252466,0.0456912,0.0735017,0.0106439,0.0257965,0.0157354,0.0229599]
				}
			},
			"R009": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.FixedObstacle)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["None","ConcreteBarrier","StationaryVehicle"],
								["DitchTalusOrRockyWall","BuildingWallOrPier","MetallicBarrier","Post"],
								["Tree"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1465,32720],
						[558,4772],
						[203,752]
					],
					"partInterests": [0.179839,0.348444,0.471717]
				},
				"inputValues": {
					"values": ["None","DitchTalusOrRockyWall","Tree","ConcreteBarrier","BuildingWallOrPier","MetallicBarrier","StationaryVehicle","Post","SideWalkEdge","ExitLaneWithoutObstacle","OtherInSidewalkOrShoulder","OtherInLane","StreetFurniture","TrafficSignOrEmergencyBox","TrafficIslandRefugeOrMilestone","","OtherBarrier","Parapet"],
					"frequencies": [32714,1286,955,807,786,755,664,552,340,314,308,304,190,136,124,96,83,56]
				}
			},
			"R010": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Latitude",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[12.71306,43.272325],
								[43.272325,43.32432],
								[43.32432,43.71157],
								[43.71157,44.65919],
								[44.65919,45.69168],
								[45.69168,45.8586],
								[45.8586,48.591425],
								[48.591425,48.800925],
								[48.800925,48.90345],
								[48.90345,49.03388],
								[49.03388,57.70103]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[216,3894],
						[27,1238],
						[191,2971],
						[211,1686],
						[200,2329],
						[66,1831],
						[737,8748],
						[100,3062],
						[77,6246],
						[74,2456],
						[327,3783]
					],
					"partInterests": [0.000691872,0.0511203,0.00247756,0.129923,0.0359754,0.0245098,0.12063,0.0560544,0.462396,0.0555341,0.0606883]
				}
			},
			"R011": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Commune",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["004","088","001","073","051","101","018","103","107","010","065","104","026","017","106","416","003","061","053","039","076","189","185","013","389","008","072","184","209","281","162","032","306","057","152","015","083","123","161","038","079","037","187","149","191","262","030"],
								["055","007","116","112","118","117","113","069","555","119","108","114","115","238","063","120","066","302","085","482","005","019","109","012","050","172","111","028","261","078","136","387","021","033","027","036","064","029","110","046","048","121","081","454","031","105","122","071","611","044","034","056","194","232","025","300","068","075","445","102","383","218","129","351","002","024","137","388","049","023","077","047","062","395","266","022","041","043","070","181","259","234","278","386","256","382","411","014","350","040","006","042","260","229","286"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1715,19048],
						[511,19196]
					],
					"partInterests": [0.402172,0.597828]
				},
				"inputValues": {
					"values": ["055","007","116","112","118","117","113","069","004","555","119","108","114","115","238","063","088","120","066","001","302","085","482","005","019","073","109","012","050","172","111","028","051","261","078","136","387","021","033","027","101","036","064","018","029","110","046","048","121","081","454","031","103","107","105","122","071","611","044","034","056","194","232","025","300","068","075","445","010","102","065","383","104","218","026","129","017","351","002","024","106","416","003","061","137","388","049","023","077","047","053","062","395","266","039","076","022","041","043","189","070","185","013","181","259","389","008","234","072","278","386","184","256","382","209","281","411","014","162","350","032","040","306","057","152","015","083","006","123","161","038","042","079","037","260","187","149","191","229","262","286","030","267","020","080","054","208","249","231","011","052","540","582","058","099","290","362","284","154","074","133","193","202","199","277","067","089","130","223","407","060","090","157","275","147","096","169","213","174","291","421","483","009","159","589","035","415","126","166","282","328","385","640","086","143","160","214","294","307","462","207","059","233","309","095","192","198","252","498","150","206","217","305","447","094","128","215","243","311","098","127","151","182","190","268","333","097","124","139","144","153","186","220","264","138","140","158","176","247","377","463","689","016","093","165","224","285","348","167","195","228","258","646","087","132","146","173","274","296","337","163","180","221","225","244","687","091","142","155","203","230","276","304","363","409","545","141","204","269","283","413","550","270","271","272","279","318","422","045","131","145","237","297","299","339","373","381","440","178","200","216","341","384","092","134","227","512","547","175","179","197","226","242","521","201","219","273","288","298","345","410","210","246","365","366","394","514","082","125","183","212","263","322","353","375","585","599","672","168","248","340","196","235","239","265","310","312","347","425","477","557","681","135","211","287","295","313","329","397","408","544","572","606","164","171","250","254","323","241","251","253","280","301","423","148","222","240","357","457","517","335","343","360","414","490","527","602","188","205","236","315","338","344","405","418","486","084","156","374","378","431","464","487","170","289","317","326","412","427","449","516","552","598","680","100","257","332","349","424","438","255","342","455","468","617","245","292","314","334","430","432","549","553","578","321","324","327","331","372","433","448","479","565","293","352","526","534","570","177","336","346","401","417","434","474","524","657","303","320","354","356","368","369","390","471","491","502","510","519","529","661","691","325","358","359","402","428","451","458","466","484","507","539","701","367","399","420","467","470","478","580","603","650","678","319","361","376","393","404","480","489","500","543","551","308","316","355","371","379","450","475","497","508","515","522","528","533","560","571","573","607","330","403","437","442","443","453","481","495","563","604","648","391","419","446","452","473","494","506","520","574","575","588","610","612","685","724","364","370","400","429","459","465","469","476","509","548","581","591","624","630","631","674","715","722","762","435","493","504","505","523","535","586","587","595","615","645","647","752","757","380","392","426","436","456","461","485","488","513","554","561","567","608","632","649","692","826","396","398","518","532","537","538","541","556","562","566","569","592","639","656","699","711","406","511","525","536","559","568","600","605","609","614","627","629","634","636","642","665","666","668","670","738","751","758","439","460","496","499","530","531","546","577","579","584","601","613","616","618","643","644","654","660","663","667","679","683","684","705","748","893","444","542","558","583","594","620","637","638","641","652","655","659","662","695","709","718","726","730","746","761","764","810","829","842","441","472","492","501","503","576","590","593","596","622","623","625","628","635","653","676","682","686","690","693","698","707","713","714","725","728","729","734","735","743","754","760","765","770","773","775","779","792","794","799","801","811","820","827","846","873","886","907","564"," * "],
					"frequencies": [1641,491,446,437,378,376,372,368,340,339,336,331,312,307,297,296,294,283,276,265,263,257,255,229,229,228,228,227,226,225,224,219,215,215,212,211,211,207,206,203,201,197,197,194,192,191,190,190,188,187,182,181,181,181,177,172,171,170,168,166,166,166,166,163,163,158,158,158,153,153,151,150,144,144,143,140,139,137,136,136,133,133,130,130,129,129,126,125,125,124,124,124,123,122,120,120,119,119,119,119,117,117,116,116,115,113,108,108,106,106,105,103,101,100,99,99,99,98,98,98,96,96,96,95,95,91,91,89,87,86,85,85,85,84,84,81,80,80,80,80,80,78,78,76,76,75,75,75,74,73,73,72,72,71,71,71,71,70,69,68,68,68,68,67,67,66,66,66,66,66,65,63,63,63,62,61,61,61,60,60,60,59,58,58,58,57,57,56,56,56,56,56,56,55,55,55,55,55,55,55,54,53,53,53,52,52,52,52,52,51,51,51,51,51,50,50,50,50,50,49,49,49,49,49,49,49,48,48,48,48,48,48,48,48,47,47,47,47,47,47,47,47,46,46,46,46,46,46,45,45,45,45,45,44,44,44,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,42,41,41,41,41,41,41,40,40,40,40,40,40,39,39,39,39,39,39,39,39,39,39,38,38,38,38,38,37,37,37,37,37,36,36,36,36,36,36,35,35,35,35,35,35,35,34,34,34,34,34,34,33,33,33,33,33,33,33,33,33,33,33,32,32,32,31,31,31,31,31,31,31,31,31,31,31,30,30,30,30,30,30,30,30,30,30,30,29,29,29,29,29,28,28,28,28,28,28,27,27,27,27,27,27,26,26,26,26,26,26,26,25,25,25,25,25,25,25,25,25,24,24,24,24,24,24,24,23,23,23,23,23,23,23,23,23,23,23,22,22,22,22,22,22,21,21,21,21,21,20,20,20,20,20,20,20,20,20,19,19,19,19,19,19,19,19,19,18,18,18,18,18,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,57]
				}
			},
			"R012": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Light",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Daylight"],
								["NightStreelightsOn"],
								["NightNoStreetLight"],
								["TwilightOrDawn","NightStreelightsOff"]
							],
							"defaultGroupIndex": 3
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1283,25853],
						[220,6202],
						[527,3336],
						[196,2853]
					],
					"partInterests": [0.0717336,0.134212,0.78349,0.0105652]
				},
				"inputValues": {
					"values": ["Daylight","NightStreelightsOn","NightNoStreetLight","TwilightOrDawn","NightStreelightsOff"],
					"frequencies": [27136,6422,3863,2644,405]
				}
			},
			"R013": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[760,6260],
						[1466,31984]
					],
					"partInterests": [0.778681,0.221319]
				}
			},
			"R014": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[760,6260],
						[549,10512],
						[917,21472]
					],
					"partInterests": [0.75343,0.0157497,0.230821]
				}
			},
			"R015": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,9]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1305,29756],
						[921,8488]
					],
					"partInterests": [0.2857,0.7143]
				}
			},
			"R016": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1305,29756],
						[921,8488]
					],
					"partInterests": [0.2857,0.7143]
				}
			},
			"R017": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1951.5],
								[1951.5,1995.5],
								[1995.5,2013.5],
								[2013.5,3929.5],
								[3929.5,4007.5],
								[4007.5,5894.5],
								[5894.5,7978.5],
								[7978.5,101967]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[129,490],
						[433,5244],
						[64,1542],
						[320,3871],
						[637,17459],
						[94,852],
						[355,6761],
						[194,2025]
					],
					"partInterests": [0.352786,0.0920042,0.0161995,0.0684171,0.322605,0.0606748,0.00766022,0.0796533]
				}
			},
			"R018": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1938.5],
								[1938.5,1953.5],
								[1953.5,2001.5],
								[2001.5,2017.5],
								[2017.5,3928.5],
								[3928.5,3944.5],
								[3944.5,4001.5],
								[4001.5,23676]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[78,231],
						[112,800],
						[910,12280],
						[63,2287],
						[206,2297],
						[158,2759],
						[503,14282],
						[196,3308]
					],
					"partInterests": [0.284006,0.133397,0.101215,0.0963745,0.0688375,8.69892e-05,0.315955,0.000127911]
				}
			},
			"R019": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.MobileObstacle)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Vehicle"],
								["None"],
								["Pedestrian"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[858,20772],
						[974,9893],
						[394,7579]
					],
					"partInterests": [0.33155,0.653243,0.0152076]
				},
				"inputValues": {
					"values": ["Vehicle","None","Pedestrian","Other","WildAnimal","","RailedVehicle","DomesticAnimal"],
					"frequencies": [21630,10867,7122,528,128,75,68,52]
				}
			},
			"R020": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.Circulation",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["TwoWay"],
								["DividedHighway","Unknown"],
								["OneWay"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1719,23079],
						[362,8291],
						[145,6874]
					],
					"partInterests": [0.275805,0.0953122,0.628883]
				},
				"inputValues": {
					"values": ["TwoWay","OneWay","DividedHighway","Unknown","","VariableWayNumber"],
					"frequencies": [24798,7019,6171,1952,280,250]
				}
			},
			"R021": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1933.25],
								[1933.25,1953.75],
								[1953.75,3944.25],
								[3944.25,4004.25],
								[4004.25,23641.5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[51,123],
						[188,1371],
						[1318,19488],
						[498,14430],
						[171,2832]
					],
					"partInterests": [0.261508,0.258033,0.0701697,0.409724,0.000566329]
				}
			},
			"R022": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1933.16],
								[1933.16,1953.83],
								[1953.83,3943.12],
								[3943.12,4001.83],
								[4001.83,23641.5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[49,118],
						[188,1346],
						[1309,19287],
						[512,14649],
						[168,2844]
					],
					"partInterests": [0.253718,0.269992,0.0735411,0.402658,9.16726e-05]
				}
			},
			"R023": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.ImpactPoint)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,7]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1460,17973],
						[766,20271]
					],
					"partInterests": [0.463941,0.536059]
				}
			},
			"R024": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.LaneNumber",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,2.5],
								[2.5,13]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[157,6357],
						[1704,22620],
						[365,9267]
					],
					"partInterests": [0.486192,0.317526,0.196282]
				}
			},
			"R025": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Maneuver)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["NoDirectionChange","None"],
								["SameDirectionOrLane","Insertion","TurnToLeft","TurnToRight","BetweenLanes","ChangeToLeftLane"],
								["CrossLane","PassLeft","Avoidance"],
								["SwerveToLeft","SwerveToRight"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1544,21986],
						[290,10503],
						[184,4111],
						[208,1644]
					],
					"partInterests": [0.13635,0.568057,0.037303,0.25829]
				},
				"inputValues": {
					"values": ["NoDirectionChange","SameDirectionOrLane","None","CrossLane","Insertion","PassLeft","Avoidance","TurnToLeft","SwerveToLeft","SwerveToRight","TurnToRight","BetweenLanes","ChangeToLeftLane","ChangeToRightLane","Stopped","Reverse","BusLaneSameDirection","Park","PassRight","Parked","WrongWay","CrossStrip","","BusLaneWrongDirection","OpenDoor","UTurnInLane"],
					"frequencies": [20064,3772,3466,1715,1606,1495,1085,984,953,899,719,678,567,471,391,339,276,232,224,111,96,85,79,66,61,36]
				}
			},
			"R026": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1935.5],
								[1935.5,1951.5],
								[1951.5,1977.5],
								[1977.5,2010.5],
								[2010.5,3907.5],
								[3907.5,4008.5],
								[4008.5,99970]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[44,106],
						[97,527],
						[407,5235],
						[708,17372],
						[147,1304],
						[527,10354],
						[296,3346]
					],
					"partInterests": [0.216961,0.210413,0.0738315,0.244595,0.12289,0.0237962,0.107513]
				}
			},
			"R027": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1941.12],
								[1941.12,1962.41],
								[1962.41,1971.937],
								[1971.937,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[130,517],
						[448,4589],
						[373,5730],
						[1275,27408]
					],
					"partInterests": [0.498007,0.289288,0.0129329,0.199772]
				}
			},
			"R028": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1940.87],
								[1940.87,1962.12],
								[1962.12,1971.87],
								[1971.87,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[122,495],
						[458,4638],
						[377,5741],
						[1269,27370]
					],
					"partInterests": [0.4642,0.312368,0.0153734,0.208058]
				}
			},
			"R029": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1941.12],
								[1941.12,1964.91],
								[1964.91,1975.45],
								[1975.45,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[127,513],
						[534,5703],
						[457,7688],
						[1108,24340]
					],
					"partInterests": [0.485768,0.299982,0.00058759,0.213663]
				}
			},
			"R030": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1940.75],
								[1940.75,1961.41],
								[1961.41,1973.12],
								[1973.12,2638.16],
								[2638.16,2958.75],
								[2958.75,3171.4],
								[3171.4,3931.25],
								[3931.25,4009.5],
								[4009.5,72137]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[73,236],
						[246,2278],
						[303,4904],
						[659,16278],
						[104,1172],
						[108,2727],
						[208,2330],
						[299,6018],
						[226,2301]
					],
					"partInterests": [0.281547,0.18057,0.00250647,0.234569,0.0379244,0.04359,0.0778629,0.0187773,0.122653]
				}
			},
			"R031": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1940.87],
								[1940.87,1962.41],
								[1962.41,1971.937],
								[1971.937,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[119,492],
						[451,4573],
						[387,5799],
						[1269,27380]
					],
					"partInterests": [0.453232,0.312875,0.0206076,0.213286]
				}
			},
			"R032": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1916,1938.5],
								[1938.5,3942.5],
								[3942.5,3997.5],
								[3997.5,23607]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[172,1089],
						[1401,20025],
						[483,14134],
						[170,2996]
					],
					"partInterests": [0.368412,0.133236,0.49802,0.000332866]
				}
			},
			"R033": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1940.75],
								[1940.75,1958.25],
								[1958.25,1971.75],
								[1971.75,2011.5],
								[2011.5,2943.25],
								[2943.25,2999.75],
								[2999.75,3928.75],
								[3928.75,4898.25],
								[4898.25,72137]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[77,237],
						[187,1618],
						[319,4809],
						[732,17474],
						[54,420],
						[143,3179],
						[185,2012],
						[318,6335],
						[211,2160]
					],
					"partInterests": [0.312151,0.16648,0.0124247,0.212586,0.0619977,0.024839,0.0789062,0.0175153,0.113101]
				}
			},
			"R034": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Mode(Users.TripReason))",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Home-Work","None","Other","Home-School"],
								["Leisure","Professional","Shopping"],
								[""]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[831,19705],
						[1384,17323],
						[11,1216]
					],
					"partInterests": [0.321242,0.412803,0.265955]
				},
				"inputValues": {
					"values": ["Leisure","Home-Work","None","Other","Home-School","Professional","","Shopping"],
					"frequencies": [16734,8590,7948,2453,1545,1492,1227,481]
				}
			},
			"R035": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1937.75],
								[1937.75,1946.75],
								[1946.75,1966.25],
								[1966.25,2002.25],
								[2002.25,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[76,226],
						[88,548],
						[462,5211],
						[1523,29856],
						[77,2403]
					],
					"partInterests": [0.402506,0.195821,0.214341,0.0840607,0.103272]
				}
			},
			"R036": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1937.75],
								[1937.75,1946.75],
								[1946.75,1966.12],
								[1966.12,2002.12],
								[2002.12,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[75,225],
						[86,536],
						[456,5115],
						[1535,29990],
						[74,2378]
					],
					"partInterests": [0.397084,0.192463,0.21829,0.0809253,0.111238]
				}
			},
			"R037": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1941.83],
								[1941.83,1952.83],
								[1952.83,1977.937],
								[1977.937,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[121,493],
						[129,1093],
						[649,8833],
						[1327,27825]
					],
					"partInterests": [0.528657,0.171197,0.109523,0.190623]
				}
			},
			"R038": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1911,1939.5],
								[1939.5,1961.5],
								[1961.5,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[333,2275],
						[643,9792],
						[1250,26177]
					],
					"partInterests": [0.771883,0.0332455,0.194872]
				}
			},
			"R039": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1941.75],
								[1941.75,1952.75],
								[1952.75,1977.75],
								[1977.75,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[122,512],
						[130,1106],
						[648,8830],
						[1326,27796]
					],
					"partInterests": [0.523886,0.173369,0.109931,0.192814]
				}
			},
			"R040": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,10]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[804,20127],
						[1422,18117]
					],
					"partInterests": [0.532282,0.467718]
				}
			},
			"R041": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1920,1951.5],
								[1951.5,1977.5],
								[1977.5,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[195,1050],
						[574,7454],
						[1457,29740]
					],
					"partInterests": [0.673429,0.153541,0.173031]
				}
			},
			"R042": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1917,1938.25],
								[1938.25,1954.75],
								[1954.75,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[196,1089],
						[393,4611],
						[1637,32544]
					],
					"partInterests": [0.664498,0.193667,0.141834]
				}
			},
			"R043": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1916,1937.75],
								[1937.75,1951.75],
								[1951.75,1970.75],
								[1970.75,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[175,1037],
						[227,2324],
						[632,9255],
						[1192,25628]
					],
					"partInterests": [0.515106,0.188462,0.0563854,0.240047]
				}
			},
			"R044": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1917,1938.41],
								[1938.41,1954.83],
								[1954.83,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[192,1073],
						[392,4589],
						[1642,32582]
					],
					"partInterests": [0.659098,0.199438,0.141464]
				}
			},
			"R045": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1916,1937.75],
								[1937.75,1961.9],
								[1961.9,1972.58],
								[1972.58,2016]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[174,1036],
						[496,5804],
						[448,7336],
						[1108,24068]
					],
					"partInterests": [0.511407,0.23839,0.00377766,0.246426]
				}
			},
			"R046": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "IntersectionType",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["NoIntersection"],
								["X-type"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1759,25074],
						[467,13170]
					],
					"partInterests": [0.294997,0.705003]
				},
				"inputValues": {
					"values": ["NoIntersection","X-type","T-type","Other","Roundabout","Y-type","Square","MoreThan4Branches","LevelCrossing"],
					"frequencies": [26833,4880,4144,1593,1427,848,502,190,53]
				}
			},
			"R047": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.StripWidth",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,714]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1962,29229],
						[264,9015]
					],
					"partInterests": [0.191363,0.808637]
				}
			},
			"R048": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1211,15012],
						[1015,23232]
					],
					"partInterests": [0.554631,0.445369]
				}
			},
			"R049": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1211,15012],
						[166,2902],
						[849,20330]
					],
					"partInterests": [0.522143,0.000228718,0.477628]
				}
			},
			"R050": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1917,1939.5],
								[1939.5,1962.5],
								[1962.5,2001.5],
								[2001.5,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[195,1115],
						[593,8301],
						[1365,26427],
						[73,2401]
					],
					"partInterests": [0.665204,0.093974,0.0823945,0.158427]
				}
			},
			"R051": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1916,1932.5],
								[1932.5,1950.5],
								[1950.5,1977.5],
								[1977.5,2000.5],
								[2000.5,2018]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[94,488],
						[244,2252],
						[674,9901],
						[1162,23650],
						[52,1953]
					],
					"partInterests": [0.348284,0.292753,0.0600543,0.135918,0.16299]
				}
			},
			"R052": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Mode(Users.SafetyDeviceUsed))",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Yes","","Unknown"],
								["No"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2012,37076],
						[214,1168]
					],
					"partInterests": [0.0498986,0.950101]
				},
				"inputValues": {
					"values": ["Yes","","Unknown","No"],
					"frequencies": [26354,9267,3467,1382]
				}
			},
			"R053": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1161,14493],
						[1065,23751]
					],
					"partInterests": [0.571432,0.428568]
				}
			},
			"R054": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.ImpactPoint)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Front"],
								["Back","LeftBack"],
								["Multiple"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1985,31066],
						[161,6565],
						[80,613]
					],
					"partInterests": [0.0751667,0.746007,0.178827]
				},
				"inputValues": {
					"values": ["Front","LeftFront","Back","RightFront","LeftSide","None","LeftBack","RightSide","Multiple","RightBack",""],
					"frequencies": [17592,6086,5397,3078,2536,2271,1329,1055,693,359,74]
				}
			},
			"R055": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where PassengerNumber <= 0.5",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1188,14826],
						[1038,23418]
					],
					"partInterests": [0.561453,0.438547]
				}
			},
			"R056": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Hour.DecimalTime",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0.01666666667,6.925],
								[6.925,23.98333333]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[426,3686],
						[1800,34558]
					],
					"partInterests": [0.873143,0.126857]
				}
			},
			"R057": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1917,1940.5],
								[1940.5,1961.5],
								[1961.5,2001.5],
								[2001.5,3927.5],
								[3927.5,5938.5],
								[5938.5,72137]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[168,1051],
						[415,6193],
						[1014,21543],
						[191,2281],
						[316,6027],
						[122,1149]
					],
					"partInterests": [0.507434,0.0324624,0.204187,0.0922762,0.0148174,0.148823]
				}
			},
			"R058": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.Sum(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.23],
								[0.23,15.03],
								[15.03,48986.5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1177,16025],
						[469,12733],
						[580,9486]
					],
					"partInterests": [0.333737,0.658412,0.00785114]
				}
			},
			"R059": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.LaneWidth",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,800]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1918,28996],
						[308,9248]
					],
					"partInterests": [0.203199,0.796801]
				}
			},
			"R060": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.Count(Users))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,2.5],
								[2.5,51]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[626,7269],
						[958,21423],
						[642,9552]
					],
					"partInterests": [0.494699,0.430859,0.0744423]
				}
			},
			"R061": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.Layout",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Straight"],
								["LeftCurve","RightCurve","S-Shape",""],
								["Unknown"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1557,30451],
						[659,7214],
						[10,579]
					],
					"partInterests": [0.165312,0.692972,0.141716]
				},
				"inputValues": {
					"values": ["Straight","LeftCurve","RightCurve","Unknown","S-Shape",""],
					"frequencies": [32008,3675,3402,589,511,285]
				}
			},
			"R062": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.Median(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.11],
								[0.11,9.5036],
								[9.5036,40]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1182,16095],
						[504,12731],
						[540,9418]
					],
					"partInterests": [0.40619,0.592965,0.000845015]
				}
			},
			"R063": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.Min(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.23],
								[0.23,9.513],
								[9.513,40]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1187,16174],
						[495,12521],
						[544,9549]
					],
					"partInterests": [0.407982,0.590268,0.00175014]
				}
			},
			"R064": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.Mean(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.049],
								[0.049,9.4983],
								[9.4983,40]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1180,16076],
						[497,12433],
						[549,9735]
					],
					"partInterests": [0.420047,0.575978,0.00397542]
				}
			},
			"R065": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.Max(Users.BirthYear))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.23],
								[0.23,10.006],
								[10.006,44.5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1185,16149],
						[515,12706],
						[526,9389]
					],
					"partInterests": [0.430607,0.563682,0.00571174]
				}
			},
			"R066": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.Count(Users))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0.3333333333,0.91],
								[0.91,2.1],
								[2.1,36]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[6,1000],
						[1996,35038],
						[224,2206]
					],
					"partInterests": [0.574814,0.00678092,0.418405]
				}
			},
			"R067": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Mode(Users.Gender))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,3]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1768,26768],
						[458,11476]
					],
					"partInterests": [0.265709,0.734291]
				}
			},
			"R068": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "PostalAddress",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["","A4","A13","AUTOROUTE A1","A7-Sens Marseille vers L","AUTOROUTE A10","N118","A104 - LA FRANCILIENNE","RN 118","A104","BOULEVARD PERIPHERIQUE E","A50","RN 184","AVENUE DES CHAMPS ELYSEE","BADUEL (ROUTE DE)","A55-Sens Martigues vers","D3","AVENUE DAUMESNIL","RN 20","AUTOROUTE A20","A 7","GENERAL DE GAULLE (AVENU","JEAN JAURES (AVENUE)","PAUL VAILLANT COUTURIER","PRADO (AVENUE DU)","AVENUE D ITALIE"],
								["AUTOROUTE A86","RN 104","AUTOROUTE A6","AUTOROUTE A3","AUTOROUTE A15","A86","A86 EXT","ROCADE A 630","AUTOROUTE A6B","A86 INT","A7-Sens Lyon vers Marsei","AUTOROUTE A104","AUTOROUTE A6A","A50-Sens Marseille vers","AUTOROUTE A 10","AUTOROUTE A115","RN12","BOULEVARD PERIPHERIQUE I","N104 - LA FRANCILIENNE","A50-Sens Aubagne vers Ma","A51-Sens Marseille vers","A57","RN104","A55-Sens Marseille vers","Autoroute A.35","MADELEINE (ROUTE DE LA)","ROUTE NATIONALE 230","CHAPIT RE ( RUE DU)","RD 170","VA007331 A620","EUROPE (AVENUE DE L')","JEAN JAURES","PARIS (RUE DE)","PLACE DE LA CONCORDE","AUTOROUTE A 63","GENERAL LECLERC (AV DU)","RN20","RUE DE RIVOLI","11 - RT","REPUBLIQUE (AVENUE DE LA","PORTE MAILLOT","A51-Sens Aix en Provence","GRANDE RUE","PORTE DE SAINT OUEN","QUAI DE BERCY"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2216,36022],
						[10,2222]
					],
					"partInterests": [0.0335464,0.966454]
				},
				"inputValues": {
					"values": ["","AUTOROUTE A86","A4","A13","RN 104","AUTOROUTE A6","AUTOROUTE A1","AUTOROUTE A3","AUTOROUTE A15","A86","A86 EXT","ROCADE A 630","A7-Sens Marseille vers L","AUTOROUTE A6B","A86 INT","A7-Sens Lyon vers Marsei","AUTOROUTE A104","AUTOROUTE A6A","A50-Sens Marseille vers","AUTOROUTE A10","N118","AUTOROUTE A 10","AUTOROUTE A115","RN12","A104 - LA FRANCILIENNE","BOULEVARD PERIPHERIQUE I","N104 - LA FRANCILIENNE","RN 118","A104","A50-Sens Aubagne vers Ma","A51-Sens Marseille vers","BOULEVARD PERIPHERIQUE E","A50","A57","RN 184","AVENUE DES CHAMPS ELYSEE","BADUEL (ROUTE DE)","RN104","A55-Sens Marseille vers","Autoroute A.35","MADELEINE (ROUTE DE LA)","ROUTE NATIONALE 230","A55-Sens Martigues vers","CHAPIT RE ( RUE DU)","D3","RD 170","VA007331 A620","EUROPE (AVENUE DE L')","JEAN JAURES","PARIS (RUE DE)","PLACE DE LA CONCORDE","AUTOROUTE A 63","AVENUE DAUMESNIL","GENERAL LECLERC (AV DU)","RN 20","RN20","RUE DE RIVOLI","11 - RT","AUTOROUTE A20","REPUBLIQUE (AVENUE DE LA","A 7","GENERAL DE GAULLE (AVENU","JEAN JAURES (AVENUE)","PAUL VAILLANT COUTURIER","PORTE MAILLOT","A51-Sens Aix en Provence","GRANDE RUE","PORTE DE SAINT OUEN","PRADO (AVENUE DU)","QUAI DE BERCY","AVENUE D ITALIE","Autoroute A31","LECLERC (AVENUE DU GENER","RD 37","ROUTE NATIONALE 1","Route Nationale 1","AUTOROUTE A126","AVENUE JEAN JAURES","GENERAL DE GAULLE (AV DU","A12 W","A12 Y","AVENUE DE CLICHY","BRIAND (AVENUE ARISTIDE)","CHARLES DE GAULLE (AVENU","ECHANGEUR BERCY","PORTE DE LA CHAPELLE","RD19","RUE DE BELLEVILLE","A50-Sens Toulon vers Aub","BOULEVARD SAINT GERMAIN","REPUBLIQUE (AV DE LA)","REPUBLIQUE (RUE DE LA)","RUE ORDENER","A14","BOULEVARD VOLTAIRE","D7","PORTE DE CHATILLON","Route Nationale 2","WILSON (AVENUE DU PRESID","kaweni-Kaweni nord ( Z I","A86.EXT","AUTOROUTE A 62","AVENUE DE FLANDRE","BOULEVARD DE MAGENTA","BOULEVARD PERIPHERIQUE","CHARLES DE GAULLE","FONTAINEBLEAU (AV DE)","PLACE CHARLES DE GAULLE","PORTE DE BAGNOLET","PORTE DE LA VILLETTE","R D 900","RN2","Route Nationale 3","AUTOROUTE A25","AVENUE DE LA REPUBLIQUE","CANNES (ROUTE DE)  -RD 6","D1","D8","POMPIDOU (AVENUE GEORGES","PORTE DE MONTREUIL","RN12 INT","RUE DE TOLBIAC","A13W","AMBROISE CROIZAT","AVENUE DU GENERAL LECLER","AVENUE KLEBER","Autoroute A 31","BD PERIPHERIQUE INTERIEU","CARNOT","D9","GENERAL LECLERC (AVENUE","JAURES (RUE JEAN)","JEAN MERMOZ","PORTE DE CLIGNANCOURT","RD 137","RD 41 (ROCADE)","ROCADE A 630.","ROCADE OUEST (RD 610)","Tunnel Prado Car\u201Anage","A29","A47","ALLEE DE LONGCHAMP","AUTOROUTE A23","AVENUE ANDRE ITHURRALDE","BOULEVARD HAUSSMANN","BOULEVARD MALESHERBES","BOULEVARD NEY","BOULEVARD PONIATOWSKI","BOULEVARD VINCENT AURIOL","D1075","D19","D4","D6","DE LATTRE DE TASSIGNY (A","GAMBETTA","GAMBETTA (AVENUE)","JAURES (AVENUE JEAN)","JEAN JAURES (BOULEVARD)","LIBERATION (AVENUE DE LA","MAZARGUES (AVENUE DE)","PORTE DE SAINT CLOUD","PORTE DE VINCENNES","RN136","RUE DU FAUBOURG SAINT MA","SAINTE MARGUERITE (BOULE","VERDUN (RUE DE)","A507 sens Aubagne- Marse","A87N","ALBERT THOMAS","ALLEE DE LA REINE MARGUE","AVENUE FOCH","AVENUE GAMBETTA","BALLANGER (BD ROBERT)","BD PERIPHERIQUE EXTERIEU","BRIAND (BOULEVARD ARISTI","BROSSOLETTE AVENUE PIERR","Corniche John Fitzg\u201Arald","D13","D14","D24","D26","D5","DN7","EMILE ZOLA","EUROPE (DE L')","GAMBETTA (BOULEVARD)","GARIBALDI","JEAN MOULIN","LIBERTE (AVENUE DE LA","MICHELET (BOULEVARD)","PAUL BERT","RABAN (ROUTE DE)","RD383   3.750 A 7.640","ROMAIN ROLLAND (BOULEVAR","RUE D AVRON","RUE DE CRIMEE","RUE DES PYRENEES","RUE MARX DORMOY","RUE SAINT MAUR","SALENGRO (AVENUE ROGER)","SCHLOESING (BOULEVARD)","VERDUN (AVENUE DE)","A4 - PARIS PROVINCE","A7","A8","ARISTIDE BRIAND AVENUE","AUTOROUTE A103","AVENUE DE LA GRANDE ARME","AVENUE DE LA PORTE DE VI","AVENUE DE SAINT MAURICE","AVENUE ROGER SECRETAIN","BERTHELOT","BOULEVARD DE COURCELLES","BOULEVARD DES BATIGNOLLE","BOULEVARD DIDEROT","BOULEVARD DU BAB","CLEMENCEAU (AVENUE GEORG","D10","D1001","D1006","D116","D2","D34","DE GAULLE (AVENUE CHARLE","EMILE ZOLA     (Cours)","FELIX FAURE","GARE (PLACE DE LA)","JEAN JAURES (R)","MANDELA  (BOULEVARD)","MARECHAL JOFFRE (DU)","N4","PARIS (R DE)","PASTEUR (BOULEVARD)","PASTEUR (RUE)","PAUL BERT (RUE)","PLACE DE LA PORTE MAILLO","PORTE D ASNIERES","PORTE D ORLEANS","PORTE DE CHARENTON","PORTE DE PANTIN","QUAI D IVRY","QUAI DE LA RAPEE","RABATAU (BOULEVARD)","RD 6113","RD 906","RD383   7.640 A 11.044","REPUBLIQUE AVENUE DE LA","RN 165","RN1","ROUTE DE LA PYRAMIDE","RUE BEAUBOURG","RUE DE LA CHAPELLE","RUE DE VAUGIRARD","SAINT-JULIEN (ROUTE DE)","SAKAKINI (BOULEVARD)","VA007553 A61","kaweni-Europe (avenue)","m'tsapere-Nationale 2 (r","A1","A16","A4.Y","A507 sens Marseille - Au","ATLANTIQUE  AVENUE DE L'","AUTOROUTE A16","AUTOROUTE A2","AVENUE DE LA PORTE DE LA","AVENUE DE NOGENT","AVENUE DE PARIS","AVENUE DE VILLIERS","AVENUE DE WAGRAM","AVENUE DU MAINE","AVENUE DU PRESIDENT WILS","Autoroute 35","Autoroute A.4","BAILLE (BOULEVARD)","BOULEVARD BEAUMARCHAIS","BOULEVARD BERTHIER","BOULEVARD DE LA VILLETTE","BOULEVARD DU MONTPARNASS","BOULEVARD LEFEBVRE","BOULEVARD SAINT MICHEL","Boulevard Jean Jaur\u00E8s","CARNOT (RUE)","CHARLES DE GAULLE (BD)","COLMAR (AVENUE DE)","D25","D30","D934","EMILE DIDIER ( AV )","ETATS UNIS (DES)","GALLIENI (BOULEVARD)","GENERAL DE GAULLE (RUE D","GENERAL LECLERC (RUE DU)","HENRI BARBUSSE (AV)","MENDES FRANCE (AVENUE)","MEZZAVIA ROUTE DE","MONTABO (ROUTE DE) 1","MONTAIGNE AVENUE","PARADIS (RUE)","PORTE D AUTEUIL","PORTE DES LILAS","PORTE DOREE","QUAI ANDRE CITROEN","RD 17","RD 19","RD11","RN 568","RN346   29.300 A 34.350","RN7","RN88","ROUTE DE LA CORNICHE","ROUTE NATIONALE 2","RUE BELGRAND","RUE D ALESIA","RUE DE ROME","Rue du G\u00E9n\u00E9ral de Gaulle","SAINT PIERRE (RUE)","SELLIER (BOULEVARD HENRI","STALINGRAD (BD DE)","TONY GARNIER","TOULON (AVENUE DE)","TOULOUSE (AVENUE DE","TOUTES RUES","rue de la gare","A4 - PROVINCE PARIS","A4 PARIS PROVINCE","A4.W","A72","ALBERT-DHALENNE (RUE)","ANATOLE FRANCE (RUE)","ARISTIDE BRIAND (AVENUE)","ARVE (QUAI D')","AUTOROUTE A5A","AV DE LA LIBERATION","AVENUE DE L'EUROPE","AVENUE DE LA PORTE D ITA","AVENUE DIVISION LECLERC","Autoroute A8","BDL","BISCHWILLER (ROUTE DE)","BOULEVARD AUGUSTE BLANQU","BOULEVARD BARBES","BOULEVARD DE L HOPITAL","BOULEVARD DE LA CHAPELLE","BOULEVARD RICHARD LENOIR","BOULEVARD SERURIER","BOULEVARD SUCHET","BRIAND AVENUE ARISTIDE N","CARNOT (BOULEVARD)","COL DE LA GINESTE D559","D1090","D21","D23","D27","D31","D36","D39","D75","D81","D901","D996","DAUPHINE (DU)","DE DION BOUTON (QUAI) DU","DE GAULLE (AV DU GENERAL","DE LATTRE DE TASSIGNY (B","FREVILLE (AVENUE HENRI)","GAMBETTA (RUE)","GENERAL DE GAULLE","GEORGES CLEMENCEAU","GRAMMONT (AVENUE DE)","HENRI BARBUSSE (AVENUE)","JUSTICE DE CASTELNAU (AV","LAVERUNE (ROUTE DE","NATIONALE (RUE)","NICE AVENUE DE (RN7)","PIERRE BROSSOLETTE (AVEN","PLACE AUGUSTE BARON","PLACE DU MARECHAL DE LAT","PLOMBIERES (BOULEVARD DE","PORTE D ITALIE","PORTE D IVRY","PORTE DAUPHINE","PRADO (AVENUE du)","QUAI D ORSAY","QUAI FRANCOIS MITTERRAND","RD 104","RD 118","RD 2007","RD 213","RD 22","REDON (BOULEVARD DU)","RN 85","RN 88","RN12 EXT","RN13","ROGER SALENGRO     (Aven","ROUTE DE SURESNES","ROUTE NATIONALE 3","RUE DE LA REPUBLIQUE","RUE DE SEVRES","RUE DU COMMERCE","RUE LOUIS BLANC","Rue de la R\u00E9publique","SAINT ANTOINE (AVENUE DE","SAINT EXUPERY (AVENUE AN","SAINT MARCEL (BOULEVARD","STRASBOURG (BOULEVARD DE","VOIE GEORGES POMPIDOU","VOSGES (AVENUE DES)","rue du pont","rue du stade","A10","A50 - Sens Aubagne vers","A570","A75","ALEX. FLEMING (BOULEVARD","ALLEES MARINES","ALLENDE SALVADOR (RUE)","ALLIES (BOULEVARD DES)","ALSACE (RUE D')","ANATOLE FRANCE (AV)","ANGLAIS (DU N\u00F8 114 AU N\u00F8","AUTOROUTE (A1)","AV DU GENERAL LECLERC","AVENUE DE LA PORTE DE CH","AVENUE DE LA PORTE DE SA","AVENUE DE SAINT OUEN","AVENUE DU GENERAL MICHEL","AVENUE DU PRESIDENT KENN","Autoroute A30","BARTHELEMY BUYER","BELGES (DES)","BELGIQUE (RUE  DE )","BOULEVARD ARAGO","BOULEVARD DE SEBASTOPOL","BOULEVARD DE STRASBOURG","BOULEVARD DES INVALIDES","BOULEVARD JEAN ALLEMANE","BOULEVARD MACDONALD","BOULEVARD RASPAIL","BOULEVARD SAINT DENIS","BOULEVARD SAINT MARCEL","BRUMATH (ROUTE DE)","Bd Richard WAGNER","CAPELETTE (AVENUE DE LA)","CHARLES FLOQUET (AVENUE)","COUR DE FRANCE (AVENUE D","COURS DE VINCENNES","CROIX ROUGE (AVENUE)","Corniche John Fitzgerald","D12","D16","D20","D37","D42","D44","D48","D606","D65","D82","D928","D929","DE GAULLE (AVENUE DU GEN","DE JOUVENEL (BOULEVARD H","DIVISION LECLERC (AVENUE","DN8","DROITS DE L'HOMME (DES)","ESPAGNE (AVENUE D')","ESPLANADE SAINT LOUIS","ETREMBIERES (ROUTE D')","FONTAINEBLEAU (ROUTE DE)","GABRIEL PERI (RUE)","GENAS    (Route de)","GENERAL FRERE (DU)","GENERAL LECLERC(AVE DU)8","GENERAL MOUTON DUVERNET","GUILLOTIERE (DE LA)","Grande rue","HENRI BARNIER (BOULEVARD","HUIT MAI 1945 (RUE DU)","JEAN JAURES ( AVENUE )","LACASSAGNE","LECLERC (AVENUE DU MAREC","LIEUTAUD (COURS)","LODEVE (AVENUE DE","MARECHAL DE LATTRE DE TA","MARECHAL FOCH (RUE DU)","MARECHAL JOFFRE (QUAI DU","MARIETTON","MAR\u0090CHAL DE LATTRE (AVEN","MEAUX RUE DE","MERCANTOUR (BD)","MONTREAL (RUE DE)","NATIONAL (BOULEVARD)","PARIS AVENUE DE N\u00B0 IMPAI","PASTEUR (BD)","PERIPHERIQUE","PERRACHE","PIERRE BROSSOLETTE (RUE)","PLACE DE LA REPUBLIQUE","PLAGE BOULEVARD DE LA","PORTE DE CHAMPERRET","PORTE DE PASSY","QUAI BRANLY","QUAI DE GRENELLE","QUAI DE LA TOURNELLE","RD 1","RD 1089","RD 52","RD 901","RD 909","RD 93","RD 939","RD2","RD383   14.250 A 18.000","REPUBLIQUE (BOULEVARD DE","RESISTANCE (AVENUE DE LA","RN 12","RN 21","RN 7","RN385","RN406.W","RN406.Y","ROCADE SUD RD 6161","ROMAINS (ROUTE DES)","ROUTE DEPARTEMENTALE 15","ROUTE NATIONALE 356","RTE DE SEYSSES","RUE CAMBRONNE","RUE DE PARIS","RUE JEAN JAURES","RUE MONGE","RUE ROYALE","RUE SAINT ANTOINE","RUE SAINT LAZARE","SADI CARNOT (BOULEVARD)","SAINT MENET (AVENUE DE)","SALVADOR ALLENDE (RUE)","SARTRE   AVENUE JEAN-PAU","STALINGRAD (DE)","STRASBOURG (AVENUE DE)","TEMPLIERS (ROUTE DES)","VAILLANT COUTURIER (AVEN","VERN (DE)","VITTON","VOIE RAPIDE","avenue de la gare","passamanty-Vahib\u201A ( rout","rue principale","A26","A46S   53.980 A 57.400","A50-Sens Aubagne vers To","A64","A85","ALBERT 1ER BD","ALDUY (Paul)","ALLENDE (QUAI SALVADOR)","ALSACE LORRAINE (BD D)","AMBROISE PARE","ANATOLE FRANCE","AV DE GRANDE BRETAGNE","AVENUE DE CHAMPAGNE","AVENUE DE L HIPPODROME","AVENUE DE LA PORTE D ASN","AVENUE DE VERSAILLES","AVENUE KELLERMANN","AVENUE PIERRE SEMARD","AVENUE VICTOR HUGO","Autoroute A 330","Autoroute A.351","Autoroute A7","BARBES RUE","BD D ARCOLE","BD DE STRASBOURG","BD LAZARE CARNOT","BENODET ROUTE DE","BERANGER (BOULEVARD)","BONAPARTE CHARLES  BD","BORDEAUX (AVENUE DE)","BOUCLE (DE LA)","BOULEVARD DAVOUT","BOULEVARD DE CLICHY","BOULEVARD DE GRENELLE","BOULEVARD DE PORT ROYAL","BOULEVARD HENRI IV","BOULEVARD JOURDAN","BOULEVARD MASSENA","BOULEVARD ORNANO","BOULEVARD PEREIRE","BOULEVARD POMMERY","BOULEVARD ROMAIN ROLLAND","BOULEVARD WILSON","BRIAND ( AV. ARISTIDE) 3","CAMPI LOUIS BD","CATAYEE (JUSTIN)","CD 900B","CHALLEMEL LACOUR","CHANZY (BOULEVARD)","CHEMIN DEPARTEMENTAL","CHEMIN DU MERLAN A LA RO","CONSUL GENERAL NORDLING","CREQUI (DE)","D 50","D11","D115","D119","D15","D22","D28","D29","D35","D518","D56","D71","D820","D906","D919","D937","D952","D976","D979","D981","D994","DANIELLE CASANOVA (RUE)","DANTON (RUE)","DAUMESNIL (AV)","DE GAULLE (AVENUE)","DE LATTRE DE TASSIGNY (1","DOCTEUR BAUER(RUE DU) :N","DOCTEUR DERVAUX  ( QUAI","DOUMER (BOULEVARD PAUL)","DRAGUIGNAN (ROUTE DE) -","ECHANGEUR MUETTE","ESPAGNE (ROUTE D')","FLAHAULT (AVENUE CHARLES","FLANDRES DUNKERQUE 1940","FOCH (AVENUE DU MARECHAL","FRANCISQUE JOMARD","FRAN\u20ACOISE DUPARC (BOULEV","GABRIEL PERI","GABRIEL-PERI (AV)","GENAS (DE)","GENERAL LECLERC","GENEVE (RUE DE)","GEORGES POMPIDOU ( BD)","GRASSET   AVENUE EDMOND","HAGUENAU (PLACE DE)","HENRI BARBUSSE(BOULEVARD","HUGO (AVENUE VICTOR)","JACQUES DUCLOS [CD44] (R","JARDY","JAURES (RUE  JEAN )","JEAN JAURES (RUE)","JEAN MOULIN (AVENUE)","JEAN PAUL SARTRE (AVENUE","JULES CANTINI (AVENUE)","LAENNEC","LAFAYETTE","LE BOURG","LIBERATION (RUE DE LA)","LORIENT (DE)","LYON (AVENUE DE)","LYON (DE)","Le bourg","MARECHAL FOCH (RUE)","MAR\u0090CHAL JUIN (BOULEVARD","MATISSE (AV. HENRI)","MICHELET (AVE) : DU 1 AU","MITTERAND (AVENUE FRANCO","MONTREAL -ROUTE DE -","MOULIN (RUE JEAN)","MOULIN CAGE (QUAI)","MULLER (AVENUE PAUL)","N12","N12W","N25","N7","NAPOLEON COURS APRES BEV","NAPOLEON COURS AVANT BEV","PALAVAS (AVENUE DE)","PARIS (AV DE)","PASTEUR","PATTON AVENUE","PIERRE MENDES FRANCE","PLACE D ITALIE","PLACE DU TROCADERO ET DU","PORTE ALMA","PORTE D AUBERVILLIERS","PORTE DE CLICHY","PORTE DE GENTILLY","PORTE DE SEVRES","PORTE DE VANVES","QUAI D AUSTERLITZ","QUAI DE JEMMAPES","QUAI DE L HOTEL DE VILLE","RAYMON ARON (AVENUE)","RD 11","RD 14","RD 20","RD 301","RD 43","RD 444","RD 5","RD 562","RD 81","RD 84","RD 927","RD 974","RD36","RD383   11.750 A 14.250","RD4","RD64","RD810","RD9","RHIN TORTU (RUE DU)","RIVE NEUVE (QUAI)","RN 10","RN 124","RN 2","RN 385 Ext\u0160rieure","RN 70 (ROUTE EXPRESS)","RN124","RN4","RN4 - SECTION RIVIERA","RN4 HORS AGGLOMERATION","RN85","RN9","ROCADE OUEST","ROGER SALENGRO (AVENUE)","ROI RENE BOULEVARD","ROUGET DE L'ISLE","ROUTE DE BEHOBIE","ROUTE DE SEVRES A NEUILL","ROUTE ROYALE","RT 20","RT 30","RTE D'AMIENS","RTE DE SAINT SIMON","RUE BRANCION","RUE DE CHARONNE","RUE DE COURCELLES","RUE DE RENNES","RUE DU GENERAL LECLERC","RUE LA FAYETTE","RUE MANIN","RUE SAINT HONORE","RUE SAINT JACQUES","Route nationale 2","SAINT ANTOINE A SAINT JO","SALENGRO (RUE ROGER)","SAULNIER JULES","SAUTEL  BOULEVARD ANDRE","SCHIRMECK (ROUTE DE)","SEZE (DE)","STALINGRAD (AVENUE), NR","STALINGRAD (RUE DE) A10","VA007473 A62","VALIOUD","VAUBAN (AVENUE)","VENDOME","VERDUN (DE 62 A FIN)","VERDUN AVENUE DE AUTRES","VICTOR HUGO (AV)","VICTOR HUGO (AVE)  => N\u00B0","autoroute A8","doujani-Mosqu\u201Ae doujani","grand rue","le bourg","passamanty-Sada ( rue de","vahibe-Departementale 3","\"PAUL VAILLANT COUTURIER","15EME CORPS (AVE DU)","25EME REGIMENT DE TIRAIL","35 PK RN11 ROCADE NANTES","8 MAI 1945 (DU)","A11","A13Y","A34","A4.Y - PARIS PROVINCE","A42     0.560 A 4.020","A42   4.353 A 5.760   GE","A43   0.550 A 3.353","A43   3.865 A 9.894","A55 - Sens Marseille ver","A5b","A6","A621","A63","A7   7.000 A 8.630","A7-Sens Lyon vers*Marsei","A71","ALBERT RAMBOZ","ALLEE DU BORD DE L EAU","ALMA","ALOUETTES (AVENUE DES)","AMPERE","ANTOINE LUMIERE","ARGELES SUR MER AVENUE D","ARGENTEUIL (ROUTE D')","ARISTIDE BRIAND","ARISTIDE BRIAND (AVENUE","ARTHUR CROQUETTE (R)","AUTOROUTE A 10.","AUTOROUTE A 3","AUTOROUTE A106","AUTOROUTE A21","AUTOROUTE A22","AV CHARLES DE GAULLE","AV DE STALINGRAD","AV DES MINIMES","AV DU GENERAL DE GAULLE","AV SALVADOR ALLENDE","AVENUE CHARLES DE GAULLE","AVENUE D IENA","AVENUE DE BAYONNE","AVENUE DE CHANTACO","AVENUE DE FRIEDLAND","AVENUE DE LA LIBERATION","AVENUE DE LA MOTTE PICQU","AVENUE DE LA PORTE DE BA","AVENUE DE NEW YORK","AVENUE DE VERDUN","AVENUE DU MARECHAL GALLI","AVENUE DU MARECHAL JUIN","AVENUE DU TREMBLAY","AVENUE GEORGE V","AVENUE JEAN MOULIN","AVENUE LEDRU ROLLIN","AVENUE NATIONALE","AVENUE PARMENTIER","AVENUE PAUL DOUMER","AYGALADES (AVENUE DES)","Autoroute A 33","Avenue de la R\u00E9publique","Avenue de la gare","BAILLE (BD)","BALATA (ROUTE DE)","BARBUSSE (AVENUE HENRI)","BARRE CITE ET RUE","BERNARD (CLAUDE)","BIRGE BOULEVARD","BOLHEN   (DE)","BON PASTEUR (DU)","BONNEL (DE)","BOUL D'ALSACE LORRAINE","BOULEVARD CIRCULAIRE","BOULEVARD DAUPHINOT","BOULEVARD DE L'EUROPE","BOULEVARD DE L'OISE","BOULEVARD DE LA PAIX","BOULEVARD DE MENILMONTAN","BOULEVARD DE ROCHECHOUAR","BOULEVARD DU PALAIS","BOULEVARD LANNES","BOULEVARD MORTIER","BOULEVARD PASTEUR","BOULEVARD SAINT MARTIN","BRAM -ROUTE DE-","BRIAND (RUE ARISTIDE)","BRIAND BOULEVARD ARISTID","BROSSOLETTE (RUE PIERRE)","BROSSOLETTE PIERRE (AV)","CABASSOU (ROUTE DE)","CAMILLE PELLETAN (AVENUE","CANEBIERE    30 A 68","CAPUCINS (CHEMIN ET IMPA","CARREFOUR POMPADOUR","CARRIERES (QU DES)","CD1","CD9","CHARLES LINDBERGH (AV)","CHATEAUGIRON (DE)","CHOULANS (DE)","CLEMENCEAU (BOULEVARD GE","CLEMENCEAU GEORGES AVENU","COMMANDANT CHARCOT (DU)","CONVENTION (R DE LA)","CORAY ROUTE DE","CORNIGLION MOLINIER (BD)","D 62","D102","D1029","D111","D114","D118","D137","D1508","D1532","D18","D210","D2152","D306","D51","D52","D523","D540","D55","D6113","D612","D619","D83","D833","D84","D905","D911","D918","D925","D933","D942","D944","D947","D955","D977","D978","D980","D999","DAILLY","DE GAULLE (BD CHARLES)","DEUX CROIX BOULEVARD","DIX-HUIT JUIN 1940 (AVEN","DOCTEUR GAILLETON (DU)","DODIN (AVENUE ROGER)","DUBOUT (AVENUE ALBERT)","DUNANT (RUE HENRI)","EBOUE (ROCADE FELIX)","ECHANGEUR MAILLOT","ENCO DE BOTTE (RTE)","EOURES (ROUTE D')","EPARGNE (DE L')","FAUCEILLE (CHEMIN DE LA)","FELIX EBOUE(ROCADE)","FERTE ALAIS (ROUTE DE LA","FLANDRES\/DUNKERQUE (CARR","FONTENAY (R DE)","FORT DE LA BRICHE","FOUGERES (RUE DE)","FRANCE (AVENUE ANATOLE)","FRANCIS DE PRESSENSE","FRANCOIS MITTERRAND (AVE","FRAN\u20ACOIS MITTERRAND (AVE","FRERES LUMIERE (DES)","GABRIEL PERI (AV)","GABRIEL PERI (R)","GAGNY (ALLEE DE)","GALLIENI (AV.) DE 1 A 10","GALMOT (AVENUE)","GARE (RUE DE LA)","GASTON FLOTTE (RUE)","GENERAL DE GAULLE (AV) D","GENERAL DE GAULLE (BLD D","GENERAL LECLERC (AV)","GEORGES BRAQUE (BOULEVAR","GEORGES GOSNAT (AV)","GERMAIN ST RUF (AVENUE )","GRENOBLE (DE)  -  RN 6","HENRI BARBUSSE","HENRI BARBUSSE (RUE) DE","HERBOUVILLE (D')","HUIT MAI (AVENUE DU)","ILES SANGUINAIRES ROUTE","INGERSHEIM (ROUTE D')","IRENE JOLIOT CURIE","JAURES (AVENUE JEAN) DE","JAURES (BOULEVARD JEAN)","JAURES RUE JEAN","JAURES. AVENUE JEAN","JAYR","JEAN JAURES (AV)","JEAN JAURES (AVENUE) (17","JEAN ZAY","JOHN KENNEDY (BOULEVARD)","JOLIOT CURIE F. ET IRENE","JOSEPH GILLET","JULES GUESDE (RUE)","JULIAN GRIMAU (R)","KENNEDY  BOULEVARD J.F.","KLEBER (RUE)","L ARMEE D AFRIQUE (CHEMI","LA ROCHELLE (RUE DE)","LAC (AVENUE DU)","LAGRANGE (AVENUE LEO)","LAMARTINE (RUE)","LATTRE DE TASSIGNY (AVEN","LECLERC AV. DU GENERAL P","LENINE VLADIMIR ILITCH A","LILLE (RUE DE)","LUCIEN LEFRANC (QUAI)","LYON (ROUTE DE)","LYON (RUE DE)","MADEMOISELLE BOURGEOIS","MADRAGUE VILLE (chemin d","MARC CHAGALL (BOULEVARD)","MARCEAU (RUE)","MARCEL PAUL (AVENUE) (1\/","MARECHAL FOCH (DU)","MARECHAL LECLERC (AVENUE","MARECHAL LECLERC AVENUE","MARNE   ( AVENUE DE LA )","MARNE (AVENUE DE LA)","MARTYRS (RUE DES)","MARTYRS DE LA RESISTANCE","MAURICE THOREZ (AV)","MAXIME GORKI (BD)","MERIMEE","METZ (BOULEVARD DE)","MICHELET(AV):N\u00B01AU 103","MIDI (BOULEVARD DU)","MIRABEAU (RUE)","MONTAIGNE (DE 39 A 111 E","MONTESSON (ROUTE DE)","MORETTI (BOULEVARD)","N13","NERUDA (AVENUE PABLO)","NICE(RN.7) AV.ET RTE DE","NONNEVILLE (AVENUE DE)","OBERHAUSBERGEN (ROUTE D","PAIX (RUE DE LA)","PANCHOT (AVENUE JULIEN)","PAPETERIE(RUE)","PARIS (AVENUE DE)","PARIS AVENUE DE N\u00B02 A82","PASTEUR AVENUE","PATTON (AVENUE DU GENERA","PAUL BERT (R)","PAUL CAZENEUVE","PAUL SEDAILLIAN","PERRIN (RUE FRANCOIS)","PICOT (AVE DU COLONEL)","PIERRE SEMARD","PLACE DE L ALMA","PLACE DE L OPERA","PLACE DE LA PORTE DE SAI","PLACE DENFERT ROCHEREAU","PLACE DU VINGT CINQ AOUT","PLACE GAMBETTA","POILUS (AVENUE DES)","POMME (BOULEVARD DE LA )","POMPADOUR(CARREFOUR)","PONT L'ABBE ROUTE DE","PORTE DE LA PLAINE","POUDRETTE     (Rue de la","PRESIDENT ALLENDE BOULEV","QUATORZE JUILLET (BOULEV","RAOUL DUFY (AVENUE)","RD 1075","RD 113","RD 1206","RD 15","RD 18","RD 191","RD 2144","RD 26","RD 3","RD 31","RD 492 DU RP OCEANIS AU","RD 606","RD 613","RD 62","RD 67","RD 674","RD 783","RD 810","RD 817","RD 86","RD 86 DE MONTS \u2026 TOURS","RD 915","RD 918","RD 934","RD 943","RD 945","RD 98","RD 991","RD10","RD1508","RD31","RD37","RD40","RD5","RD8","REPUBLIQUE","REPUBLIQUE (AVE DE LA )","REPUBLIQUE (AVENUE)","REPUBLIQUE (PLACE DE LA)","RIMBAUD (RUE PAUL)","RIVET (AVENUE JEAN CHARL","RN 1057 (CH. EPITAPHE-CH","RN 113","RN 186","RN 449","RN 67","RN 94","RN11","RN315 W","RN88 -","ROISSY (ROUTE DE)","ROME (RUE DE)","ROUQUIER (BOULEVARD EMMA","ROUTE DEPARTEMENTALE 3","ROUTE DEPARTEMENTALE 652","ROUTE DU TEIL","ROUTE NATIONALE 227","ROUTE NATIONALE 230.","ROUTE NATIONALE 568","ROUTE NATIONALE 569","RT 10","RT10","RTE D AGDE","RUBEN (AVENUE ERNEST)","RUE BOTZARIS","RUE CARDINET","RUE CASTETNAU","RUE CAULAINCOURT","RUE DE BERCY","RUE DE CHARENTON","RUE DE LA CITE","RUE DE LA CONVENTION","RUE DE LA VERRERIE","RUE DE LYON","RUE DE REUILLY","RUE DE SAINT PETERSBOURG","RUE DE TURENNE","RUE DES ECOLES","RUE DU FAUBOURG POISSONN","RUE DU FAUBOURG SAINT AN","RUE EDOUARD VAILLANT","RUE GABRIEL PERI","RUE LECOURBE","RUE VERCINGETORIX","Route D\u201Apartementale 108","Rte d\u00E9partementale 27","Rte d\u00E9partementale 431","Rte d\u00E9partementale 48","Rte d\u00E9partementale 52","SAINT LOUIS (AVENUE DE)","SAINT LOUP (BOULEVARD DE","SAINT MICHEL (BOULEVARD)","SAINT-BRIEUC (DE)","SAINT-HELIER","SEMARD(RUE PIERRE)","SEMBAT (RUE MARCEL)","SOLDATS (DES)","ST VINCENT","STADE DE FRANCE (AVENUE","STRASBOURG (BD DE )","Sens Aubagne vers Marsei","T11","T20","T21","TALABOT (BOULEVARD)","TONNER (AVENUE FRANCIS)","TOURCOING (RUE DE)","TROUBIRAN (CHEMIN DE)","Tunnel Joliette Marseill","UNIVERSITE (DE L')","VAILLANT (RUE EDOUARD)","VALBARELLE (BOULEVARD DE","VERSAILLES (RUE DE)","VESOUL RUE DE (inf 52)","VICTOR HUGO (AVENUE)","VICTOR HUGO (RUE)","VICTOR-HUGO (BD)","VIENNE (DE)","VILLEBOIS MAREUIL (BD)","VILLETTE (DE LA)","VISTE (AVENUE DE LA)","VOIE RAPIDE URBAINE","VOLNEY","WAGNER (BOULEVARD RICHAR","WILLIAM BOOTH (AVENUE)","ZEPHIR (ROCADE)","bel air","cavani-Kavani sud ( rue","kaweni-Kaweni sud  (Z I)","mamoudzou centre-RP Pass","route de lyon","route nationale 7","rue de l'\u00E9glise","rue du 8 mai 1945","tsoundzou-Kadjifouni ( r","0, GABRIEL PERI (AVENUE)","0, LOUIS ROCHE (AVENUE)","0, PIERRE DE COUBERTIN P","08 PK RN237 RE MOULIN JU","1, GABRIEL PERI (BOULEVA","1, PLACE VALHUBERT","1, kaweni-Kaweni nord (","122, AVENUE DU GENERAL L","137, AVENUE PARMENTIER","14 JUILLET DU","140, AVENUE D ITALIE","18 AOUT 44 (RUE DU)","1848 (BOULEVARD)","30, AVENUE DE LA PORTE D","4, RN4 - SECTION RIVIERA","8 MAI 1945   (Rue du)","8 MAI 1945 (AVENUE","A150","A20","A46S   43.680 A 47.880","A46S   49.160 A 53.980","A47   0.000  A 1.657","A6   451.790 A 453.400","A6   455.000 A 455.614","A62","A7   2.278 A 3.690","A89","AILES (ALLEE DES)","ALBERT 1ER","ALBERT 1ER (BD)","ALEX ANSALDI (RUE)","ALLEE DU VIGNOBLE","ALPES (QUAI DES)","ALPHONSE DAUDET (RUE)","ALSACE LORRAINE (AVENUE)","ALSACE-LORRAINE (BOULEVA","ALVITRE (AVENUE ABBE)","ANDRE CITROEN (BOULEVARD","ANDRE MORIZET (AVENUE) -","ANDRE ZENATTI (AVENUE)","ANDUZE (AVE)","ANNEXION (RUE DE L')","ARC ( RUE JEANNE D'N","ARCADES (RD POINT)","ARCEAUX (BOULEVARD DES)","ARGENTEUIL AV D'","ARIANE (BD DE L')","ARISTIDE BRIAND (RUE)","AUBAREDE (CHEMIN DE L')","AULAGNIER ( QUAI )","AUTOROUTE A 1","AUTOROUTE A 63.","AUTOROUTE A 86","AUTOROUTE A4","AUTOROUTE A8","AV D ELCHE","AV DE LATTRE DE TASSIGNY","AV DES ETATS UNIS","AV GABRIEL PERI","AV GENERAL DE GAULLE","AV STALINGRAD","AVE MARIA(rond point)","AVENUE ALBERT REYNIER","AVENUE BREBANT","AVENUE DE L OPERA","AVENUE DE L'HOPITAL","AVENUE DE LA PORTE D ORL","AVENUE DE LA PORTE DE CL","AVENUE DE LA PORTE DE MO","AVENUE DENFERT ROCHEREAU","AVENUE DES MINIMES","AVENUE DES TERNES","AVENUE DU DOCTEUR NOEL F","AVENUE DU GROS CHENE","AVENUE FELIX FAURE","AVENUE GETARIA","AVENUE IBSEN","AVENUE KENNEDY","AVENUE RAIMU","AYRAULT","Autoroute A6","Autoroute A9","Av Compagnie des Indes","Av du G\u00E9n\u00E9ral de Gaulle","Avenue Commune de Paris","Avenue de Verdun","Avenue de la Lib\u00E9ration","Avenue du G\u00E9n\u00E9ral de Gau","BACHAGA SAID BOUALAM (AV","BARBERIS (RUE)","BARLA (RUE)","BAS MARIN (R DU)","BASTIE (AVENUE MARYSE)","BD LASCROSSES","BELLAC (RUE DE)","BELLEC MAURICE (RTE DU C","BELLECOMBE (DE)","BEN GOURION   (AV)","BERIGNY (QUAI)","BERT (RUE P.)","BERTHELOT (MARCELIN) (AV","BEZONS  (DE 01 A 22)","BIGNON (DU)","BLANQUI (RUE)","BLUM ( BD LEON )","BLUM (RUE LEON)","BOIS GRONEE (AVENUE DU)","BONNEFOY (RUE)","BONNEVILLE (ROUTE DE )","BONNEVILLE (ROUTE DE)","BOUL ALSACE LORRAINE","BOUL CHARLES DE GAULLE","BOULE PLACE DE LA","BOULEVARD ADOLPHE THIERS","BOULEVARD BESSIERES","BOULEVARD DE BELLEVILLE","BOULEVARD DE BERCY","BOULEVARD DE L' EUROPE","BOULEVARD DE PICPUS","BOULEVARD DES ANGLAIS","BOULEVARD DES CAPUCINES","BOULEVARD DU GEN LECLERC","BOULEVARD GOUVION SAINT","BOULEVARD HENRI BERGSON","BOULEVARD JULES VERNE","BOULEVARD KELLERMANN","BOULEVARD MURAT","BOULEVARD SOULT","BOULEVARD TOURASSE","BOULEVARD VENDEE GLOBE","BOURNARD (RUE DU)","BOURRAT BOULEVARD JEAN","BOURRELY (CHEMIN DES)","BOUVET","BREST (DE)","BRETEUIL (RUE)","BREUCQ BOULEVARD DU","BRIAND ( AV.  ARISTIDE)","BRIAND (AVE ARISTIDE)","BRIGACHTAL (AVENUE DE)","BROSSOLETTE PIERRE (BD)","BRUNE (BOULEVARD)","BRUYERES RUE DES","BUS (RD301)   0.000 A 2.","Bd Hubert Delisle","Bretelle acc\u0160s autoroute","CAILLOLS (AVENUE DES)","CALIGNY (QUAI DE)","CANEBIERE     1 A 79","CANUTS (DES)","CARNOT (BD)","CARRIEU (RUE MARIUS)","CASANOVA DANIELLE NR 52-","CASSIN (BD RENE)","CASSIN (RUE RENE)","CD 105","CD 12","CD 30","CD 943","CD 951","CD16 (LE DELA)","CD181","CELESTINS (DES)","CESSOLE (BD DE) (JUSQU'A","CHAMPIGNY (BD DE)","CHAMPLAIN (AV)","CHANZY ( AVENUE DE )","CHANZY (RUE)","CHARANCE ( AVENUE DE )","CHARLES CHRISTOFLE (AVEN","CHARLES GIDE (AV)","CHARLES KADDOUZ (RUE)","CHARTRES RUE DE","CHARTREUX (AVENUE DES)","CHAUMIN BOULEVARD","CHENE POINTU (ALLEE DU)","CHERON (AVENUE HENRI)","CHEVILLY (R DE)","CHEVREUL","CHOMEDEY DE MAISONNEUVE","CHURCHILL (AVENUE WINSTO","CLEMENCEAU (BD GEORGES)","CLEMENCEAU (BOULEVARD)","CLEMENCEAU (RUE GEORGES)","CLOS COURTEL (DU)","COLBERT (RUE)","COMMANDANT DUMONT ( AVEN","CONDORCET","COPENHAGUE (RUE DE)","CORBEIL (ROUTE DE)","COTE D'AMOUR (RTE DE LA)","COURS ALBERT 1ER","CROISETTE (BOULEVARD DE","CUVIER","Chauss\u00E9e Royale","Chemin Roland Garros","D 104","D 12","D 13","D 47","D 8","D1017","D1032","D104","D1044","D113","D120","D124","D131","D140","D141","D142","D153","D17","D240","D247","D321","D329","D341","D40","D41","D43","D45","D47","D54","D560","D603","D62","D63","D69","D76","D86","D90","D904","D907","D910","D914","D926","D936","D940","D943","D951","D986","DAVID D'ANGERS","DE GAULLE (AVENUE GENERA","DE GAULLE RUE DU GENERAL","DE LATTRE DE TASSIGNY","DEBOURG","DEBUSSY (RUE CLAUDE)","DELMAS   AVENUE MAURICE","DEPORTES (RUE DES)","DIVISION LECLERC","DIVISION LECLERC (AV DE","DIVISION LECLERC AVENUE","DOLE RUE DE (entre 82 et","DOLE RUE DE (sup 200)","DOUMER (AVENUE PAUL) EST","DUNANT (AVENUE HENRI)","DUNKERQUE (RUE DE)","DUNKERQUE AVENUE DE","D\u201Apartementale  617","D\u201Apartementale 914","D\u00E9partementale 10","D\u00E9partementale 14","D\u00E9partementale 2","ECHANGEUR CHAPELLE","EDOUARD HERRIOT (RUE)","EGLISE (RUE DE L')","ERGUE ARMEL BOULEVARD D'","ESPAGNE (BOULEVARD D')","EST (ROCADE)","EUROPE (AVENUE DE L' )","EXPRESS (VOIE)","FAUVETTES (RUE DES)","FERRY (RUE JULES)","FEUILLAT","FOCH (AVENUE)","FOCH (BOULEVARD)","FOCH BOULEVARD","FOCH(AVENUE DU MARECHAL)","FORET (RUE DE LA)","FRANCE (AVENUE)(SECTEUR","FRANCE ANATOLE (BOULEVAR","FRANCE ANATOLE (RUE)","FRANCOISE DUPARC (BOULEV","FRANS ROUTE DE","FRATERNITE (BOULEVARD DE","FUSILLES DE LA RESISTANC","GABRIEL PERI (AVENUE)","GABRIEL PERI (AVENUE) (1","GALLIENI (AVENUE DU GENE","GALLIENI (RUE)","GAMBETTA (A PARTIR DU N\u00F8","GARE AVENUE DE LA","GARE D'EAU (DE LA)","GARRATS (AVENUE DES)","GAULLE   AVENUE DU GENER","GENERAL DE GAULLE (PLACE","GENERAL DE GAULLE (R DU)","GENERAL DE GAULLE(BOULEV","GENERAL SARRAIL (DU)","GEORGES DIMITROV","GEORGES LAFAURIE (RUE)","GERMAIN","GRAND HAMEAU (Avenue du","GRAND RUE","GUILLAUME FAREL ( AVENUE","GUYNEMER (AVENUE GEORGES","Grande Rue","HARAS DE JARDY","HENRI BARBUSSE (RUE)","HEURTELOUP (BOULEVARD)","HEUZE OLIVIER AV N\u00F8 PAIR","HOPITAL (ROUTE DE L )","HUGO (RUE VICTOR)","HUIT MAI 1945 (AV DU)","HUIT MAI 1945 AVENUE DU","IMPERATRICE","JANVIER (AVENUE JEAN)","JAURES JEAN (AV) N\u00F8 IMP","JAURES JEAN (AVENUE)","JEAN BAPTISTE CLEMENT (A","JEAN DE VIENNE (COURS)","JEAN GIONO (AVENUE)","JEAN JACQUES DE MONAIX","JEAN JACQUES ROUSSEAU","JEAN JAURES  (AVE)  157","JEAN JAURES (AVENUE) COT","JEAN LOLIVE (AVENUE)(107","JEAN SARRAZIN","JEANNE D'ARC (BOULEVARD)","JOFFRE ( BD MARECHAL )","JOFFRE (AVENUE DU MARECH","JOHN F. KENNEDY (AVENUE)","JOLIOT CURIE (RUE)","JOLY (CORNICHE ANDRE DE)","JOURDAN (AVENUE MICHEL)","JOUX (avenue de)","JUIN (AVENUE DU MARECHAL","JUIN BOULEVARD MARECHAL","JULES COURMONT","JULES FAVRE","KENNEDY (AVENUE)","L'APPEL DU DIX-HUIT JUIN","L'ENJOLRAS (AVE DE)","LATTRE DE TASSIGNY (AV D","LAURENT-CELY  ( AVENUE )","LAVIEILLE (RUE FRANCOIS)","LAVOISIER (RUE)","LECLERC","LECLERC (AVENU DE LA DIV","LEON BLUM (AV)","LEON BLUM (AVENUE)","LEON GEFFROY (R)","LETANDUERE","LIBERATION   RUE DE LA","LIBERATION (DE LA)","LIBERTE (AVENUE DE LA)","LIBERTE (BD DE LA)","LIEUTAUD (COURS)      2","LIMOUX - ROUTE DE-","LIONEL TERRAY","LONDRES (AVENUE DE)","LONGSARD (route de)","LORTET","LOUIS BONNEFON (PLACE)","LOUIS BREGUET (AVENUE)","LOUIS REGIS (RUE)","LYON (DE) (D 518)","LYS (RUE DES)","MAGINOT (AV. ANDRE)","MALGRANGE (AVENUE DE LA)","MANGO (ROUTE)","MARBOZ RD 996 ( ROUTE DE","MARC BLOCH","MARCEL SEMBAT","MARECHAL FOCH (AVENUE DU","MARECHAL FOCH (AVENUE) C","MARECHAL JUIN AVENUE","MARECHAL LECLERC","MARIUS VIVIER MERLE","MATHIEU DUSSURGEY","MAURICE FLANDIN","MAURICE THOREZ","MAXIME GORKI (BOULEVARD)","MAXIMILIEN ROBESPIERRE (","MAZARGUES (AVENUE de)","MAZARIN (AVENUE)","MEDERIC (AVENUE)","MEDERIC (RUE)","MEIGNANNE","MENDES FRANCE PIERRE (AV","MER (AVENUE DE LA)","MER (Bld de la )","MERCADER (BOULEVARD FELI","MERCIER (AVENUE AMEDEE D","MISSION MARCHAND (COTE I","MITRY [CD115] (ROUTE DE)","MITTELHAUSBERGEN (ROUTE","MITTERAND (MAIL FRANCOIS","MONT D'EST (BD)","MONTABO (ROUTE DE) 2","MONTAT (DE LA) JUSQU'AUX","MONTEE SAINT JEAN","MOZART (RUE)","N 85","N44","N85","NATIONALE 6 (GLACIERE)","NEUHOF (ROUTE)","NEUILLY (ROUTE)","NOGENT (AV DE)","NOISY (ROUTE DE) JUSQU'A","National ( boulevard )","OLIVES (AVENUE DES)","OLIVIER D ORMESSON (AV)","OSCHATZ (D')","OUEST BOULEVARD","OUTREBON (AVENUE)","OWENS JAMES","PADOUANE (BD DE LA )","PAIX (DE LA) ( R )","PALAVAS D986 (ROUTE DE)","PAOUTE (ROUTE ET TRAVERS","PARC (DU)","PATTON GENERAL RTE ST-AU","PAUL BERT AVENUE","PAUL CEZANNE (RUE)","PAUL LANGEVIN (AVENUE) (","PAUL SANTY","PAVE NEUF (AVENUE)","PERI RUE GABRIEL","PERIPHERIQUE ROUTIER","PETIT (AVENUE ALBERT) N\u00B0","PETITS PONTS (ROUTE DES)","PIERRE BROSSOLETTE","PIERRE DE COUBERTIN","PIERRE DELORE","PIERRE MENDES FRANCE (AV","PINCHARD (RUE RAYMOND LI","PLACE CLEMENT ADER","PLACE DE LA CHAPELLE","PLACE DE LA MAIRIE","PLACE DE LA PORTE DE MON","PLACE DE LA REPUBLIQUE D","PLACE DU CHATELET","PLACE DU DIX HUIT JUIN 1","PLACE VALHUBERT","PLAINE DES BOUCHERS (RUE","POINCARE (AV. RAYMOND)","POINCARE (BOULEVARD HENR","POINCARE (RUE RAYMOND 1-","POLOGNE (AVENUE DE)","PONT D AUSTERLITZ","PONT DE L'EUROPE","PONT DE SULLY","PONT DE SURESNES","PONT DE TOLBIAC","PORT DU NAVEIX (RUE DU)","PORTE DE BREQUIGNY","PORTE DE CLEUNAY","PORTE DU PRE SAINT GERVA","PREFET CHALEIL (CD44) (R","PREIZE (RUE DE)","PRESIDENT EDOUARD HERRIO","PRESIDENT JOHN KENNEDY (","PREUILLY (BOULEVARD)","PREVOT (ERNEST)","PRINCE IMPERIAL COURS","PROFESSEUR BEAUVISAGE (D","Place de la gare","QUAI ANATOLE FRANCE","QUAI D ISSY LES MOULINEA","QUAI DE GESVRES","QUAI DE VALMY","QUAI DES CELESTINS","QUAI DU LOUVRE","QUAI HENRI IV","QUAI SAINT BERNARD","QUATRE EGLISES (RUE","R DE PARIS","R DES DEPORTES","R.D 504","RABELAIS","RABELAIS (BD)","RACINE (AVENUE)","RASPAIL","RASPAIL (RUE)","RAYMOND TEISSERE (RUE)","RD 101","RD 109","RD 114","RD 119","RD 12","RD 122","RD 13","RD 131","RD 133","RD 147","RD 16","RD 170 B6","RD 188","RD 188 CHEVREUSE","RD 2","RD 2060","RD 25","RD 28","RD 29","RD 30","RD 34","RD 347","RD 36","RD 40","RD 538","RD 59","RD 6","RD 600","RD 621","RD 6382","RD 643","RD 7","RD 72","RD 75","RD 7N","RD 82","RD 834","RD 9","RD 910","RD 922","RD 923","RD 942","RD 946","RD 956","RD 958","RD 987","RD 994","RD116","RD13","RD148","RD16","RD20","RD26","RD27","RD33","RD6","RD6007","RD612","RD619","RD65","RD673","RD86","RD901","RD941 (OUEST)","RD951","RD97","RECCO ABBE BOULEVARD","RECTEUR JEAN SARRAILH","REINE (ROUTE DE LA) 39\/1","REMPARTS   CHEMIN DES","RENAN (AVENUE ERNEST)","REPUBLIQUE ( AV. DE LA )","REPUBLIQUE (DE LA)","REPUBLIQUE (DE)","RESISTANCE (PLACE DE LA)","RESISTANCE (RUE DE LA)","RN 102","RN 385 Ext\u00E8rieure","RN 580","RN1013","RN1014 W","RN102","RN104.INT","RN315 Y","RN346   36.215 A 38.000","RN5","RN520","RN6 (PARTIE FORET)","RN98","ROCADE","ROCADE (BOULEVARD DE LA)","ROCADE N 347","ROCADE-D520","ROGER SALENGRO","ROGER SALENGRO (RUE)","ROI RENE (BD DU)","ROMANERIE BOULEVARD","ROMPSAY   AVENUE DE","ROND POINT CHAMPS ELYSEE","ROQUEBILLIERE (R. DE)","ROSE (AVENUE DE LA)","ROUFFACH (ROUTE DE)","ROUGET DE L ISLE (AV)","ROUGET DE LISLE","ROUTE DE CEINTURE DU LAC","ROUTE DE CLISSON","ROUTE DE STRASBOURG","ROUTE DE STRASBOURG D 48","ROUTE DEPARTEMENTALE 612","ROUTE DEPARTEMENTALE 656","ROUTE DES TRIBUNES","ROUTE NATIONALE","ROUTE NATIONALE 113 - CA","ROUTE NATIONALE 186","ROUTE NATIONALE 6","ROY D'ESPAGNE (CHEMIN)","RT11","RT30","RTE D ALBI","RTE D' ALLAUCH","RTE DE NARBONNE","RTE DE REVEL","RTE N113 MARSEILLE A BOR","RU DE GIRONDE (AV DU)","RUE ALEXANDRE DUMAS","RUE AUBER","RUE BALARD","RUE CHAMPIONNET","RUE CLOVIS CHEZEL","RUE D ABOUKIR","RUE D ASSAS","RUE D AUBERVILLIERS","RUE DE BAGNOLET","RUE DE L EVANGILE","RUE DE L UNIVERSITE","RUE DE LA FEDERATION","RUE DE LA MAGDELEINE","RUE DE LA MARSEILLAISE","RUE DE LA POMPE","RUE DE LA ROQUETTE","RUE DE LOURMEL","RUE DE MAUBEUGE","RUE DES 3 PINS","RUE DES FRANCS BOURGEOIS","RUE DU BAC","RUE DU COLONEL FABIEN","RUE DU FAUBOURG SAINT HO","RUE DU GENERAL KOENIG","RUE DU LOUVRE","RUE DU RENARD","RUE GEORGES CLEMENCEAU","RUE GUY MOQUET","RUE JEAN DE LA FONTAINE","RUE JOSEPH KESSEL","RUE JULES FERRY","RUE NEUVE TOLBIAC","RUE OBERKAMPF","RUE PELLEPORT","RUE PETIT","RUE PRINCIPALE","RUE PROUDHON","RUE RIQUET","RUE VICTOR HUGO","RUFFI (RUE DE)","Route Ligne Paradis","Route Nationale 568","Route du Littoral","Route du Sacr\u00E9 Coeur","Route d\u00E9partementale 101","Route d\u00E9partementale 16","Route d\u00E9partementale 19","Route d\u00E9partementale 2","Route nationale 7","Rte de la Riv des pluies","Rte d\u00E9partementale 415","Rte d\u00E9partementale 417","Rte d\u00E9partementale 430","Rte d\u00E9partementale 483","Rue L\u00E9opold Rambaud","Rue Pasteur","Rue de Paris","Rue de la Gare","SABLIERE (ROUTE DE LA)","SAINT LEU (ROUTE DE) 1 \u00E0","SAINT MATHIEU (ROUTE ET","SAINT SERNIN (ROUTE DE)","SAINT-NAZAIRE (AVENUE DE","SAINTE MARTHE (chemin)","SALENGRO ROGER RUE","SAUMUROISE IMPASSE ET RU","SAUVE (ROUTE)","SEBASTIANI  - AVENUE","SEBASTIANU COSTA BD","SEMARD (RUE PIERRE)","SEURRE (ROUTE DE)","SEVIGNE (BD DE)","SIDOINE APPOLINAIRE","STALINGRAD (AV DE)","STRASBOURG (BD DE)","STRASBOURG (DE)","TASSIGNY(AVE DU MARECHAL","TETE D'OR (DE LA)","TOLSTOI    (Cours)","TOULLEC (RUE  FRANCOIS )","TOUR D'AUVERGNE (BD DE L","TRANCHEE (AVENUE DE LA)","TROIS CENT VINGT NEUVIEM","TURGOT (AVENUE) N\u00F8 PAIRS","TURIN (RTE DE)","TVPCM-Sens Saint Victor","VA008482 A624","VAILLANT (AVENUE EDOUARD","VAILLANT COUTURIER (R)","VAILLANT-COUTURIER (AVEN","VALLEES (ROUTE DES)","VANEAU","VERDUN","VERDUN (AVENUE)","VERDUN (R DE)","VERSAILLES (AV DE)","VEYNES ( AVENUE DE  )","VEZZANI - RUE CESAR","VICTOR SCHOELCHER (AVENU","VIEILLE ROUTE SAINT PEE","VIGENAL (BOULEVARD DU)","VILLENEUVE ( RUE DE LA)","VIVIANI","VOIE RAPIDE SUD 3 (RN 33","VOISIN (BOULEVARD ANDRE-","VOLTAIRE(AVENUE)","VOSGES (RUE DES)","VOULDY (CHAUSSEE DU)","Verdun 1916 ( avenue de","WALLACE (BD RICHARD) DU","YSER. BOULEVARD DE L'","ZOLA (BOULEVARD EMILE)","avenue Charles de Gaulle","avenue du grand sud","boulevard des crabes","d\u00E9partementale 6","grande rue","kaweni-Caserne ( rue de","kaweni-GEOLE (la)","mamoudzou centre-Adrian","mamoudzou centre-Command","mgombani-M'Gombani ( rue","route nationale 1","route nationale 2","rue de brest","rue de la mairie","rue de rennes","rue des \u00E9coles","rue du 19 mars 1962","rue du COLOMBIER","rue du G\u00E9n\u00E9ral Leclerc","rue du g\u00E9n\u00E9ral de gaulle","rue du moulin","tsoundzou-Kwal\u201A ( route","tsoundzou-Maternelle ( r","\"LANDY RD 20, NR IMPAIRS","\"MOULIN (BOULEVARD JEAN)","\"PIERRE SEMARD (RUE \"\"CO","\"SEMBAT MARCEL (BD), NR","\"STALINGRAD (AVENUE), NR","\"STRASBOURG, NR 36 ET SU",", RUE LA FAYETTE","., TY BOS AVENUE DE","0, CHARLIEU (RUE DE )","0, MARECHAL FOCH (RUE DU","0, PIERRE TIMBAUD (RUE)","0, PORTE DE TRIVAUX (RUE","0, RN 165","0, SCHIRMECK (ROUTE DE)","0, rue  Louis Calmel","00, DAVID D'ANGERS","00, FREVILLE (AVENUE HEN","00, LORIENT (DE)","00, PATTON AVENUE","00, PREVALAYE (CHEMIN DE","01, EUROPE. BOULEVARD DE","03 PK RN237 MOULIN JUSTI","05 PK RN237 RE MOULIN JU","06 PK RN237 RE MOULIN JU","1, BOURNARD (RUE DU)","1, FABIEN (BOULEVARD DU","1, GABRIEL PERI","1, PLACE SAINT MICHEL","1, WALLACE (BD RICHARD)","1, m'tsapere-Mosqu\u201Ae Mae","1, passamanty-Vahib\u201A ( r","10","100, BARBUSSE HENRI BOUL","100, RUE DE LA CHAPELLE","103, ETATS UNIS (DES)","103, HANNE (BOULEVARD)","104 ( ROUTE DEP\u017DRTEMENTA","104, BOULEVARD DE COURCE","11  NOVEMBRE (AVENUE DU)","11 NOVEMBRE (DU)","11, RUE DE VOUILLE","112 PK RN137 JUSTICE ROC","112, R DE PARIS","112, WILLIAM BOOTH (AVEN","114 PK RN137 JUSTICE ROC","114, GENERAL DE GAULLE (","12, PAUL VAILLANT COUTUR","12, QUAI FRANCOIS MITTER","129, JOFFRE (AVENUE DU M","129, PETIT PEROU","133, AVENUE DE VILLIERS","136, REPUBLIQUE (AVENUE","14 ET 22 JUIN 1962","15 grande rue","159, RUE LA FAYETTE","162, RUE DU FAUBOURG SAI","18 AOUT (RUE DU)","189, RUE D AUBERVILLIERS","19 grande rue","193, RUE DE TOLBIAC","2, BOULEVARD DE L HOPITA","2, PLACE DE L OPERA","2, ROUTE DES TRIBUNES","21, QUAI DE MONTEBELLO","23, QUAI DE CONTI","231, RUE DE TOLBIAC","241, BOULEVARD SAINT GER","25, MURIERS (DES)","25, PAUL VAILLANT COUTUR","26, BRUMATH (ROUTE DE)","27, DAILLY","289, CLEMENCEAU GEORGES","3, BOULEVARD BARBES","30, CHOULANS (DE)","312","32, MICHELET(AV):N\u00B01AU 1","32EME DI","33 grande rue","33, AVENUE PARMENTIER","33, RUE DE REUILLY","34 PK RN11 ROCADE NANTES","4 AOUT 1789    (Rue du)","4, RN4-ROND POINT SAINT","41, JANVIER (AVENUE JEAN","41, National ( boulevard","42 chemin des campeli\u00E8re","42 rue de l'\u00E9galit\u00E9","42, GAMBETTA (BOULEVARD)","43, BOULEVARD DES CAPUCI","44, FONTAINE (ALLEE DE L","46, AVENUE DU PRESIDENT","48, BOULEVARD SERURIER","48, SAINT LOUIS (AVENUE","49, AVENUE DES CHAMPS EL","49, LOUIS ARMAND (RUE)","50, MARNE   ( AVENUE DE","51 BIS, BOULEVARD SAINT","54, REPUBLIQUE (AV DE LA","54, RUE DE LA CONVENTION","56, DIX NEUF JANVIER","58, JEAN BAPTISTE BAUDIN","59, BOULEVARD PONIATOWSK","62, AVENUE SIMON BOLIVAR","62, PARIS (RUE DE)","63, AVENUE PARMENTIER","635 D8N","64, RUE REAUMUR","65, RUE DES ENTREPRENEUR","66, BOULEVARD ORNANO","69, BOULEVARD SAINT MICH","69, RUE ARMAND CARREL","71, AVENUE DE VILLIERS","77, \"LANDY RD 20, NR IMP","79, RUE DU FAUBOURG SAIN","8 MAI 1945 ( AV. DU )","8 MAI 1945 (AV DU )","8, PRESIDENT SALVADOR AL","83, BOULEVARD DE L HOPIT","86, BAUDIN (RUE)85 + ET","87, RABATAU (BOULEVARD)","89, AVENUE DE LA GRANDE","9, RUE ORDENER","93, BOULEVARD DE PORT RO","96, BOULEVARD BARBES","96, RUE DU POTEAU","999, AV DE FRONTON","999, RUE DU FAUBOURG BON","999, VA008482 A624","A104.EXT. LA FRACILIENNE","A13 Y","A28","A31","A4 PROVINCE PARIS","A42   6.290 A 8.310","A42  4.020 A 4.353   GEN","A42 4.329 A 5.760   LYON","A43","A46N   N\/S  25.680 A 25.","A46N 25.180 A 25.680","A46S   47.880 A 49.160","A46S   57.400 A 61.010","A47 -","A480","A49","A5","A502-Sens Toulon par R.N","A51","A52-Sens Pont de l'Etoil","A52-Sens Toulon vers Pon","A55-Sens*Marseille vers","A557-Liaison A7 Marseill","A6   449.510 A 451.640","A6 - PARIS PROVINCE","A7   0.000 A 2.278","A7   15.770 A 20.110","A7   4.270 A 5.756","A7  005.756  A  007.000","A7*Sens Lyon vers Marsei","A72 -","A750","A84","A9","ABBAYE (RUE DE L')","ABBE PIERRE","ABBE ROGER DERRY (AV DE","ACHILLE PERETTI (AVENUE,","ADOLPHE GUYOT ( RUE )","ADOLPHE PAJEAUD (RUE)","AERODROME (RUE DE L')","AGENT SARRE (AV DE L')","AIGUILLETTES  (BD DES)","AIGUILLETTES (BD 1 A 3)","ALATA ROUTE","ALBERT EINSTEIN (RUE)","ALBERT GLEIZES (AVENUE)","ALBERT THOMAS(RUE)","ALENCON (RTE D')","ALES (ROUTE)","ALEX ANSALDI RUE","ALEX. FLEMING (Bd)","ALEXANDRE DUMAS (RUE)","ALEXANDRE FOURNY (R)","ALEXANDRE III (BOULEVARD","ALFORTVILLE (AV D)","ALLEE DES FORTIFICATIONS","ALLENDE (AVE DU P. SALVA","ALLENDE SALVADOR (AVENUE","ALLIES (BD DES)","ALLONNEAU(AUGUSTE) BOULE","ALPES (BOULEVARD DES)","AMPERE (RUE)","AMPHITRITE (BOULEVARD)","AMUSANT (PAUL)","ANATOLE FRANCE (AVENUE)","ANATOLE FRANCE (BLD) PAI","ANCIENNE RN 1","ANCIENS COMBATANTS D'IND","ANCIENS COMBATTANTS D IN","ANDRE BOULLOCHE","ANDRE LASSAGNE","ANDRE MALRAUX (RUE)","ANDRE MORIZET (AVENUE) 1","ANDRE PHILIP","ANDR\u0090 ROUSSIN (AVENUE)","ANGERS (ROUTE D') D 952","ANGLAIS (DU N\u00F8 45 AU N\u00F8","ANJOU (BD D')","ANNONCIADE - CHEMIN DE L","ANTOINE FRATACCI (RUE)","AQUITAINE (RUE D')","ARAGO (FRANCOIS)","ARAGO FRANCOIS AVENUE","ARAGON AVENUE","ARAVIS (RUE DES)","ARC RUE JEANNE D","ARCOS.(RUE RENE)","ARENC (QUAI D')","ARENES (RUE)","ARISTIDE BRIAND (BOULEBA","ARISTIDE BRIAND (BOULEVA","ARMAND (AVE Z.A.C","ARMENY (RUE D')","ARMORIQUE (BD D')","ARSON (RUE)","AUBERGER (AVENUE FERNAND","AUGE DE PIERRE (ROND POI","AUPHAN (RUE)","AUTOROUTE A 21","AUTOROUTE A 62.","AUTOROUTE A9015.2","AUXERRE (ROUTE)","AV CAMILLE PUJOL","AV DE L URSS","AV DE L'EUROPE","AV DE LA REPUBLIQUE","AV DE LA VILLE IDEALE","AV DE LYON","AV DE MURET","AV DE REYNERIE","AV DES DROITS DE L'HOMME","AV DIVISION LECLERC","AV DU 14 JUILLET 1789","AV DU GENERAL FOY","AV EGLISE SAINT-JOSEPH","AV GEORGES POMPIDOU","AV JEAN JAURES","AV LOUIS JOSEPH SOULAS","AV MARIE ET PIERRE CURIE","AV ROGER SECRETAIN","AVE DE VERDUN","AVE JEAN JAURES","AVE THIERS","AVENUE BENOIT FRACHON","AVENUE BONAPARTE","AVENUE BUGEAUD","AVENUE CHRISTOPHE COLOMB","AVENUE CLEMENCEAU","AVENUE CORENTIN CARIOU","AVENUE D EYLAU","AVENUE D'ANTIBES","AVENUE D'EPERNAY","AVENUE DE BOISSY","AVENUE DE CHOISY","AVENUE DE FRANCE","AVENUE DE GRAMMONT","AVENUE DE L OBSERVATOIRE","AVENUE DE LA CONCORDE","AVENUE DE LA FORET","AVENUE DE LA PORTE D AUB","AVENUE DE LA PORTE D AUT","AVENUE DE LA PORTE DE SE","AVENUE DE LA PORTE DES L","AVENUE DE LA PORTE DES P","AVENUE DE LOWENDAL","AVENUE DE SUFFREN","AVENUE DES AYGALADES","AVENUE DES GOBELINS","AVENUE DU 8 MAI","AVENUE DU 8 MAI 1945","AVENUE DU CHATEAU","AVENUE DU DOCTEUR ARNOLD","AVENUE DU GENERAL DE GAU","AVENUE DU GRAND BASQUE","AVENUE DU PRES KENNEDY","AVENUE DU TRONE","AVENUE DU VAL AUX DAMES","AVENUE FRANKLIN D ROOSEV","AVENUE GALLIENI","AVENUE GEORGES POMPIDOU","AVENUE HENRI GRENET","AVENUE HENRI MARTIN","AVENUE LOUIS DE FOIX","AVENUE MARCEAU","AVENUE MATIGNON","AVENUE PERCIER","AVENUE PHILIPPE AUGUSTE","AVENUE PIERRE DE COUBERT","AVENUE RAYMOND POINCARE","AVENUE SARAH BERNHARDT","AVENUE SIMON BOLIVAR","AVENUE WINSTON CHURCHILL","AYLMER (BOULEVARD D')","Acc\u0160s A57 Beno\u0152t Malon T","Autoroute  A31","Autoroute A10, Point kil","Autoroute A11","Autoroute A13","Autoroute A16","Av Alexandre Fleming","Av Jean Paul Sartre","Av du G\u00E9n\u00E9ral Leclerc","Avenue Fr\u00E9d\u00E9ric Mistral","Avenue Gaston MONNERVILL","Avenue Georges Pompidou","Avenue Henri Barbusse","Avenue Pasteur","Avenue Rhin et Danube","Avenue Rico Carpaye","Avenue de Bresse","Avenue de l'Europe","Avenue du G\u00E9n\u00E9ral De Gau","Avenue du Mar\u00E9chal Lyaut","Avenue du Pdt Mitterand","Axe mixte de Cambaie","BADUEL (ROND POINT DE)","BAHONNEAU BOULEVARD","BALANDE   RUE GASTON","BANDOL (ROUTE)","BARANGE BOULEVARD","BARBES (RUE)","BARBUSSE (RUE HENRI)","BAREL (BD VIRGILE)","BARTHELEMY (RENE)","BAS ( RUE DES )","BASILE BARRELIER (BOULEV","BAUDIN (AVENUE) ( RN21)","BAZEILLES (BD \/ ROND POI","BD ALEXANDRE MARTIN","BD ARISTIDE BRIAND","BD BEAUVILLE","BD DE L'EUROPE","BD DE LA MUETTE","BD DENFERT ROCHEREAU","BD DES COURTIES","BD DES FRERES MOGA","BD FAIDHERBE","BD GAMBETTA","BD RICHARD WAGNER","BD TEMPS DES CERISES","BEAUBLANC (BOULEVARD DE)","BEAULIEU (PORTE DE)","BEAUREGARD","BEAUREPAIRE (BOULEVARD)","BEAUSSIER BOULEVARD","BECQUEREL (HENRI)","BEGAND (RUE)","BEL AIR (BOULEVARD DE)","BELGIQUE (RUE DE)","BELLAVISTA (AVENUE)","BELLE BORNE (RUE)","BELLECOUR","BELLET (RTE DE)","BELLEVILLE (rue de)","BELLEVUE","BENOIT (RUE FREDERIC)","BERCY (QU DE)","BERGER (AVENUE GASTON)","BERLIOZ AVENUE","BERRY (AVENUE DU)","BERT (QUAI PAUL)","BERTEAUX \/ FOUR","BESSET AVENUE CYRILLE","BEULET (RUE DU)","BEVERINI VICO PAIR AVENU","BIGNON BOULEVARD ET ROND","BINEAU (BOULEVARD, N\u00B053","BISHOP (Avenue Maurice)","BLANC (BD DR EUGENE)","BLANC (LOUIS)","BLANCARDE (BOULEVARD)","BLD DU GENERAL LECLERC","BLUM  BOULEVARD LEON (in","BLUM (AV. LEON)","BLUM (QUAI LEON)","BODIN (AVENUE EMILE)","BODINIER","BOILEAU","BOIS L ABBE (R DU)","BOISSY ST LEGER(RUE DE)","BOLLEE (AV) N\u00F8 PAIRS 64","BON PASTEUR BOULEVARD","BONNEUIL (AV DE)","BORD DE MER RN 98","BOSPHORE (DU)","BOUFFLERS (AV. DE 74 A 3","BOUILLE (RUE)","BOUIN (RUE JEAN)","BOUL. MARECHAL LECLERC","BOULET. QUAI GASTON","BOULEVARD BRUNE","BOULEVARD DE BONNE NOUVE","BOULEVARD DE CHARONNE","BOULEVARD DE CHATENAY","BOULEVARD DE DOULON","BOULEVARD DE EMPEREUR","BOULEVARD DE LA BASTILLE","BOULEVARD DE LA TOUR MAU","BOULEVARD DE VAUGIRARD","BOULEVARD DES BELGES","BOULEVARD DES FILLES DU","BOULEVARD DES ITALIENS","BOULEVARD DES TONDEURS","BOULEVARD DU FORT DE VAU","BOULEVARD DU MASSACRE","BOULEVARD DU TEMPLE","BOULEVARD GENERAL MARTIA","BOULEVARD JEAN MOULIN","BOULEVARD LECLERC","BOULEVARD LELASSEUR","BOULEVARD MARIE STUART","BOULEVARD MONTMARTRE","BOULEVARD MORETTI","BOULEVARD MORLAND","BOULEVARD POISSONNIERE","BOULEVARD PROFESSEUR JAC","BOUYALA D'ARNAUD (BOULEV","BOVE ( COURS DE LA )","BOYER\/BRUNESEAU","BPNL","BREST (RUE DE)","BREST ROUTE DE","BRET.N104 MELUN-A4 PARIS","BRETAGNE ( PONT ANNE DE","BRETAGNE (PLACE DE)","BRIAND ( AV. ARISTIDE) 1","BROGNY (AVENUE DE) (SECT","BRUAY ( AVENUE DE )","BRUNOY (RUE DE)","BRUTUS (CITE)","BRUYERES (RUE DES)","BUREL (BOULEVARD)","BUS (RD301)   4.470 A 7.","BUZOT (RUE)","Bd Jean Jaur\u00E8s","Bd MARECHAL JUIN","Bd VICTOR HUGO","Boulevard Charles de Gau","Boulevard Gabriel Mac\u00E9","Bretelle sortie autorout","CALIFORNIE (AV.) (DU 23-","CALVAIRE (RUE DU)","CAMILLE GROULT (R)","CAMILLE PELLETAN(RUE)17","CAMOINS ((RUE LES)","CANEBIERE    81 A FIN","CAP MARTIN (PROMENADE DU","CAPITAINE GEZE (BOULEVAR","CARIMAI (RUE)","CARNON (ROUTE DE  D21)","CARNOT   AVENUE","CARNOT ( Rue )","CARNOT (AV)","CARNOT (AVENUE)","CARNOT (BOULEVARD ET TRA","CARNOT AVENUE","CARREFOUR DE PYRAMIDE","CARTIER (BD JACQUES)","CASSIN (AVENUE RENE)","CASSIN PLACE RENE","CASTORS (CHEMIN DES)","CATTENOZ (BD DU DOCTEUR)","CAZAUX (ROUTE DE LA SERR","CD 112","CD 112F","CD 113","CD 121","CD 15","CD 154","CD 18E (BOULEVARD INDUST","CD 20","CD 21","CD 26","CD 312","CD 35","CD 607","CD 62","CD 9","CD 916","CD 938","CD 941","CD20","CD34","CD35","CD6","CD84","CENTRE COMMERCIAL ROCADE","CHABANAS (RUE DE )","CHAMBAUD DE LA BRUYERE","CHAMEANE (PLACE)","CHAMP SAINT-JULIEN (AV D","CHAMPS ELYSEES (BD) BD E","CHANTE PERDRIX (tvse)","CHAPELIER (RUE DU)","CHAPELLE","CHAPONNAY","CHARCOT (RUE J.B.)","CHARDONCHAMP  (ROUTE DE)","CHARLES DE GAULLE (GRAND","CHARLES DE GAULLE AVENUE","CHARLES GOUNOD (RUE)","CHARLES NEDELEC (BOULEVA","CHARLES TILLON (route)","CHARLETTERIE (RUE DE LA)","CHARLEVILLE","CHARTREUX (AVENUE des)","CHATEAU (DU)","CHATEAU (ROUTE DU)","CHATEAU D'EAU (RUE DU)","CHATEAU D'O (ROND-POINT","CHATEAU GOMBERT CHEMIN","CHATENAY AVENUE VICTOR","CHAUMEIL (RUE PIERRE)","CHAZELLES ( COURS LOUIS","CHE DE FENOUILLET","CHE DES IZARDS","CHEMIN COMMUNAL","CHEMIN DE CEINTURE DU LA","CHEMIN NEUF (DU)","CHENOVE (DE) (RUE)","CHOISY (AV DE)","CHS SAINT PIERRE","CHURCHILL (AVENUE SIR WI","CHURCHILL WINSTON (PLACE","CLAUDE BERNARD","CLAUDE DEBUSSY","CLEMENCEAU GEORGES ( BD)","CLEMENCEAU RUE","CLEMENT ADER (AVENUE)","CLICHY (AVENUE DE)","CLICHY (QUAI DE) DE (8 A","CLIPET (RUE LOUIS)","CLUNY (ROUTE DE)","COCHEREL (RUE DE)","COLBERT","COLLE AVENUE DE LA","COLOMBES","COLONEL FABIEN (AVENUE)","COLONEL FABIEN (R)","COMBATS DU 24 AOUT 1944","COMBS LA VILLE (RUE DE)","COMMERCE (DU)","COMMUNE DE PARIS (RUE DE","CONCHES (ROUTE DE)","CONCORDE (DE LA)","CONQUERANT (BOULEVARD GU","CONVENTION (AV DE LA)","COQUELICOTS (DES)","COQUIBUS(BD)","CORDELIERS  AVENUE DES","CORDERIE (PLACE DE LA)","CORPS EXPEDITIONNAIRE FR","CORPS FRANC POMMIES","CORPS FRANC POMMIES (AVE","CORSE (AVENUE DE LA)","COSMONAUTES (AVENUE DES)","COUBERTIN (AVENUE PIERRE","COUBERTIN (RUE PIERRE DE","COUDRAIE (RUE DE LA)","COUPEE (GRANDE-RUE DE LA","COURNEUVE (ROUTE)","COURRIERES (RTE DE)","CREPIEUX (DE)","CRIMEE (RUE DE)","CROISAT AMBROISE RD 29 B","CROIX (CHEMIN DE LA)","CROIX CADEAU Z.I.","CROIX FICHET (RUE DE LA)","CROUPILLAC (AVE DE)","CRS DE LA MARNE","CRS DE LA SOMME","CUGNOT NICOLAS (BD)","CURIE (BOULEVARD)","CURIE PIERRE ET MARIE AV","Chemin Boeuf","Chemin Lefaguyes","Corniche JFK","D 10","D 1075","D 115","D 123","D 125","D 135","D 157","D 18","D 20","D 223","D 225","D 29","D 32","D 33","D 35","D 43","D 58","D 67","D 910","D 916","D 927","D 939","D 982","D 996","D.10","D.613 ( SAINT DESIR)","D100","D1001 \/ D183","D101","D105","D106","D1075 - AV. DE JUIN 1940","D108","D1083","D1084","D1085","D1092","D112","D117","D1206","D1212","D1215E1","D123","D125","D126","D127","D129 X D140","D130","D132","D1324","D133","D135","D138","D149","D157","D159","D172","D2007","D201","D205","D206","D2060","D21  ROUTE DE CARNON","D211","D218","D228","D231","D239","D313","D32","D323","D326","D33","D357","D38","D403","D406 X AV. EUROPE","D464","D468","D486","D49","D50","D519","D520","D520A","D524","D526","D531","D533","D538","D554","D57","D58","D59","D6007","D603 VICTOIRE (AV.DE LA)","D609","D6098","D613","D622","D64","D643","D653","D66","D70","D72","D735","D764","D775","D80","D810","D817","D830","D88","D89","D8N","D9 - R. DES TROIS VILLES","D900","D902","D908","D913","D915","D920","D921","D927","D93","D930","D931","D938","D939","D94","D941","D956","D96","D964","D973","D975","D982","D984","D992","DAMES (BOULEVARD DES)","DAMPIERRE (QUAI)","DANESI - BLD BENOITE","DANIEL CASANOVA (BOULEVA","DANIEL MAYER","DANIELLE CASANOVA (AV)","DANIELLE CASANOVA PROLON","DARCY (PLACE)","DARSES - CHAUSSEE","DAVID (RUE)","DAYAN GEORGES (AVENUE)","DE FLEURY (ROUTE )","DE GAULLE ( AVENUE DU GE","DE GAULLE (AVE DU GENERA","DE GAULLE CHARLES RUE","DE GAULLE GENERAL AVENUE","DE VALMY BOULEVARD","DEBARQUEMENT (ROND POINT","DELESCAUX HENRI AVENUE","DELESSERT (BOULEVARD BEN","DELIVRANDE (RUE DE LA)","DEMANIEUX (R)","DENAVE (AVENUE PIERRE)","DENFERT ROCHEREAU","DENFERT-ROCHEREAU   AVEN","DEPARTEMENTAL 212 (ROUTE","DEPORTES (ROUTE DES )","DESCARTES (RUE \/ AVE)","DESMALLIERES","DESRAVINIERES","DHUODA (RUE)","DIDEROT (AV)","DIDIER (ROUTE DE)","DIGUE RONJON","DIVISION LECLERC (31 A 5","DIVISION LECLERC (53 A 2","DIVISION LECLERC (AV)","DIVISION LECLERC (DE LA)","DIX NEUF JANVIER","DIX NEUF MARS 1962 (RUE","DOCTEUR AYASSE ( RUE DU","DOCTEUR REBILLARD (RUE D","DOCTEUR ROLLET       (Ru","DOCTEUR ROUX (R DU)","DOCTEUR SUREAU","DOLE RUE DE (inf 82)","DOMITIENNE (VOIE)","DORMOY AVENUE MARX N\u00B02 A","DOTHEMARE","DOUANE (QUAI DE LA)","DOUMER (AVENUE PAUL)","DRAGUIGNAN (AVENUE DE)","DROITS DE LHOMME (CARREF","DUBLED (RUE GUSTAVE)","DUCHESSE ANNE (BLD DE LA","DUGUESCLIN  (R)","DUMOREY (RUE THOMAS)","DUNKERQUE (QUAI DE)","DUQUESNE","DUTEMPLE (R )","DUTREIX (RUE ARMAND)","D\u00E9partementale 1","D\u00E9partementale 13","D\u00E9partementale 23","D\u00E9partementale 3","D\u00E9partementale 50","D\u00E9partementale 6086","D\u00E9partementale 84","D\u00E9partementale 906","ECHANGEUR BAGNOLET","ECHANGEUR ISSY","ECHANGEUR ORLEANS","ED.VAILLANT(RUE) 75A117","EDITH CAVELL","EDITH CAVELL (R)","EDMOND ROSTAND (RUE)","EDOUARD HERRIOT","EDOUARD VAILLANT RUE","EGALITE (BOULEVARD DE L'","EGALITE (DE L')","EGALITE (RUE DE L')","EISENHOWER (AVENUE)","ELLEON (AVENUE)","ELYSIQUES (VOIES DES)","EMBRUN ( AVENUE D')","EMMANUEL CHABRIER)","EMPEREUR (ROUTE DE L') E","ERNEST RENAN","ESCADRILLE NORMANDIE NIE","ESSERTS (CARREFOUR DES)","ESTAQUE PLAGE","ESTIENNE D'ORVES (RUE D'","ESTIENNE D'ORVES BOULEVA","ETAMPES (ROUTE D')","ETANG ROUTE","ETANGS  (AVENUE DES)","ETHIS RUE MARCEL","ETIENNE CUCCA-CD908 (AVE","ETIENNE DOLET (R)","ETOILE (RUE DE L')","ETRETAT ( ROUTE D')","ETTORE BUGATTI (RUE)","EUGENE DERUELLE","EUGENIE","EUROPE  ROND POINT DE","EUROPE (DE 161 A 199)","EUROPE (DE 201 A 215)","EUROPE (PLACE DE L')","EUROPE (PONT DE L )","EUROPE DE L'","EUROPE(AVENUE DE L')","EVREUX (PLACE D')","EXODE","Europe ( rond point de l","FABRON (AV. DE) (A PARTI","FAIDHERBE RUE","FAITA VINCENT (RUE)","FAUBOURG  PONT NEUF (RUE","FAUBOURG D'ARRAS RUE","FAUBOURG PONT NEUF (RUE","FAUCIGNY (RUE DU)","FAURE QUAI","FAURIEL (COURS)","FERROUL","FERRY (AVENUE JULES)","FERRY (BOULEVARD JULES)","FEYTIAT (RUE DE)","FIGUEROLLES FAUBOURG","FIL D'ARIANE","FIL D'ARIANE (RD902)","FILAUX (RUE ABBE)","FINKMATT (QUAI)","FLAMANDS (ROND POINT)","FLAMBOYANTS ( ALLEE DES","FLAUBERT (RUE GUSTAVE)","FLORIAN ( ROND POINT)","FLORISSANT (AVENUE)","FOCH (AV)","FOCH (AVENUE MARECHAL)","FOCH (BOULEVARD MAL.)","FOCH (BOULEVARD MARECHAL","FOCH (RUE)","FOCH MARECHAL","FOCH RUE DU MARECHAL","FOLLAZ (AVENUE DES)","FORET NOIRE (AVENUE DE L","FORGES (RUE DES)","FORT (AVE)","FORT (RUE DU)","FORT BLOQUE (RUE DU)","FORT UHRICH (ROUTE DU)","FORTIN (AVENUE JEAN-BAPT","FOUGERAS (RUE DE)","FOUGERES (ROUTE DE)","FOULON (AVENUE PROFESSEU","FOURMIES (BOULEVARD DE)","FRACHON BENOIT AVENUE","FRAGONARD (BOULEVARD ET","FRANCE (R. DE) DU N\u00F8 1-2","FRANCE ANATOLE (DE 55 A","FRANCE ANATOLE ENTREE A1","FRANCE BOULEVARD DE","FRANCE LIBRE  AVENUE DE","FRANCHE COMTE RUE DE","FRANCOIS MITTERAND ( AVE","FRANCOIS MITTERAND (AVEN","FRANCOISE DUPARC (Bd)","FRANKLIN ROOSEVELT","FRANKLIN ROOSEVELT (COUR","FRAN\u20ACOISE DUPARC (Bd)","FREDERIC MISTRAL (AV)","FRIEDBERG (BD DE)","GABRIEL PERI  (AVENUE)","GAGNY (AVENUE DE)","GAL DE GAULLE AV. DU","GALLIENI (QUAI)","GALLIENI AVENUE","GAMBETTA (AV)","GAMBETTA (JUSQU'AU N\u00F8 62","GAMBETTA AV.","GAMBETTA LEON RUE","GANGES (ROUTE DE","GARE (AV DE LA)","GARE (AVENUE DE LA)","GARE (DE LA)","GARE D'EAU AV.  DE LA (i","GARENNE","GARIBALDI (BOULEVARD) N\u00F8","GARIGLIANO (PONTS)","GARNIER (ABBE)","GASQUET (AVE JOSEPH DE 1","GASTON LACOSTE","GAULLE (AVENUE DU GENERA","GAULLE (RUE DU GAL DE)","GAULLE BOULEVARD CHARLES","GENERAL DE CASTELNAU (RU","GENERAL DE GAULLE  (AVEN","GENERAL DE GAULLE (QUAI","GENERAL LECLERC  (RUE DU","GENERAL LECLERC (BOULEVA","GENERAL LECLERC (PLACE D","GENERAL LECLERC(AVE DU)(","GENERAL ROGUET (RUE DU)","GENERAL TOUZET DU VIGIER","GEORGES BRAQUE (RUE)","GEORGES GUINGOUIN(RUE)","GEORGES GUYNEMER (AV)","GEORGES POMPIDOU","GEORGES POMPIDOU (RUE)","GEORGES POMPIDOU AVENUE","GERARDMER (route de)","GERLAND (DE)","GIRATOIRE MARINGOUINS","GIRAUDEAU (RUE)","GIRONDINS AVENUE DES","GLACIERE (RUE DE LA)","GLASGOW (DE 1 A 9 ET 2 A","GORBELLA (BD DE)","GORGE DE LOUP","GOUFFE (COURS)","GOUMS (AVENUE DES)","GOURGUETTES (RUE DES)","GRAND SAINT JEAN (RUE DU","GRAND'RUE","GRANDE (RUE)","GRASSE AVENUE DE","GRESILLONS ( AVENUE DES","GRIGNY (ROUTE DE)","GROS MALHON (AVENUE)","GUEIDON (BOULEVARD)","GUERINAIS (BD DE LA)","GUESDE ( AVENUE JULES )","GUESDE (RUE JULES)","GUILLAUDOT ( DU GENERAL","GUILLEMARD (RUE ROBERT)","GUILLOU (BOULEVARD YVES)","GUILLOUX (LOUIS)","GUIRAUD ALEXANDRE","GUITON   AVENUE JEAN (16","GUSTAVE LEVEILLE (R)","GUTENBERG BOULEVARD","Grand rue","G\u0090N\u0090RAL FERRIE (PLACE)","G\u00E9n\u00E9ral de Gaulle  ( ave","HAGUENAUER (RUE DU GRAND","HAUTPOUL (BOULEVARD)","HAVRE. ROUTE DU","HEDDE (AVENUE DANIEL)","HENON","HENRI BARBUSSE (AVE) N\u00B01","HENRI BARBUSSE (BOULEVAR","HENRI BARBUSSE (R)","HENRI BECQUEREL (RUE)","HENRI FAISANS","HENRI IV (BOULEVARD)","HENRI LANGLOIS","HENRI MATISSE (RUE)","HERBET FOURNET (BOULEVAR","HOOVER AVENUE DU PRESIDE","HOUOT (AVENUE CDT)","HUGO VICTOR","HUGO VICTOR (BOULEVARD)","HUIT MAI 1945 (AVENUE DU","HUIT MAI 1945 RUE DU","ILE DE FRANCE (RUE DE L'","IMPERIALE (Route) D464","IMPERIALE - ROUTE","INDUSTRIE (BOULEVARD DE","INDUSTRIE (DE L')","INDUSTRIE (RUE DE L')","INDUSTRIEL. BOULEVARD (C","INKERMANN (BOULEVARD D')","Inter D51C et D46","JACQUARD (BOULEVARD)","JACQUARD (RUE)","JACQUES KABLE (RUE)","JADFARD (RENE)","JARDIN DES PLANTES (DU)","JARDINS (RUE DES)","JARDINS RUE DES","JAURES ( AVE JEAN )","JAURES AVENUE JEAN","JAURES JEAN -BD- PAIR","JAURES JEAN AVENUE.","JEAN CAGNE","JEAN JACQUES ROUSSEAU (P","JEAN JACQUES ROUSSEAU (R","JEAN JAURES      (Rue)","JEAN JAURES (AVENUE) N\u00B0","JEAN JAURES (BD) DE (1 A","JEAN JAURES (BD) DE 47 A","JEAN JAURES RUE","JEAN LOLIVE (AVENUE)(137","JEAN LOMBARD (AVENUE)","JEAN MERMOZ (BD)","JEAN MONNET (BD)","JEAN MONNET (RUE)","JEAN MOULIN (BOULEVARD)","JEAN PIERRE LEVY (ALLEE)","JEAN XXIII","JEAN XXIII AVENUE","JEANPIERRE (AVENUE MAURI","JODINO (DE)","JOFFRE (RUE DU MARECHAL)","JOLIOT CURIE (AVENUE)","JOUCHOUX RUE AUGUSTE","JOUHAUX (AV. LEON)","JULES CANTINI (AV)","JULES CHAGOT (QUAI)","JULES DURAND (BD)","JULES FERRY (RUE)","JULES GUESDES AVENUE","JULIETTE RECAMIER","Jean Jaures (Avenue)","KENNEDY   AVENUE DU PRES","KENNEDY (AV DU PDT. JOHN","KENNEDY (AVENUE DU PRESI","KENNEDY (BD JOHN-FITZGER","KERFEUNTEUN RUE DE","KERGUERES (Route de)","KERUSTUM  ROND POINT DE","KERVAO","KESLER-DEVILLERS ( AV. )","KITCHENER MARCHAND","KOENIG (BOULEVARD GENERA","L A C R A R N 7","LA FONTAINE","LA FONTAINE (BOULEVARD)","LA GARENNE","LAC DE MAINE AVENUE","LACROIX (BOULEVARD DU DO","LAENNEC (BD DU DR RENE)","LAENNEC (BD RENE)","LANGEVIN PAUL (AVENUE)","LANGEVIN PAUL - IMPAIRS","LAREVELLIERE","LAURENCIE (AVENUE CAPITA","LAUSANNE (RUE DE)","LE  BOURG","LE CHATELIER","LE GUENNEC LOUIS BOULEVA","LE GUILLOUX (HENRI)","LE PAVILLON","LECLERC   AVENUE DU GENE","LECLERC (AVENUE DE LA DI","LEDRU ROLLI (BOULEVARD)","LEDRU ROLLIN (AV)","LEFERME (BOULEVARD PAUL)","LEMAITRE THOMAS RUE","LEMAN (AVENUE DU)","LENINE (AVENUE) NR 2 A 2","LENINE (AVENUE) NR 28 A","LEON BERARD","LEON BLUM","LEON BOURSIER","LEON JOUHAUX","LEON MARCHAND (AV)","LEPANTE (R. DE)","LEPOUZE (RUE)","LEROY PLACE","LES BLACHES","LES BRUYERES","LESVEN JULES (DE 26 A 58","LIBERATION (RTE DE LA)","LIBERATION - AVENUE","LIBERTE (BOULEVARD DE LA","LIBERTE (DE LA)","LIBERTE (PLACE DE LA)","LIBERTE BOULEVARD","LIMOGES (AVENUE DE)","LISE","LITTORAL (CHEMIN DU)","LOGE (RUE DE LA)","LORRAINE (RUE DE)","LORRAINE BOULEVARD","LOUBES (ROUTE DES)","LOUIS BECKER        (Rue","LOUIS BLANC","LOUIS BLANC (QUAI)","LOUIS CALMEL (RUE) (1)","LOUIS PASTEUR (QUAI)","LOUIS VANNINI (RUE)","LOUISE MICHEL (RUE)","LOUISON BOBET (AV)","LUCIEN GRELINGER (AV)","LUXEMBOURG (AV DU)","LUYE ( ROUTE DE LA )","LYAUTEY (AV. DU MAL)","LYONNAIS (DU)","Le Joblin","Les Galets","Les quatre chemins","Louis VILLECROZE (Bld)","MACCHABEES (DES)","MACON (ROUTE DE)","MADELEINE (DE LA)","MADRAGUE DE MONTREDON (A","MAERTENS GEORGES RUE","MAGA (RD-PT JEAN)","MAHIEU (AV)","MAI 1945 (AVENUE DU 8)","MAIRIE (RUE DE LA)","MAISON NEUVE (AVENUE DE","MAISONS NEUVES   (Place","MALADRERIE AV DE LA","MALRAUX (QUAI ANDRE)","MALZEVILLE (Rue de)","MANUFACTURE NATIONALE (P","MARAIS (RUE DU)","MARANA (ROUTE)","MARCEL BOYER (QU)","MARCEL CACHIN","MARCOING (ROUTE DE)","MARECHAL DELATTRE DE TAS","MARECHAL FOCH ( AVENUE D","MARECHAL JOFFRE (AV DU)","MARECHAL JUIN","MARECHAL JUIN (BOULEVARD","MARIE DE MONTPELLIER","MARIE MADELEINE FOURCADE","MARIGARDE (ROUTE DE LA)","MARIUS GROSSO","MARMONT (AVENUE)","MARQUISAT (AV DU)","MARQUISATS (AVENUE DES)","MARTINE (TRAVERSE LA)","MARTYRS DE LA LIBERATION","MARX DORMOY (AV)","MAS DE CHEYLON","MAS-BOUYOL  (CITE ET BOU","MAS-DONAT (DU)","MASSENA","MATISSE (RUE HENRI)","MAUMUS (RUE JEAN)","MAUPASSANT (Rue Guy de)","MAURIAC (RUE)","MAURICE BERTEAUX (R)","MAURICE BOKANOWSKI","MAURICE RIQUIEZ (QUAI)","MAURICE THOREZ (RUE)","MAZAGRAN (RUE DE)","MELINA MERCOURI","MELUN (AV DE)","MENDES FRANCE (AV)","MENDES FRANCE AVENUE PIE","MERE ELISABETH RIVET","MERIMEE (PROSPER)","MERLAN (AVENUE)","METALLURGIE (AVENUE)","METZ (ROUTE DE)","MEUDON (RUE DE) - COTE P","MICHELET","MICHELET (RUE DU 40-27 A","MICHELET BLD","MIRABEAU (BOULEVARD)","MISTRAL (AVENUE ET PLACE","MISTRAL (BOULEVARD FREDE","MITTERRAND (AVENUE FRANC","MOLIERE (AVENUE)","MONGE (AVENUE)","MONISTROL (RUE)","MONNET   AVENUE JEAN","MONNET (RUE JEAN)","MONPLAISIR BOULEVARD","MONS (RUE DE)","MONSEIGNEUR ROMERO (COUR","MONTAGNE VERTE (RUE DE L","MONTBOUCONS CHEMIN DES","MONTE CASSINO (ROND POIN","MONTEBELLO BOULEVARD N\u00F8","MONTPELLIER (AVENUE MARI","MONTPENSIER","MORBIHAN AVENUE DU","MORET (PLACE ALEXANDRE)","MORGIOU (chemin de )","MORIERES (Route de )","MORTEAU DE (DU 0 AU 30)","MORVAN (RUE DU)","MOTTE (AVENUE ALFRED)","MOULARES (CHEMIN DE","MOULIN (BOULEVARD JEAN)","MOULIN AVENUE JEAN","MOULIN BOULEVARD","MOULIN DE CAGE (QUAI DU)","MOULIN JEAN (AV)","MOULIN MARCILLE CHEMIN","MOULIN NEUF","MOZART","MUNAT ROUTE DU","MURIERS (DES)","MUSAU (RUE DE LA)","MUSSET ALFRED -ET IMPASS","Maurice Grynfogel (Bd)","Miral","N12Y","N164","N6","N77","NANTES (AVENUE DE)","NANTES (DE)","NAPOLEON (PONT)","NAPOLEON (ROUTE)","NAPOLEON III (PONT)","NARBONNE (ROUTE DE)","NATIONALE  ( ROUTE )","NATIONALE (ROUTE)","NATIONALE 6 (CES POMPIDO","NATIONALE RUE N\u00F82 - 178B","NATIONS (AVENUE DES)","NEUHOF (ROUTE DE)","NEUILLY (RUE DE)","NID DE  PIE","NOBEL (RUE ALFRED)","NORMAN PRINCE","NORMANDIE (AVENUE DE)","NOTRE DAME","NOTRE DAME (RUE)","NOTRE DAME DE CONSOLATIO","NOUVELLE FRANCE (RUE DE","NS, AULAGNIER ( QUAI )","NS, PONT DE CLICHY","NUNGESSER-ET-COLI (BOULE","ODDO (bd)","OLOF PALME","ONZE NOVEMBRE","ORMES (RUE DES)","OSTWALD (RUE D )","PABLO NERUDA (ROND-POINT","PADOVANI ( AVE )","PAIX  AVENUE DE LA","PAIX (AVENUE DE LA)","PAIX(BLD DE LA) 1 A 39","PAPIN DENIS -BD-","PARADIS (RUE)       1 A","PARIS ( AVENUE DE )","PARIS (BOULEVARD DE)","PARIS (DE)","PARIS (RUE)","PARIS RUE DE","PARMENTIER (AV)","PARMENTIER (RUE)","PAS DU LOUP (RUE DU","PAS NOTRE-DAME (RUE DU)","PASCAL (RUE BLAISE)","PASTEUR ( AVENUE )","PASTEUR (AVENUE LOUIS)","PASTEUR (AVENUE LOUIS) N","PASTEUR (AVENUE)","PASTEUR (RUE LOUIS)","PAU (ROUTE DE)","PAUL CLAUDEL (BOULEVARD)","PAUL DAILLY","PAUL DOPFF (RUE)","PAUL DOUMER (AV)","PAVELET (AVENUE DU COLON","PAYS-BAS (AVENUE DES)","PDT WILSON(RUE) 2A24 ET","PEGOMAS (ROUTE DE)","PEGUY (RUE CHARLES)","PENESME (ROND POINT)","PENETRANTE DU PAILLON","PERREUX (R DU)","PESARO BOULEVARD DE","PESSICART (JUSQU'AU 270-","PETIT POUILLE CHEMIN ET","PETITS FOSSES (RUE DES)","PEUPLIERS (IMPASSE DES)","PIERRE BRUNIER","PIERRE CURIE (RUE)","PIERRE DE COUBERTIN  ( B","PIERRE GRENIER (AVENUE)","PIERRE SCIZE","PIERRE SEMARD (PL)","PIERRE TERRASSE","PINATEL (BOULEVARD)","PL DE VERDUN","PL MARECHAL FOCH","PLACE ALBERT KAHN","PLACE ARISTIDE BRIAND","PLACE BALARD","PLACE DE CLICHY","PLACE DE COLOMBIE","PLACE DE LA BASTILLE","PLACE DE LA NATION","PLACE DE LA PORTE DE BAG","PLACE DE VARSOVIE","PLACE DU CARROUSEL","PLACE FELIX EBOUE","PLACE HENRY DE MONTHERLA","PLACE JEAN JAURES","PLACE LEON BLUM","PLACE OCEANE","PLACE SAINT MICHEL","PLACE ST CHRISTOPHE","PLACE VAUBAN","PLATEAU DES GLIERES (AVE","PLOGONNEC ROUTE DE","POESIE (AVENUE PIERRE)","POILUS ( BD DES )","POINTIS INARD (ROUTE DE)","POISSONNIERS (CHEMIN DES","POMPIDOU (BD GEORGES)","POMPIDOU (PROMENADE)","POMPIDOU GEORGES (BOULEV","POMPIDOU GEORGES -ROND P","PONANT AVENUE DU","PONS NOEL RUE","PONT BLANC.CHARLES TILLO","PONT DE CHEVIRE","PONT DE CRETEIL - PONT D","PONT DE VIVAUX (BOULEVAR","PONT JUVENAL (AVENUE DU)","PONT MOUJA (RUE DU)","PONT NATIONAL","PONT NOIR (RUE DU)","PONT NOTRE DAME","PONT-TRENCAT (CAMI DEL)","PONTOISE AV DE","PORT (QUAI DU)","PORT (RUE DU)","PORT DE BERCY","PORT MOUTON (DU)","PORTE BRANCION","PORTE D ISSY","PORTE D'ANGERS","PORTE DE LORIENT","PORTE DE PARIS (PLACE)","PORTE DE ST MALO","POTIER (RUE EUGENE)","POULBOT FRANCISQUE","POULGUINAN BOULEVARD DE","POURCHON (BD MAURICE)","POUTINGON (CHEMIN DE)","PRADO (contre all\u201Ae)","PREMIERE ARMEE (AVENUE)","PREMIERE DFL (AVENUE)","PRES D'ARENES (AVENUE DE","PRESIDENT FRANCOIS MITTE","PRESIDENT JOHN FITZGERAL","PRESIDENT ROOSEVELT (AVE","PRESIDENT WILSON","PRESIDENT WILSON (AV DU)","PRESIDENT WILSON (RUE)","PRESLES ( BOULEVARD )","PROFESSEUR CADIOT (AV DU","PROFESSEUR PAUL SANTY (D","PROUVE JEAN (AVENUE)","PROVENCE (AVENUE DE)","PRUNIERS","PR\u00C9SIDENT PAUL DOUMER (Q","PUGETS AVENUE DES","PUTEAUX (PONT DE)","PYRAMIDES (AVENUE DES)","PYRENEES (AVENUE DES)","Place de l'Eglise","P\u201An\u201Atrante","QUAI DE LA FOSSE","QUAI DE LA GARE","QUAI DE LA MONNAIE","QUAI DE MONTEBELLO","QUAI PANHARD ET LEVASSOR","QUAI PRE AUX MOINES","QUAI SAINT EXUPERY","QUAI VOLTAIRE","QUATORZE JUILLET (RUE DU","QUATRE SEPTEMBRE (AV. DU","QUATRE SEPTEMBRE (QUAI D","QUERCY GASCOGNE RD 118 (","QUEUE EN BRIE (RTE DE LA","QUIMPER ( RUE DE)","QUINZIEME CORPS (AV. DU)","R D'ABBEVILLE","R EMILE FRANCFORT","R FRANKLIN ROOSEVELT","R JEAN JAURES","R TERRAL","R VANMARCKE","R VILLA RENEE DE FRANCE","RAMON BOULEVARD","RANCY (DES)","RAOUL SERVANT","RAVERA (AVENUE HENRI) N\u00B0","RAVIER (RUE)","RAVINE VILAINE (CHEMIN D","RAYMOND DUGRAND (AVENUE)","RAZES (DES)","RD  519","RD 10","RD 1001","RD 1004","RD 1006","RD 1044","RD 105","RD 1084","RD 111","RD 116","RD 117","RD 1201","RD 1212","RD 124","RD 125","RD 126","RD 135","RD 142","RD 152","RD 153","RD 154E","RD 160","RD 162E","RD 166","RD 177","RD 189","RD 198","RD 2009","RD 2076","RD 21","RD 223","RD 24","RD 262","RD 268","RD 306","RD 307","RD 316","RD 317","RD 32","RD 33","RD 35","RD 38","RD 389","RD 396","RD 4","RD 42","RD 421","RD 429","RD 43 C","RD 430","RD 44","RD 465","RD 47","RD 49","RD 543","RD 558","RD 559","RD 56","RD 560 A","RD 568 CLM","RD 57","RD 6009 NARBONNE - BEZIE","RD 6015","RD 61","RD 612","RD 6161 - Rocade Ouest","RD 619","RD 63","RD 650","RD 657 CHAMPEY","RD 673","RD 70","RD 70 (route d\u201Apartement","RD 704","RD 723","RD 73","RD 74","RD 766","RD 783 BEUZEC","RD 80","RD 802","RD 813","RD 813 (NOUVELLE ROCA","RD 85","RD 908","RD 91","RD 913","RD 919","RD 920","RD 925","RD 931","RD 933","RD 936","RD 938","RD 940","RD 941","RD 944","RD 950","RD 952","RD 953","RD 965","RD 97","RD 971","RD 975","RD 976","RD 992","RD POINT GASCOGNE","RD PT GRAND VERGER","RD1044","RD107","RD1075","RD1089","RD1091","RD114","RD115","RD12","RD1201","RD14","RD15","RD165","RD178","RD191","RD21","RD21 (ROUTE DE CARNON)","RD24","RD25","RD30","RD34","RD38","RD383 2.321 A 3.750","RD449","RD45","RD46","RD500","RD58","RD6015","RD607 de Barbizon \u2026 pav\u201A","RD610","RD613","RD618","RD642","RD81","RD83","RD840","RD89","RD900","RD913","RD918","RD926","RD950","RD991","RD994","RD999","REDON (BOULEVARD du)","REDOUTE (ROUTE DE LA)","REIMS (DE)","REINE (ROUTE DE LA) 1\/37","RENARD (RUE EDOUARD)","RENOIR (AVENUE AUGUSTE)","REPUBLIQUE (AV. DE LA)","REPUBLIQUE (AVE DE LA)","REPUBLIQUE (BD DE LA)","REPUBLIQUE (COURS DE LA)","REPUBLIQUE (DE LA) (BD)","REPUBLIQUE (RUE DE LA) N","REPUBLIQUE (RUE)","REPUBLIQUE (VLA DE LA)","REPUBLIQUE RUE DE LA","REPUBLIQUE. RUE DE LA","RESISTANCE (AV. DE LA -P","REVOLUTION (QU DE LA)","RHIN (AVENUE DU)","RHIN (ROUTE DU)","RHIN ET DANUBE ( AVENUE)","RHIN ET DANUBE(RUE DU)","RHONE (DU)","RIMIEZ (AV. DE)","RIOU (BOULEVARD DU)","RISSO (BD)","RIVE DE GIER (DE) (RTE)","RIVOTTE  FAUBOURG","RN 1","RN 1031","RN 1057 (ROUTE DE GRAY-C","RN 116","RN 12 (PEN AR CH'LEUZ A","RN 13","RN 134","RN 14 (PROLONGEMENT A15)","RN 151","RN 154","RN 158","RN 17","RN 171","RN 296","RN 31","RN 4","RN 431","RN 57","RN 6","RN 6 (PARTIE FORET)","RN 6 (REVEIL MATI","RN 77","RN 8","RN. 147","RN1 Majicavo Koropa","RN10","RN1014 Y","RN104.EXT","RN109","RN113","RN116","RN134","RN157","RN165 (VE)","RN3 (ROUTE NATIONALE)","RN346   34.850 A 36.215","RN346   38.960 A 40.883","RN5-BOISRIPEAUX","RN57","RN6","RN6 (CHARTONNIERE)","RN7 DEV PLV","RN77","RN79","ROBERT SCHUMAN (AVENUE)","ROBERT SCHUMANN (RUE)","ROBESPIERRE (DE 1 A 31 E","ROBESPIERRE BD","ROCADE 10-11","ROCADE 13-14","ROCADE G.POMPIDOU (DU 7","ROCADE SUD","ROCH GLAS (ROUTE ET CHEM","ROCHAT AV.PHILIPPE","RODIN (BOULEVARD)","RODOCANACHI (BOULEVARD)","ROETHIG (RUE DU)","ROGER BRUN (RUE)","ROGER SALENGRO (NATIONAL","ROMAIN ROLLAND","RONCEVAUX R","ROND POINT DE KERESSEIS","ROOSEVELT (AVENUE FRANKL","ROSIERES (AVENUE DE)","ROUET (RUE DU)","ROUGET DE L'ISLE (RUE)","ROUTE D'EPERNAY","ROUTE D'OLIVET","ROUTE D'ORLEANS","ROUTE DE BAYONNE","ROUTE DE BORDEAUX","ROUTE DE CALAIS","ROUTE DE CAPESTANG-RD11","ROUTE DE CHALONS","ROUTE DE CIBOURE","ROUTE DE DIEPPE","ROUTE DE GARGES","ROUTE DE LA CHAPELLE","ROUTE DE LA FERME","ROUTE DE LA MUETTE A NEU","ROUTE DE LA PTE DAUPHINE","ROUTE DE LA PTE DES SABL","ROUTE DE LA SERRE DE CAZ","ROUTE DE LA TOURELLE","ROUTE DE MONTJOLY","ROUTE DE PROVINS","ROUTE DE SANDILLON","ROUTE DE SAVONNIERES","ROUTE DE WITRY","ROUTE DEPARTEMENTALE 29","ROUTE DEPARTEMENTALE 70","ROUTE DES MOULINS","ROUTE DU SACRE COEUR","ROUTE NATIONALE 113-L'AN","ROUTE NATIONALE 41","ROUTE NATIONALE 5","ROVARCH (AVENUE PIERRE)","ROYALE","RTE DE PARIS","RTE DE ROUEN","RTE DE SAINT BARDOUX","RTE D\u00C9PARTEMENTALE 1091","RTE SANDILLON\/RTE ST CYR","RTE d\u00E9partementale 419","RUE ABBAYE","RUE ANTONIN VALLON","RUE ARISTIDE BRIAND","RUE ARMAND CARREL","RUE BALZAC","RUE BERTHIE ALBRECHT","RUE CARNOT","RUE CARPEAUX","RUE CHARLES DE GAULLE","RUE CLAUDE BERNARD","RUE COPERNIC","RUE D AMSTERDAM","RUE D'ARCOLE","RUE DE BELLECHASSE","RUE DE BERNEX","RUE DE COULMIERS","RUE DE DANTZIG","RUE DE GRENELLE","RUE DE JAVEL","RUE DE L AMIRAL MOUCHEZ","RUE DE L OURCQ","RUE DE L'EUROPE","RUE DE LA GARE","RUE DE LA SOURCE","RUE DE LILLE","RUE DE LONGCHAMP","RUE DE LORRAINE","RUE DE MENILMONTANT","RUE DE METZ","RUE DE MIROMESNIL","RUE DE MONTREUIL","RUE DE PATAY","RUE DE PICPUS","RUE DE PITCHOT","RUE DE PONTOISE","RUE DE STALINGRAD","RUE DE STRASBOURG","RUE DE TURBIGO","RUE DE VERDUN","RUE DE VOUILLE","RUE DE WATTIGNIES","RUE DES ALLIES","RUE DES COSMONAUTES","RUE DES FOUGERES","RUE DES HAUTES LEVEES","RUE DES PETITS CHAMPS","RUE DES PEUPLIERS","RUE DES PLANTES","RUE DES POISSONNIERS","RUE DES SAINTS PERES","RUE DES TANNEURS","RUE DOUDEAUVILLE","RUE DU 11 OCTOBRE","RUE DU 14 JUILLET","RUE DU CHATEAU DES RENTI","RUE DU CHEMIN DE FER","RUE DU CHEVALERET","RUE DU DEPART","RUE DU DOCTEUR CHARCOT","RUE DU FAUBOURG BONNEFOY","RUE DU FAUBOURG DU TEMPL","RUE DU FAUBOURG SAINT JA","RUE DU GENERAL DE LANGLE","RUE DU G\u00C9N\u00C9RAL DE GAULLE","RUE DU MARECHAL FOCH","RUE DU MARECHAL LECLERC","RUE DU MOULIN","RUE DU QUATRE SEPTEMBRE","RUE DU RANELAGH","RUE DU SAHEL","RUE DU STAND","RUE DU TEMPLE","RUE DU VAL DE MARNE","RUE DUPUY DE LOME","RUE EMILE ZOLA","RUE ETIENNE MARCEL","RUE FRAGONARD","RUE FRANCIS GARNIER","RUE FROIDEVAUX","RUE GAETAN RONDEAU","RUE GAMBETTA","RUE GAY LUSSAC","RUE JANKEL SEGAL","RUE JEAN HENRI FABRE","RUE JEAN MERMOZ","RUE JEAN PIERRE TIMBAUD","RUE JULES STAAT","RUE LANSON","RUE LAURISTON","RUE LEON JOUHAUX","RUE LINOIS","RUE LOUIS ARMAND","RUE LOUIS PLANA","RUE LOUIS VICAT","RUE LUCIEN SAMPAIX","RUE MONTMARTRE","RUE MONTPENSIER","RUE PARROT","RUE PASQUIER","RUE PHILIPPE DE GIRARD","RUE PIERRE BROSSOLETTE","RUE RAYMOND LOSSERAND","RUE RAYMOND POINCARE","RUE RAYNOUARD","RUE REAUMUR","RUE SAINT CHARLES","RUE SAINT MARTIN","RUE STEPHENSON","RUE TAITBOUT","RUE THEODORE BULLIER","RUE TRONCHET","RUE VAN GOGH","RUE VIVIENNE","RUGNY (AVENUE DE)","Route D\u201Apartementale 437","Route D\u00E9partementale 1","Route D\u00E9partementale 29","Route D\u00E9partementale 30","Route D\u00E9partementale 33","Route D\u00E9partementale 341","Route Gabriel Mac\u00E9","Route Nationale 7","Route Nationale 83","Route de Bourg","Route de Moulins","Route de PLASCASSIER","Route de Saverne","Route d\u00E9partementale 1","Route d\u00E9partementale 120","Route d\u00E9partementale 13","Route d\u00E9partementale 21","Route d\u00E9partementale 28","Route d\u00E9partementale 3","Route d\u00E9partementale 6","Route d\u00E9partementale 86","Route d\u00E9partementale 901","Route d\u00E9partementale 906","Route nationale 113","Rte Nationale 83","Rte ancienne RN1","Rte de la Ligne Paradis","Rte d\u00E9partementale 11","Rte d\u00E9partementale 11.6","Rte d\u00E9partementale 21","Rte d\u00E9partementale 473","Rte d\u00E9partementale 48.1","Rte d\u00E9partementale 83","Rue Archambaud","Rue Augustin Archambaud","Rue Luc Lorion","Rue de la Mairie","Rue de la gare","Rue de la source","Rue du Haut Bourg","Rue du Lyc\u00E9e","Rue du Mar\u00E9chal Leclerc","Rue du Pont","Rue du g\u00E9n\u00E9ral de Gaulle","Rue du parc","Rue nationale","R\u00E9publique ( boulevard d","SABLARD (AVENUE DE)","SABLIERE (AV DE LA)","SABLONS (AVENUE DES)","SADI CARNOT (PLACE)","SAINT BARNABE (AVENUE DE","SAINT DENIS  (RUE   )","SAINT DENIS (RUE)","SAINT DENIS BD (120 A 17","SAINT DIZIER (RUE 2 A 80","SAINT DIZIER (RUE 82 ET","SAINT GERMAIN (AVENUE DE","SAINT GERMAIN DES NOYERS","SAINT GILLES (ROUTE)","SAINT JEAN DU DESERT (CH","SAINT JUST (AVENUE DE)","SAINT JUST DES MARAIS (R","SAINT LAZARE (AVENUE DE)","SAINT LEU (ROUTE DE) > 1","SAINT LEU (ROUTE)","SAINT MARC (DE 64 A 112","SAINT MENET (MONTEE)","SAINT MICHEL (BD)","SAINT NAZAIRE (BOULEVARD","SAINT OMER (ROUTE DE)","SAINT-DENIS (RUE DE)","SAINT-DENIS BD (120 A 17","SAINT-DIE (AV. DE)","SAINT-MALO (RUE DE)","SAINT-MARC (AVENUE)","SAINT-SIMON.(RUE ET VILL","SAINTE ANNE (BOULEVARD)","SAINTE BARBE (RUE)","SAKAKINI (BD)","SALAUN PENQUER","SALVATORE ALLENDE (BOULE","SALYENS ( AVENUE DES )","SAMPIERO BD","SAMPIERO CORSO - AV","SANARY (ROUTE DE)","SARI - AV EMILE","SARTENE ANCIENNE ROUTE","SARTRE (AVENUE JEAN-PAUL","SAUVY (ALFRED)","SAVIDAN (RUE JEAN)","SAVIGNY (RUE DE)","SCALIGER (BOULEVARD)","SCHLOESING (Boulevard)","SCHUMAN (BOULEVARD ROBER","SCHUMANN (AVENUE)","SCHWEITZER (RUE DU DOCTE","SEL (ROUTE DU)","SEMARD (AVENUE PIERRE)","SEMARD (BD PIERRE)","SENNECE (ROUTE DE)","SERBIE (DE)","SERGENT MICHEL BERTHET (","SERVIENT","SEVERIN SAURIN (RUE)","SIDI BRAHIM (AVENUE)","SIDOBRE RD 622 (AV. DU)","SOLFERINO RUE N\u00F8208-FIN-","SOLVIOU (CORNICHE DE)","SONIA DE LAUNAY (VOI)","SOULTZ(ROUTE DE)","SOUTERRAIN CHAMPERRET","SOUTERRAIN VAN GOGH","ST BONNET DE MURE (DE)","ST CLAIR (DE)","ST CYR (DE)","ST FLORENT-ANCIENNE RT D","ST-LOUIS (BD)","STALINGRAD (AVENUE DE)","STALINGRAD (AVENUE DE) D","STALINGRAD (AVENUE)","STALINGRAD (QUAI DE)","STALINGRAD RUE DE","STANG AR C'HOAT RUE","STENDHAL (AVENUE)","STEPHANE DECHANT","STEPHANOPOLI NICEPHORE","STRASBOURG (BOULEVARD)","STRASBOURG (PLACE)","SUCHET","SULLY  (RUE)","SULLY (RUE)","Saint-Guillaume","Sens Toulon vers Aubagne","T40","TANNEURS (RUE DES)","TARDY (DE)","TASSIGNY \/ GRANGE","TEILLET (RTE DE)","THIERS (AVENUE)","THIERS (RUE)","THONON (ROUTE DE)","THOREZ (AVENUE MAURICE)","THUMENAU (RUE DE LA)","TILLEULS (RUE DES)","TILLON (AVENUE CHARLES)","TOMBLAINE (RUE DE)","TOURAINE (BOULEVARD DE)","TOURBIE PLACE DE LA","TOURNAI (ROUTE DE)","TRAVERSIERE (R)","TREGUNC (ROUTE DE)","TREVOUX (AVENUE DE)","TRIAIRE SERGENT (BOULEVA","TROIS MAIRES (RUE DES)","TROPIQUES (AVENUE DES)","TROYES (DE) (BOULEVARD)","TUNNEL","TURCAN FRANCIS","UNIVERSITE CHICAGO (RUE","UZES (ROUTE D')","VA007306 A64","VA007342 LA CEPIERE  A62","VAILLANT COUTURIER (RUE)","VALENTON (AV DE)","VALIN (AVENUE DU GENERAL","VALLES (JULES)","VALLON (R DU)","VALLON (RUE DU)","VALLON DE TOULOUSE (RUE)","VANIERES (AVENUE DE)","VASSOU RUE","VAUGUEUX (RUE DU)","VEIL (AV. SIMONE)","VENDOME (AVENUE DE)","VERDUN (AV DE)","VERDUN (AVENUE DE) DU 11","VERDUN (AVENUE DE, N\u00F8 13","VERDUN (BOULEVARD DE)","VERDUN (COUR DE)","VERDUN (DE)","VERDUN AVENUE DE","VERDUN PERRACHE","VERNEUIL (ROUTE DE)","VERNEY CARRON CLAUDE","VERS ECHANG VILLENEUVE","VERSAILLES (ROUTE DE)","VERTHAMONT (RUE DU GUE)","VEST FERDINANT","VIADUC (RUE DU)","VIC. HUGO(RUE)091A113 ET","VICTOIRE (BOULEVARD DE L","VICTOIRE (RUE DE LA)","VICTOR AUGAGNEUR","VICTOR BASCH (AVENUE)","VICTOR BASCH (RUE)","VICTOR HUGO ( R )","VICTOR HUGO (AV.VILLA.RU","VICTOR HUGO (AVE)  => 12","VICTOR HUGO (AVENUE) 49\/","VICTOR HUGO (BD)","VICTOR HUGO (BOULEVARD)","VICTOR HUGO (R)","VIEILLE POSTE (RUE DE LA","VIEUX BOURG","VIEUX MOULIN (RUE DU)","VIEUX PONT RUE DU","VIEUX VIVY (ROUTE DU)","VIGNAU (AV DU)","VILLE JOUHA (BD DE LA)","VILLENEUVE   RUE","VILLENEUVE LE ROI (PONT","VILLENEUVE-ANGOULEME (AV","VILLIERS(RUE DE)  54A86","VINGT SIXIEME R.I. (BOUL","VITRE (BLD DE)","VOIE DES BERGES","VOIE JEAN TAITTINGER","VOLTAIRE","VOLTAIRE ( BD 16 A FIN )","VOLTAIRE (R)","Valade","Village","WINSTON CHURCHILL","WITTLICH (ROND POINT)","YOURI GAGARINE (AV)","YSER (RUE DE L')","ZOLA (RUE EMILE)","ZONE COLLERY I OU II","ZONE COMMERCIALE AUCHAN","a13","a40","a43","all\u00E9e du PLESSIS","autoroute A1","autoroute A52","autoroute A6","autoroute A709","ave Georges POMPIDOU","avenue Jacques DUCLOS","avenue Jean Jaur\u00E8s","avenue aristide briand","avenue de bordeaux","avenue de la Paix","avenue de la liberation","avenue de la lib\u00E9ration","avenue de la m\u00E9diterran\u00E9","avenue de la r\u00E9publique","avenue de verdun","avenue du 11 novembre 19","avenue du 8 mai 1945","avenue du chater","avenue du g\u00E9n\u00E9ral de gau","avenue jean moulin","avenue marcel dassault","boulevard Jean Moulin","boulevard Pasteur","boulevard de la pr\u00E9fectu","boulevard jean guigues","cavani-Belle vue (rue)","cavani-Cavani Massimoni","chemin vicinal","d15","d16","d660","d994","doujani-Mouhindi Hassani","kaweni-Centrale EDM (rue","kaweni-Geole ( rue de la","kaweni-Lazerevouni ( rue","kaweni-Mangrove (route d","kaweni-Poste ( rue de la","kaweni-SPPM ( rue de la","les combes","les quatres routes","lieu dit le cormier","lieu dit patau","m'tsapere-M'tsap\u201Ar\u201A- M't","m'tsapere-Maeventana (ru","m'tsapere-Mosqu\u201Ae Maevan","mamoudzou centre-Rassi B","mgombani-Baobab ( Bd )","passamanty-Vahib_E( rout","place Charles De Gaulle","place de la LIBERTE","pont mathilde","quai Paul BERT","quai de PORTILLON","rd 5","rd 8","rocade D520","route d'Antibes","route de Bonifacio","route de Bruyeres","route de Clermont","route de DIEPPE","route de Montjoly","route de chouvigny","route de roujan","route de saint jean","route de saint pierre","route des cretes","route des \u00E9tangs","route d\u00E9partementale 111","route d\u00E9partementale 820","route d\u00E9partementale 934","route nationale 113","route nationale 13","route nationale 20","route nationale 4","route territoriale 20","rue Edouard VAILLANT","rue Ernest HUARD","rue L\u00E9on BOYER","rue Michelet","rue carnot","rue de CORMERY","rue de beauvais","rue de l'\u00E9galit\u00E9","rue de la R\u00E9publique","rue de la R\u00E9sistance","rue de la chapelle","rue de la libert\u00E9","rue de la r\u00E9sistance","rue des MARTYRS","rue des canadiens","rue du 11 novembre","rue du cimeti\u00E8re","rue du parc","rue pasteur","rue racine","rue roger salengro","tsoundzou-Stara (rue)","x, PEGOMAS (ROUTE DE)","\"8 MAI 45 (AVENUE \"\"N\u00B0 2"," * "],
					"frequencies": [403,213,171,168,162,146,144,142,140,112,90,83,76,69,63,61,51,46,43,39,38,37,35,34,33,33,32,31,30,30,30,30,29,29,29,28,28,28,27,27,27,27,26,26,26,26,26,25,25,25,25,23,23,23,23,23,23,22,22,22,21,21,21,21,21,20,20,20,20,20,19,19,19,19,19,19,18,18,18,17,17,17,17,17,17,17,17,17,16,16,16,16,16,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,23326]
				}
			},
			"R069": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Category)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Car<=3.5T","Motorbike>125cm3","Utility","Other","Quadricycle","QuadBike>50cm3","Coach","Tramway","QuadBike<=50cm3"],
								["Bicycle","Moped","Scooter<50cm3","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Scooter>125cm3","Bus","LargeCar_3.5T-7.5T","Truck"],
								["LargeCar>7.5T","LargeCar+Trailer>3.5T","Truck+SemiTrailer","SpecialEngine","Tractor","Train"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1854,30984],
						[262,6714],
						[110,546]
					],
					"partInterests": [0.00863766,0.297615,0.693748]
				},
				"inputValues": {
					"values": ["Car<=3.5T","Bicycle","Motorbike>125cm3","Utility","Moped","Scooter<50cm3","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Scooter>125cm3","Bus","LargeCar>7.5T","Other","LargeCar+Trailer>3.5T","Truck+SemiTrailer","LargeCar_3.5T-7.5T","Quadricycle","QuadBike>50cm3","Coach","SpecialEngine","Tramway","Tractor","QuadBike<=50cm3","Truck","Train"],
					"frequencies": [28921,3287,2148,1248,972,747,547,452,418,414,212,211,195,152,130,118,76,59,51,43,42,14,9,4]
				}
			},
			"R070": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.Count(Users))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,36]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[10,1262],
						[1598,28088],
						[618,8894]
					],
					"partInterests": [0.823293,0.00776559,0.168942]
				}
			},
			"R071": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Direction)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,3]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1617,30872],
						[609,7372]
					],
					"partInterests": [0.220117,0.779883]
				}
			},
			"R072": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.Count(Users))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.75],
								[0.75,1.75],
								[1.75,36]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[4,914],
						[1512,27075],
						[710,10255]
					],
					"partInterests": [0.777519,0.0257062,0.196774]
				}
			},
			"R073": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Maneuver)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1393,20345],
						[833,17899]
					],
					"partInterests": [0.434761,0.565239]
				}
			},
			"R074": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.SchoolNear",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["00"],
								["99"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1925,30398],
						[301,7846]
					],
					"partInterests": [0.179374,0.820626]
				},
				"inputValues": {
					"values": ["00","99","03",""],
					"frequencies": [32323,7150,694,303]
				}
			},
			"R075": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Category)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,4]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1492,22486],
						[734,15758]
					],
					"partInterests": [0.382722,0.617278]
				}
			},
			"R076": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Direction)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Increasing","Unknown",""],
								["Decreasing"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1145,23037],
						[1081,15207]
					],
					"partInterests": [0.428357,0.571643]
				},
				"inputValues": {
					"values": ["Increasing","Decreasing","Unknown",""],
					"frequencies": [16860,16288,7235,87]
				}
			},
			"R077": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Date.WeekDay",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,4.5],
								[4.5,7]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1099,21768],
						[1127,16476]
					],
					"partInterests": [0.457264,0.542736]
				}
			},
			"R078": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.RoadLetter",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								[""],
								["D"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2046,36539],
						[180,1705]
					],
					"partInterests": [0.0562684,0.943732]
				},
				"inputValues": {
					"values": ["","D","A","E","B","N","C","F","G","R","H","3","2","a","T","S","Z","1","L","P","X","b","4","5","6","7","J","W","K","M","Y","y","z","0"," * "],
					"frequencies": [38585,838,356,168,160,115,84,19,14,13,11,10,8,8,7,6,6,5,5,5,5,5,4,4,3,3,3,3,2,2,2,2,2,1,6]
				}
			},
			"R079": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.Slope",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Flat"],
								["Uphill"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1635,30508],
						[591,7736]
					],
					"partInterests": [0.223868,0.776132]
				},
				"inputValues": {
					"values": ["Flat","Uphill","TopHill","BottomHill","","Unknown"],
					"frequencies": [32143,6419,699,628,300,281]
				}
			},
			"R080": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.Count(Users))",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,2.5],
								[2.5,50]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1931,35000],
						[295,3244]
					],
					"partInterests": [0.1006,0.8994]
				}
			},
			"R081": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Weather",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Normal"],
								["LightRain"],
								["Overcast"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1748,30354],
						[182,4250],
						[296,3640]
					],
					"partInterests": [0.00409497,0.391851,0.604054]
				},
				"inputValues": {
					"values": ["Normal","LightRain","Overcast","HeavyRain","VeryGood","FogOrSmoke","SnowOrHail","Other","StrongWindOrStorm",""],
					"frequencies": [32102,4432,1440,909,739,306,247,210,81,4]
				}
			},
			"R082": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Place.SpecialLane",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["0",""],
								["Reserved","SeparatedBike","Bike"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2136,35359],
						[90,2885]
					],
					"partInterests": [0.062076,0.937924]
				},
				"inputValues": {
					"values": ["0","Reserved","SeparatedBike","Bike",""],
					"frequencies": [37135,1260,1124,591,360]
				}
			}
		}
	},
	"khiops_encoding": "ansi"
}
